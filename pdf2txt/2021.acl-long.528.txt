inter-gps: interpretable geometry problem solving with formallanguage and symbolic reasoningpan lu1∗, ran gong1∗, shibiao jiang2∗, liang qiu1, siyuan huang1,xiaodan liang3, song-chun zhu1,4,5,61center for vision, cognition, learning and autonomy, ucla2college of computer science and technology, zhejiang university3school of intelligent systems engineering, sun yat-sen university4beijing institute of general artiﬁcial intelligence, 5peking university, 6tsinghua universitypanlu@cs.ucla.edu, {nikepupu, liangqiu, huangsiyuan}@ucla.edu,{jiangshibiao1999, xdliang328}@gmail.com, sczhu@stat.ucla.edu.
abstract.
geometry problem solving has attracted muchattention in the nlp community recently.
thetask is challenging as it requires abstract prob-lem understanding and symbolic reasoningwith axiomatic knowledge.
however, currentdatasets are either small in scale or not pub-licly available.
thus, we construct a new large-scale benchmark, geometry3k, consisting of3,002 geometry problems with dense annota-tion in formal language.
we further proposea novel geometry solving approach with for-mal language and symbolic reasoning, calledinterpretable geometry problem solver (inter-gps).
inter-gps ﬁrst parses the problem textand diagram into formal language automati-cally via rule-based text parsing and neural ob-ject detecting, respectively.
unlike implicitlearning in existing methods, inter-gps in-corporates theorem knowledge as conditionalrules and performs symbolic reasoning step bystep.
also, a theorem predictor is designed toinfer the theorem application sequence fed tothe symbolic solver for the more efﬁcient andreasonable searching path.
extensive experi-ments on the geometry3k and geos datasetsdemonstrate that inter-gps achieves signiﬁ-cant improvements over existing methods.
1.
1.introduction.
geometry problem solving is a long-standing chal-lenging task in artiﬁcial intelligence and has beengaining more attention in the nlp communityrecently (seo et al., 2014; hopkins et al., 2019;sachan et al., 2020).
solving geometry problemsis an essential subject in high-school education forthe development of students’ abstract thinking.
asan example shown in figure 1, given problem text.
∗equal contribution.
1the project with code and data is available at https:.
//lupantech.github.io/inter-gps..figure 1: a data example in geometry3k dataset.
eachdata is annotated with formal language descriptions..in natural language and a corresponding diagram,one needs to identify the geometric relations, applytheorem knowledge, and conduct algebraic calcula-tions to derive the numerical value of the answer.
psychologists and educators believe that solvinggeometric problems requires high-level thinkingabilities of symbolic abstraction and logical reason-ing (chinnappan, 1998; nur and nurvitasari, 2017).
however, if algorithms take the raw problem con-tent, it might encounter challenges to understandthe abstract semantics and perform human-like cog-nitive reasoning for inferring the answer in the ge-ometry domain.
a formal language is composed ofwords from a well-formed alphabet based on a spe-ciﬁc set of rules and is commonly used in the ﬁeldsof linguistics and mathematics.
therefore, our pro-posed geometry solver parses the problem inputsinto formal language descriptions (see examples infigure 1) before solving the problems..to translate the problem text and diagrams toformal descriptions, existing methods (seo et al.,2015; sachan et al., 2017; sachan and xing, 2017)highly depend on human annotations like symbolsin diagrams as the intermediate results.
also, thesemethods fail to provide the explicit reasoning pro-cesses when predicting the answer.
for example,(seo et al., 2015) simpliﬁes the problem solvingtask to an optimization problem to pick one thatsatisﬁes all constraints from choice candidates.
fur-.
proceedingsofthe59thannualmeetingoftheassociationforcomputationallinguisticsandthe11thinternationaljointconferenceonnaturallanguageprocessing,pages6774–6786august1–6,2021.©2021associationforcomputationallinguistics6774in triangle abc, ad = 3 and bd= 14. find cd.choices:a.
6.0    b.
6.5    c. 7.0    d. 8.5answer: bbdcatriangle(a,b,c)equals(lengthof(line(a,d)),3)equals(lengthof(line(b,d)),14)find(lengthof(line(c,d)))text formal languagetriangle(a,b,c)triangle(a,c,d)triangle(b,c,d)pointliesonline(d,line(a,b))perpendicular(line(a,c),line(b,c))perpendicular(line(c,d),line(a,b))diagram formal languagethermore, most current datasets are either small inscale or not publicly available (seo et al., 2015;sachan and xing, 2017), which further hinders theresearch of geometry problem solving..to overcome these challenges, we ﬁrst constructa new large-scale benchmark, called geometry3k,to assess algorithms’ performance of geometryproblem solving.
the geometry3k dataset consistsof 3,002 multi-choice problems as well as coversdiverse geometric shapes and problem goals.
incontrast with existing work, we also annotate eachproblem text and diagram with uniﬁed structuraldescriptions in formal language..this paper further presents a novel geometrysolving approach with formal language and sym-bolic reasoning, called interpretable geometryproblem solver (inter-gps).
inter-gps (figure 4)develops an automatic parser that translates theproblem text via template rules and parses diagramsby a neural object detector into formal language,respectively.
in contrast to parameter learning,inter-gps formulates the geometry solving taskas problem goal searching, and incorporates the-orem knowledge as conditional rules to performsymbolic reasoning step by step.
it demonstratesan interpretable way to tackle the task.
also, wedesign a theorem predictor to infer the possible the-orem application sequence in inter-gps for the efﬁ-cient and reasonable searching path.
extensive ex-periments on the geometry3k and geos datasetsshow inter-gps achieves large improvements overexisting methods..our contributions are three-fold: (1) we intro-duce a large-scale diverse benchmark of geometryproblem solving, geometry3k, which is denselyannotated with formal language; (2) we developan automatic problem parser to translate the prob-lem text and diagram into formal language; (3) wepropose a novel interpretable problem solver thatapplies symbolic reasoning to infer the answer..2 related work.
datasets for geometry problem solving.
sev-eral datasets for geometry problems have beenreleased in recent years.
these include geos(seo et al., 2015), geos++ (sachan et al., 2017),geoshader (alvin et al., 2017) and geos-os(sachan and xing, 2017) datasets.
however, thesedatasets are relatively small in scale and containlimited problem types.
for example, there are only102 shaded area problems in geoshader and 186.problems in geos.
while geos++ and geos-os contain more data of 1,406 and 2,235 prob-lems, respectively, they have not been publiclyavailable yet.
instead, our geometry3k datasetfeatures 3,002 sat-style problems collected fromtwo high-school textbooks that cover diverse graphand goal types.
besides, each problem in geome-try3k is annotated with dense descriptions in for-mal language (deﬁned in section 3), which makesit particularly suited for symbolic reasoning andinterpretable problem solving.
in order to promotefollow-up work in the geometry domain, we releasethe dataset and evaluation baselines..approaches for geometry problem solving.
due to the sparsity of appropriate data, most earlyworks on automated geometry systems focus on ge-ometry theorem proving (wen-tsun, 1986; chouet al., 1996; yu et al., 2019; gan et al., 2019), prob-lem synthesis (alvin et al., 2014), diagram parsing(seo et al., 2014), as well as problem formaliza-tion (gan and yu, 2018).
(seo et al., 2015) at-tempt using computer vision and natural languageprocessing techniques to solve geometry problemswith problem understanding.
however, the systemdoes not perform explicit reasoning with axiomaticknowledge as it reduces the task to an optimiza-tion problem to see which choice can satisfy allconstraints.
some recent efforts (sachan et al.,2017, 2020) have been made to incorporate theo-rem knowledge into problem solving.
they feed ge-ometry axioms written as horn clause rules and dec-larations from the diagram and text parser into log-ical programs in prolog style to solve the problem.
however, these methods fail to provide human-readable solving steps.
and parameter learningon horn clause rules and built-in solvers leads toan uncontrollable search process.
in contrast, ourproposed inter-gps implements explicit symbolicreasoning to infer the answer without the help ofcandidate answers in an interpretable way..interpretable math problem solving.
due tothe intrinsic requirements of symbolic understand-ing and logical reasoning, interpretability of solversplays an essential role in geometry problem solv-ing.
while the interpretability of geometry problemsolvers is rarely explored, some pioneering workhas been proposed in the general math problemsolving domain.
broadly there are two main linesof achieving interpretable solving steps for mathproblems.
the ﬁrst generates intermediate struc-tural results of equation templates (huang et al.,.
6775figure 2: more data examples in the geometry3k dataset..2017; wang et al., 2019), operational programs(amini et al., 2019) and expression trees (wanget al., 2018; qin et al., 2020; hong et al., 2021).
the second line of work with a higher level ofinterpretability translates the math problems intosymbolic language and conducts logical reasoningiteratively to predict the ﬁnal results (matsuzakiet al., 2017; roy and roth, 2018).
furthermore, in-spired by work on semantic parsing (han and zhu,2005; zhu and mumford, 2006; tu et al., 2014), weclaim structured diagram parsing and joint seman-tic representations for text and diagrams is criticalin interpretable geometry problem solving..3 geometry formal language.
a geometry problem p is deﬁned as a tuple(t, d, c), in which t is the input text, d is the dia-gram image and c = {c1, c2, c3, c4} is the multiple-choice candidate set in the format of numerical val-ues.
given the text t and diagram d, an algorithmis required to predict the correct answer ci ∈ c.we formally describe the problem in the geometricdomain language ω, a set of literals composed ofpredicates and arguments.
basic terms used in thegeometry problem solver are deﬁned as follows..deﬁnition 1. a predicate is a geometric shape.
entity, geometric relation, or arithmetic function..deﬁnition 2. a literal is an application of onepredicate to a set of arguments like variables orconstants.
a set of literals makes up the semanticdescription from the problem text and diagrams inthe formal language space ω..deﬁnition 3. a primitive is a basic geometricelement like a point, a line segment, a circle, or an.
arc segment extracted from the diagram..termspredicateliteral.
examplesline, intersectat, ismedianoffind(areaof(triangle(a,b,c)).
table 1: term examples in geometry formal language..table 1 lists examples of predicates and literaltemplates.
there are 91 predicates in our deﬁnedformal language, and we list them in the tables 10to 15 in the appendix section..4 geometry3k dataset.
4.1 dataset collection.
most existing datasets for geometry problem solv-ing are relatively small, contain limited problemtypes, or not publicly available.
for instance, thegeos dataset (seo et al., 2015) only contains 186sat problems.
although there are 1,406 problemsin geos++ (sachan et al., 2017), this dataset hasnot been released to the public yet.
therefore, webuild a new large-scale geometry problem bench-mark, called geometry3k.
the data is collectedfrom two popular textbooks for high school stu-dents across grades 6-12 by two online digital li-braries (mcgraw-hill2, geometryonline3).
groupsof well-trained annotators with undergraduate de-grees manually collect each problem with its prob-lem text, geometry diagram, four candidate choices,and correct answer.
in order to evaluate the ﬁne-grained performance of geometry solvers, we labeleach problem data with the corresponding problemgoal and geometry shapes..2https://www.mheducation.com/3www.geometryonline.com.
6776problem textdiagramchoicestextliteralsdiagramliteralsfind y. round to the nearest tenth.a.
18.8b.
23.2c.
25.9d.
44.0answer: cfind(y)equals(lengthof(line(a,b)),32)equals(lengthof(line(b,d)),y)equals(measureof(angle(a,c,b)),54)equals(lengthof(line(a,d)),x)pointliesonline(d,line(a,c))perpendicular(line(b,d),line(c,d))equals(lengthof(line(a,b)),lengthof(line(b,c)))find the perimeter of $\parallelogram$ jklm.a.
11.2b.
22.4c.
24d.
44.8answer: bfind(perimeterof(parallelogram(j,k,l,m)))equals(lengthof(line(l,k)),7.2)equals(lengthof(line(m,l)),4)equals(lengthof(line(e,j)),6)pointliesonline(e,line(m,l))perpendicular(line(j,e),line(e,l))in $\odot$ k, mn = 16 and m $\widehat$ mn = 98. find the measure of ln.
round to the nearest hundredth.a.
6.93b.
7.50c.
8.94d.
10.00answer: ccircle(k)    equals(lengthof(line(m,n)),16)equals(measureof(arc(m,n)),98)find(lengthof(line(l,n)))equals(lengthof(line(j,k)),10)perpendicular(line(p,k),line(m,p))pointliesonline(p,line(m,n))pointliesonline(p,line(l,j))pointliesonline(p,line(l,k))pointliesonline(k,line(p,j))pointliesonline(k,line(l,j))pointliesoncircle(m,circle(k))pointliesoncircle(j,circle(k))pointliesoncircle(n,circle(k))pointliesoncircle(l,circle(k))dataset#qa102geoshader (alvin et al., 2017)186geos (seo et al., 2015)geos++ (sachan et al., 2017)1,406geos-os (sachan and xing, 2017) 2,235geometry3k (ours).
#word #shape #goal #var grade6-106-106-106-106-12 {+, −, ×, ÷, (cid:50)2,.operator type{+, −, ×, ÷, (cid:50)2,{+, −, ×, ÷, (cid:50)2,{+, −, ×, ÷, (cid:50)2,{+, −, ×, ÷, (cid:50)2,.
/4,343//.
(cid:50)}(cid:50)}(cid:50)}(cid:50)}(cid:50), sin, cos, tan}.
√√√√.
11113.
13334.
44446.
√.
3,002 36,736.table 2: comparison of our geometry3k dataset with existing datasets..questionssentenceswordsliterals (text)literals (diagram).
total3,0024,28430,1466,29327,213.train2,4012,99320,8824,35719,843.val3004102,9956242,377.test6018816,2691,3124,993.table 3: basic statistics of our geometry3k dataset..unlike existing datasets that only collect theproblem text and diagrams, we further annotateeach data in geometry3k with dense formal lan-guage descriptions that bridge the semantic gapbetween the textual and visual contents as well asbeneﬁt the symbolic problem solver.
the anno-tated formal language is used to train and evaluateour proposed problem parsers.
data examples areillustrated in figure 2..4.2 dataset statistics.
the geometry3k dataset consists of 3,002 prob-lems and is divided into the train, validation, andtest sets with the ratio of 0.7:0.1:0.2, as shown intable 3. figure 3 illustrates the question distribu-tion by the number of sentence words.
the long tailin the distribution requires the geometry solvers tounderstand the rich semantics in the textual content..% predicates (diagram) %.
19.00 line30.8914.49 pointliesonline 16.6611.83 equals15.179.53 measureof10.468.97 lengthof8.69.......predicates (text)findlineequalslengthofmeasureof......circumscribedto 0.05 trianglesumofheightofbaseofishypotenuseof 0.04 square.
0.04 quadrilateral0.04 kite0.04 heightof.
0.030.020.010.010.01.table 4: most and least frequent predicates of formaldescriptions in geometry3k (frequency >5)..text are more evenly distributed than those for di-agrams.
this is mainly because the problem textdescribes diverse geometric shapes, attributes, andrelations while diagrams display the basic proper-ties of points, lines, and arcs..4.3 comparisons with existing datasets.
to the best of our knowledge, currently, it is thelargest geometry problem dataset.
we summarizethe geometry3k dataset’s main statistics and acomparison of existing datasets in table 2. in ad-dition to four elementary shapes (lines, triangles,regular quadrilaterals, and circles) mentioned inthat geos dataset, geometry3k contains irregularquadrilaterals and other polygons.
besides, in ge-ometry3k, there are more unknown variables andoperator types that may require equation solving toﬁnd the goal of the problem.
note that 80.5% ofproblems are solvable without the associated dia-gram in the geos dataset.
by contrast, less than1% of the problems in our geometry3k datasetcould be solved when the problem diagram is notprovided.
in general, the statistics and compar-isons above show geometry3k is challenging forgeometry problem solvers..figure 3: question length distribution of geometry3k..there are 6,293 literals for the problem text and27,213 literals for the diagrams in geometry3k,respectively.
we list the most and least frequentpredicates with a frequency greater than 5 in table4. it is shown that the predicates for the problem.
4.4 human performance.
as an intellectual task, it is necessary to know thehuman performance for geometry problems.
wepush the test-split data of the dataset in the crowd-.
6777010203040number of question words05101520frequency (%)question distributiongeometry3ksourcing platform, amazon mechanical turk4.
each eligible annotator must have obtained a highschool or higher degree and is asked to answer 10problems in 25 minutes.
to ensure annotators solv-ing the problem to the best of their ability, theyare further asked to spend at least 7 minutes on theproblem set and 10 seconds on each problem.
weﬁlter out annotators who do not satisfy the require-ment.
we also ask dozens of graduates majoringin science or engineering to answer these problemsto evaluate human experts’ performance.
table 5shows the human performance.
compared to ran-dom guess’s accuracy of 25%, humans achieve anoverall accuracy of 56.9%, and human experts canachieve a good performance of 90.9%..5 geometry problem parser.
our proposed inter-gps takes the problem textand diagrams as inputs and translates them intoformal language descriptions automatically via thetext parser (section 5.1) and the diagram parser(section 5.2), respectively..5.1 text parser.
given the word sequence of the problem text t ,the text parser needs to translate it into a set ofliterals lt, a sequence composed of predicates andvariables.
recently, deep neural networks haveachieved promising performances in sequence-to-sequence (seq2seq) learning tasks like machinetranslation (sutskever et al., 2014; vaswani et al.,2017; devlin et al., 2018).
however, semanticparsers using seq2seq learning methods are not fea-sible to generate satisfactory literals in the geome-try3k dataset for two reasons.
firstly, the limitedscale of geometry datasets weakens these highlydata-driven methods.
secondly, neural semanticparsers tend to bring noises in generated resultswhile geometry solvers with symbolic reasoningare sensitive to such deviations..inspired by previous works (koo et al., 2008;seo et al., 2015; bansal et al., 2014) that indicatethe rule-based parsing method is able to obtain pre-cise parsing results, we apply this approach withregular expressions to perform text parsing.
wealso achieve a semantic text parser using bart(lewis et al., 2020), one of the state-of-the-art se-quence learning models for comparison..5.2 diagram parser.
diagrams provide complementary geometric infor-mation that is not mentioned in the problem text.
previous works (seo et al., 2014, 2015) requiremanual annotations to identify symbols in the dia-grams and fail to deal with special relational sym-bols such as parallel, perpendicular, and isosceles.
instead, an automatic diagram parser without hu-man intervention is proposed in this work and isable to detect varied diagram symbols..the diagram parser ﬁrst applies hough transfor-mation (shapiro and stockman, 2001) to extract ge-ometry primitives (points, lines, arcs, and circles),following (seo et al., 2015).
then the diagram sym-bols and text regions are extracted through a strongobject detector retinanet (lin et al., 2017), and thetextual content is further recognized by the opticalcharacter recognition tool mathpix5.
after obtain-ing the primitive set p and symbol set s, we needto ground each symbol with its associated primi-tives.
(seo et al., 2015) adapts a greedy approachwhere each symbol is assigned to the closest prim-itive without considering its validity.
instead, weformulate the grounding task as an optimizationproblem with the constraint of geometry relations:.
(cid:88).
min.
s.dist(si, pj) × 1{si assigns to pj}.
(1).
s.t.
(si, pj) ∈ feasibility set f,.
where the dist function measures the euclideandistance between the symbol si and primitive pj.
f deﬁnes the geometric constraints for symbolgrounding.
for example, the parallel symbol couldonly be assigned to two lines with the same slopesand the perpendicular symbol is only valid to twoorthogonal lines..6 geometry problem solver.
unlike existing methods (seo et al., 2015; sachanet al., 2017; alvin et al., 2017; sachan et al., 2020),inter-gps achieves the explicit symbolic reasoningwith the theorem knowledge base and the human-readable search process, shown in figure 4..6.1 symbolic geometry solver.
overall, inter-gps takes the relation set r and thetheorem knowledge base set kb as inputs, and out-puts the numeric solution g∗ of the problem goal g..4https://www.mturk.com/.
5https://mathpix.com/.
6778figure 4: given the problem diagram and text, our proposed inter-gps ﬁrst parses the inputs into a relation setdeﬁned in formal language.
then inter-gps applies the theorem sequence predicted by the theorem predictor toperform symbolic reasoning over the relation set to infer the answer.
9(cid:13) and 16(cid:13) denote the theorem orders..the relation set r deﬁnes geometry attributes andrelations in the given problem, and is initializedwith literals from the text and diagram parsers.
ris further expanded with literals that are derivedfrom deﬁnitions of geometry shapes.
for example,a triangle is deﬁned as three connected sides.
soif there is a literal triangle(a,b,c), six more lit-erals (ponit(a), ponit(b), ponit(c), line(a,b),line(b,c), line(c,a)) will be appended to r..the theorem set kb is represented as a set oftheorems, where each theorem ki is written as aconditional rule with a premise p and a conclusionq. for the search step t, if the premise p of kimatches the current relation set rt−1, the relationset is updated according to the conclusion q:.
rt ← ki ∧ rt−1, ki ∈ kb..(2).
after the application of several theorems, equationsbetween the known values and the unknown prob-lem goal g are established, and g could be solvedafter solving these equations:.
g∗ ← solveequation(rt, g)..(3).
6.2 theorem predictor (tp).
as the geometry problems in geometry3k are col-lected from high school textbooks, it might need toapply multiple theorems before the problems aresolved.
intuitively, one possible search strategy isto use brute force to enumerate candidates in thetheorem set randomly.
the random search strategyis inefﬁcient and might lead to problems unsolvableas there might be applications of complicated theo-rems in the early stage.
therefore, an ideal geom-etry problem solver can solve the problems using.
reasonable theorem application sequences.
stu-dents with good academic performance can solvea problem with prior knowledge learning from acertain amount of problem solving training.
in-spired by this phenomenon, a theorem predictor isproposed to infer the possible theorem applicationsequence for inference after multiple attempts onthe train data.
recent studies (loos et al., 2017;balunovic et al., 2018) also suggest that neuralguided search can speed up the search process..there are no annotated theorem application se-quences for data in geometry3k due to tremendousworker labor.
thus, we randomly sample from thetheorem set multiple times to generate the applica-tion sequences.
a generated sequence is regardedas positive if the geometry solver inter-gps solvesthe problem after the application of that sequence.
a positive sequence with the minimum length fora problem is seen as pseudo-optimal.
finally, afterattempts, we collect 1,501 training samples withthe problem and its pseudo-optimal theorem appli-cation sequence..given the problem formal description l ={l1, ..., lm}, the theorem predictor aims to recon-struct the pseudo-optimal theorem sequence t ={t1, ..., tn} token by token.
we formulate the gen-eration task as a sequence-to-sequence (seq2seq)problem and use a transformer-based model (lewiset al., 2020) to generate theorem sequence tokens.
speciﬁcally, the transformer decoder predicts thenext theorem order ti given t = {t1, ..., ti}.
theseq2seq model is trained to optimize the negativelog-likelihood loss:.
ltp = −.
log ptp (ti | t1, .
.
.
, ti−1) ,.
(4).
n(cid:88).
i=1.
6779 in triangle abc, ab = bc.find y. triangle(a,b,c)triangle(a,b,d)triangle(b,c,d)equals(line(b,c),32)equals(line(c,d),x) equals(line(b,d),y)equals(angle(c,a,b),54)pointliesonline(d,line(a,c))perpendicular(line(b,d),line(a,d))equals(line(b,c),line(a,b))find(y) abdcxy3254°rule-based text parserneural detector diagram parserrelation set in formal language  encoderencoderencoderdecoderdecoderdecodertransformer-based theorem predictor equals(line(a,b),32)equals(y,25.89) isosceles triangle theorem9law of sine theorem16symbolic geometry problem solver✔return g∗ and s.rt ← ki ∧ rt−1s.append(ki).
end ifwhile g∗ = ∅ and rt is updated do.
end forg∗ ← solveequation(rt, g)if g∗ (cid:54)= ∅ then.
initialize relation set r0 with l, g∗ = ∅, s = ∅kbp ← theopredictor(l)for ki ∈ kbp do.
algorithm 1 symbolic geometry solverinput literals l, goal g, knowledge bases kb1, kb2output numeric goal value g∗ and theorem application s1: function search(l, g, kb1, kb2)2:3:4:5:6:7:8:9:10:11:12:13:14:15:16:17:18:19:20:21:22:23:24:25:26:27:end for28:end while29:30: end function.
rt ← ki ∧ rt−1s.append(ki)g∗ ← solveequation(rt, g)if g∗ (cid:54)= ∅ then.
rt ← ki ∧ rt−1s.append(ki)g∗ ← solveequation(rt, g)if g∗ (cid:54)= ∅ then.
end forfor ki ∈ kb2 do.
return g∗ and s.return g∗ and s.for ki ∈ kb1 do.
end if.
end if.
(cid:46) higher-order.
where ptp is the parametrized conditional distribu-tion in the theorem predictor model..6.3 low-ﬁrst search strategy.
after the application of the theorem sequence pre-dicted by the theorem predictor, it is likely thatinter-gps still could not ﬁnd the problem goal.
generally, humans incline to use simple theoremsﬁrst when solving math problems to reduce com-plex calculations.
if simple theorems are not tan-gible, they will turn to more complex theorems.
on account of that, we apply an efﬁcient searchstrategy with heuristics driven by subject knowl-edge.
we categorize theorems into two groups:lower-order theorem set kb1 and higher-ordertheorem set kb2.
the lower-order set kb1 (e.g,triangle angle-sum theorem, congruent triangletheorem) only involves in two simple operations ofaddition and subtraction, while kb2 (e.g, law ofsines) requires complex calculations.
in each fol-lowing search step after using predicted theorems,we ﬁrst enumerate theorems in the lower-order setkb1 to update the relation set r:.
rt ← ki ∧ rt−1, ki ∈ kb1..(5).
if lower-order theorems fail to update r anymore,higher-order theorems are considered to update r:.
(cid:46) predicted.
rt ← ki ∧ rt−1, ki ∈ kb2..(6).
the search process stops once we ﬁnd the prob-lem goal g or the search steps reach the maximumsteps allowed.
the whole search algorithm forinter-gps is presented in algorithm 1..(cid:46) lower-order.
7 experiments.
7.1 experimental settings.
datasets and evaluation metrics.
we conduct ex-periments on the geometry3k and geos (seoet al., 2015) datasets.
the geometry3k datasetinvolves 2,101 training data, 300 validation data,and 601 test data, respectively.
the geos datasetprovides 55 ofﬁcial sat problems for evaluatinggeometry solvers.
regarding our proposed inter-gps model, if the one closest to the found solutionamong the four choices is exactly the ground truth,the found solution is considered correct.
for afair comparison, if inter-gps fails to output thenumeric value of the problem goal within allowedsteps, it will randomly choose the one from the fourcandidates.
in terms of compared neural networkbaselines, the predicted answer has a maximumconﬁdence score among choice candidates.
baselines.
we implement several deep neural net-work baselines for geometry solvers to comparethem with our method.
by default, these baselinesformalize the geometry problem solving task asa classiﬁcation problem, fed by the text embed-ding from a sequence encoder and the diagramrepresentation from a visual encoder.
q-only onlyencodes the problem text in the natural languageby a bi-directional gated recurrent unit (bi-gru)encoder (cho et al., 2014).
i-only only encodesthe problem diagram by a resnet-50 encoder (heet al., 2016) as the input.
q+i uses bi-gru andresnet-50 to encode the text and diagram, respec-tively.
relnet (bansal et al., 2017) is implementedfor embedding the problem text because it is astrong method for modeling entities and relations.
film (perez et al., 2018) is compared as it achieveseffective visual reasoning for answering questionsabout abstract images.
film-bert uses the bertencoder (devlin et al., 2018) instead of the gru en-coder, and film-bart uses the recently proposedbart encoder (lewis et al., 2020)..6780methodrandomhumanhuman expertq-onlyi-onlyq+irelnet (bansal et al., 2017)film (perez et al., 2018)film-bert (devlin et al., 2018)film-bart (lewis et al., 2020)inter-gps (ours)inter-gps (gt).
all25.056.990.925.327.026.729.631.732.833.057.578.3.angle25.053.789.929.526.226.226.228.732.932.159.183.1.length area ratio25.025.042.957.766.793.933.328.316.724.525.028.341.720.839.633.325.030.250.035.850.030.275.062.3.
25.059.392.021.528.426.734.032.733.333.061.777.9.line25.046.795.921.024.721.029.633.332.134.659.386.4.triangle quad circle other25.058.392.322.225.925.925.929.633.337.048.170.4.
25.061.789.925.230.121.028.030.834.330.145.561.5.
25.053.892.226.026.728.133.729.232.332.666.083.3.
25.068.790.525.930.132.225.233.632.237.152.477.6.table 5: evaluation results by our proposed method and compared baselines on the geometry3k dataset..methodgeos (seo et al., 2015)geos++ (seo et al., 2015)geos-os (sachan and xing, 2017)geos++axio (sachan et al., 2017)inter-gps (ours).
acc (%)4949525567.table 6: evaluation results on the geos dataset..implementation details.
main hyper-parametersused in the experiments are shown below.
for oursymbolic solver, a set of 17 geometry theorems iscollected to form the knowledge base.
for gener-ating positive theorem sequences, each problemis attempted by 100 times with the maximum se-quence length of 20. the transformer model usedin the theorem predictor has 6 layers, 12 attentionheads, and a hidden embedding size of 768. searchsteps in inter-gps are set up to 100. for the neu-ral solvers, we choose the adam optimizer and setthe learning rate as 0.01, and the maximum epochsare set as 30. each experiment for inter-gps isrepeated three times for more precise results..7.2 comparisons with baselines.
table 5 compares the results of symbolic solverinter-gps with baselines on our proposed geome-try3k dataset.
apart from the overall accuracy, theresults of different problem types are also reported.
beneﬁting from symbolic reasoning with theoremknowledge, our inter-gps obtains an overall accu-racy of 57.5%, signiﬁcantly superior to all neuralbaselines.
inter-gps even attains a better accuracycompared to human beings.
inter-gps with groundtruth formal language gains a further improvementof 20.8%.
inter-gps also obtains state-of-the-artperformance over exiting geometry solvers on thegeos dataset, as shown in table 6..7.3 ablation study and discussion..search strategies.
the overall accuracy and aver-age steps needed for solving problems with differ-ent search strategies in inter-gps are reported intable 7. predict refers to the strategy that uses thetheorems from the theorem predictor followed by arandom theorem sequence.
the strategy largely re-duces the average steps to 6.5. the ﬁnal strategy ininter-gps applies the predicted theorems ﬁrst andlower-order theorems in the remain search steps,and gains the best overall accuracy..search strategiesrandomlow-ﬁrstpredictpredict+low-ﬁrst (ﬁnal).
accuracy (%)75.5 ± 0.277.3 ± 0.377.5 ± 0.178.3 ± 0.1.
# steps13.2 ± 0.115.1 ± 0.26.5 ± 0.17.1 ± 0.1.table 7: performance of inter-gps with differentsearch strategies..problem parsers and literal sources.
the rule-based text parser achieves an accuracy of 97%while only 67% for the semantic text parser.
table8 reports the inter-gps performance fed with differ-ent sources of literals.
with literals generated fromour problem solver, inter-gps achieves an accuracyof 57.5%.
the current text parser performs verywell as there is only a slight gap between inter-gpswith generated text literals and ground truth literals.
an improvement of 17.5% for inter-gps with an-notated diagram literals indicates that there is stillmuch space to improve for the diagram parser..text w/otexttext (gt).
diagram w/o diagram diagram (gt)46.6 ± 0.725.0 ± 0.057.5 ± 0.225.4 ± 0.058.0 ± 1.725.4 ± 0.0.
58.7 ± 0.275.0 ± 0.678.3 ± 0.1.table 8: performance of inter-gps with predicted andground truth (gt) literals..6781searching step distribution.
figure 5 comparescorrectly solved problem distribution by the aver-age number of search steps in different strategies.
our ﬁnal inter-gps applies the predict+low-ﬁrststrategy, with which 65.97% problems are solvedin two steps and 70.06% solved in ﬁve steps..figure 5: correctly solved problem distribution by thenumber of search steps..neural geometry solvers.
current neural networkbaselines for geometry solving fail to achieve sat-isfactory results in the geometry3k dataset.
itis because there are limited data samples for theseneural methods to learn meaningful semantics fromthe problem inputs.
besides, dense implicit repre-sentations might not be suitable for logical rea-soning tasks like geometry problem solving.
wereplace the inputs of problem text and diagram inthe q+i baseline with the ground truth textual andvisual formal annotations and report the result intable 9. an improvement of 9.2% indicates thepromising potential for neural network models forproblem solving if structural representations withrich semantics are learned..diagram (visual) diagram (formal).
text (natural)text (formal).
26.734.6.
35.335.9.figure 6: failure examples for inter-gps..in the diagrams.
interpretability in inter-gps.
inter-gps pro-vides an interpretable symbolic solver for geom-etry problem solving.
first, inter-gps parses theproblem contents into a structural representation offormal language.
second, inter-gps performs sym-bolic reasoning to update the geometric relationset explicitly.
last, inter-gps applies reasonabletheorems sequentially in the search process..8 conclusion.
solving geometry problems is one of the most chal-lenging tasks in math question answering.
in thispaper, we propose a large-scale benchmark, geom-etry3k, which consists of 3,002 high-school geom-etry problems with dense descriptions in formallanguage.
we further propose a novel geometrysolving approach, interpretable geometry problemsolver (inter-gps), which parses the problem asformal language from an automatic parser and per-forms symbolic reasoning over the theorem knowl-edge base to infer the answer.
also, a theorem pre-dictor with a low-ﬁrst search strategy is designedto generate the reasonable theorem application se-quence.
experiment results show that inter-gpsoutperforms existing state-of-the-art methods by alarge margin.
in the future, we plan to extend ourwork in other math question answering tasks andexplore more general symbolic reasoning models..table 9: neural solver performance with different rep-resentations of the problem text and diagrams..acknowledgments.
failure cases.
inter-gps might not ﬁnd a solutionbecause of inaccurate parsing results and the in-complete theorem set.
figure 6 illustrates somefailure examples for inter-gps.
for example, dia-gram parsing tends to fail if there are ambiguousannotations or multiple primitives in the diagram.
it is difﬁcult for the text parser to handle nestedexpressions and uncertain references.
and the sym-bolic solver is still not capable of solving complexproblems with combined shapes and shaded areas.
this work was supported by muri n00014-16-1-2007 and darpa xai n66001-17-2-4029.
wethank johnson zhou and jiahao li for collectingpart of the data.
and we thank the help from jian-heng tang in baseline implementation..ethical impact.
the problems in geometry3k are collected fromonline open sources.
the work in this paper may in-spire the following research in symbolic reasoningand interpretable models and facilitate education..67820-23-56-1011-1516-20>20number of search steps in groups0102030405060frequency (%)correctly solved problem distribution by # stepspredict+low-first (final)low-firstrandom2in rhombus abcd,  m∠dab = 2m∠adc.
text parser: nested expressionsdiagram parser: ambiguous symbolsdiagram parser: multiple primitivessymbolic solver: complex theorems(a)(b)(c)(d)references.
chris alvin, sumit gulwani, rupak majumdar, andsupratik mukhopadhyay.
2014. synthesis of geom-in proceedings of the aaaietry proof problems.
conference on artiﬁcial intelligence (aaai)..chris alvin, sumit gulwani, rupak majumdar, andsupratik mukhopadhyay.
2017. synthesis of solu-in thetions for shaded area geometry problems.
thirtieth international flairs conference..aida amini, saadia gabriel, peter lin, rik koncel-kedziorski, yejin choi, and hannaneh hajishirzi.
2019. mathqa: towards interpretable math wordproblem solving with operation-based formalisms.
in proceedings of annual conference of the northamerican chapter of the association for computa-tional linguistics (naacl-hlt)..mislav balunovic, pavol bielik, and martin t vechev.
in ad-2018. learning to solve smt formulas.
vances in neural information processing systems(neurips), pages 10338–10349..feng han and song-chun zhu.
2005. bottom-up/top-down image parsing by attribute graph grammar.
intenth ieee international conference on computervision (iccv’05) volume 1, volume 2, pages 1778–1785. ieee..kaiming he, xiangyu zhang, shaoqing ren, and jiansun.
2016. deep residual learning for image recog-in proceedings of the conference on com-nition.
puter vision and pattern recognition (cvpr), pages770–778..yining hong, qing li, daniel ciao, siyuan huang, andsong-chun zhu.
2021. learning by ﬁxing: solv-ing math word problems with weak supervision.
inproceedings of the thirty-fifth aaai conference onartiﬁcial intelligence, aaai-21..mark hopkins, ronan le bras, cristian petrescu-prahova, gabriel stanovsky, hannaneh hajishirzi,and rik koncel-kedziorski.
2019. semeval-2019in proceed-task 10: math question answering.
ings of the 13th international workshop on semanticevaluation, pages 893–899..mohit bansal, kevin gimpel, and karen livescu.
2014.tailoring continuous word representations for depen-dency parsing.
in proceedings of the annual meet-ing of the association for computational linguistics(acl), pages 809–815..danqing huang, shuming shi, chin-yew lin, andjian yin.
2017. learning ﬁne-grained expressionsin proceedings ofto solve math word problems.
empirical methods in natural language processing(emnlp), pages 805–814..trapit bansal, arvind neelakantan, and andrew mc-callum.
2017. relnet: end-to-end modeling of enti-ties & relations.
arxiv preprint arxiv:1706.07179..mohan chinnappan.
1998. schemas and mental mod-els in geometry problem solving.
educational stud-ies in mathematics, 36(3):201–217..kyunghyun cho, bart van merrienboer, dzmitry bah-danau, and yoshua bengio.
2014. on the propertiesof neural machine translation: encoder-decoder ap-proaches.
arxiv preprint arxiv:1409.1259..shang-ching chou, xiao-shan gao, and jing-zhongzhang.
1996. automated generation of readableproofs with geometric invariants.
journal of auto-mated reasoning, 17(3):325–347..jacob devlin, ming-wei chang, kenton lee, andkristina toutanova.
2018. bert: pre-training of deepbidirectional transformers for language understand-ing.
in proceedings of naacl-hlt (naacl)..wenbin gan and xinguo yu.
2018. automatic un-derstanding and formalization of natural languagegeometry problems using syntax-semantics models.
international journal of innovative computing, in-formation and control, pages 83–98..wenbin gan, xinguo yu, ting zhang, and mingshuwang.
2019. automatically proving plane geometrytheorems stated by text and diagram.
internationaljournal of pattern recognition and artiﬁcial intelli-gence, 33(07):1940003..terry koo, xavier carreras, and michael collins.
2008.simple semi-supervised dependency parsing.
inproceedings of the annual meeting of the associ-ation for computational linguistics (acl), pages595–603..mike lewis, yinhan liu, naman goyal, mar-jan ghazvininejad, abdelrahman mohamed, omerlevy, veselin stoyanov, and luke zettlemoyer.
2020. bart: denoising sequence-to-sequence pre-training for natural language generation, translation,and comprehension.
in proceedings of the 58th an-nual meeting of the association for computationallinguistics (acl), pages 7871–7880..tsung-yi lin, priya goyal, ross girshick, kaiminghe, and piotr doll´ar.
2017. focal loss for densein proceedings of the ieee in-object detection.
ternational conference on computer vision (iccv),pages 2980–2988..sarah loos, geoffrey irving, christian szegedy, andcezary kaliszyk.
2017. deep network guided proofsearch.
arxiv preprint arxiv:1701.06972..takuya matsuzaki, takumi ito, hidenao iwane, hi-rokazu anai, and noriko h arai.
2017. semanticin pro-parsing of pre-university math problems.
ceedings of the 55th annual meeting of the asso-ciation for computational linguistics (acl), pages2131–2141..andi saparuddin nur and evy nurvitasari.
2017. ge-ometry skill analysis in problem solving reviewedfrom the difference of cognitive style students junior.
6783ashish vaswani, noam shazeer, niki parmar, jakobuszkoreit, llion jones, aidan n gomez, łukaszkaiser, and illia polosukhin.
2017. attention is allyou need.
advances in neural information process-ing systems (neurips), 30:5998–6008..lei wang, yan wang, deng cai, dongxiang zhang,and xiaojiang liu.
2018. translating a math wordproblem to an expression tree.
in proceedings of the2018 conference on empirical methods in naturallanguage processing (emnlp)..lei wang, dongxiang zhang, jipeng zhang, xing xu,lianli gao, bing tian dai, and heng tao shen.
2019. template-based math word problem solversin proceedingswith recursive neural networks.
of the aaai conference on artiﬁcial intelligence(aaai), volume 33, pages 7144–7151..wu wen-tsun.
1986. basic principles of mechanicaltheorem proving in elementary geometries.
journalof automated reasoning, 2(3):221–252..xinguo yu, mingshu wang, wenbin gan, bin he,and nan ye.
2019. a framework for solvingexplicit arithmetic word problems and provinginternational journalplane geometry theorems.
of pattern recognition and artiﬁcial intelligence,33(07):1940005..song-chun zhu and david mumford.
2006. a stochas-tic grammar of images.
foundations and trends incomputer graphics and vision, 2(4):259–362..a appendix.
we deﬁne 91 predicates and their correspondingliteral templates in the geometry language domain.
for development, these predicates are categorizedinto six groups: geometric shapes (table 10), unarygeometric attributes (table 11), general geometricattributes (table 12), binary geometric relations(table 13), a-isxof-b-type geometric relations(table 14), as well as numerical attributes and re-lations (table 15).
moreover, $ in the literal tem-plates denotes the undetermined shape..high school.
journal of educational science andtechnology (est), 3(3):204–210..ethan perez, florian strub, harm de vries, vincentdumoulin, and aaron courville.
2018. film: vi-sual reasoning with a general conditioning layer.
inproceedings of the aaai conference on artiﬁcial in-telligence (aaai), volume 32..jinghui qin, lihui lin, xiaodan liang, rumin zhang,and liang lin.
2020. semantically-aligned univer-sal tree-structured solver for math word problems.
in proceedings of the 2020 conference on empiricalmethods in natural language processing (emnlp),pages 3780–3789..subhro roy and dan roth.
2018. mapping to declara-tive knowledge for word problem solving.
transac-tions of the association for computational linguis-tics (tacl), 6:159–172..mrinmaya sachan, avinava dubey, eduard h hovy,tom m mitchell, dan roth, and eric p xing.
2020.discourse in multimedia: a case study in extract-ing geometry knowledge from textbooks.
computa-tional linguistics, 45(4):627–665..mrinmaya sachan, kumar dubey, and eric xing.
2017.from textbooks to knowledge: a case study inharvesting axiomatic knowledge from textbooks toin proceedings of em-solve geometry problems.
pirical methods in natural language processing(emnlp), pages 773–784..mrinmaya sachan and eric xing.
2017. learningto solve geometry problems from natural languagedemonstrations in textbooks.
in proceedings of the6th joint conference on lexical and computationalsemantics, pages 251–261..min joon seo, hannaneh hajishirzi, ali farhadi, andoren etzioni.
2014. diagram understanding in ge-ometry questions.
in proceedings of the aaai con-ference on artiﬁcial intelligence (aaai)..minjoon seo, hannaneh hajishirzi, ali farhadi, orenetzioni, and clint malcolm.
2015. solving geome-try problems: combining text and diagram interpre-tation.
in proceedings of empirical methods in nat-ural language processing (emnlp), pages 1466–1476..linda g shapiro and george c stockman.
2001. com-.
puter vision.
prentice hall..ilya sutskever, oriol vinyals, and quoc v le.
2014.sequence to sequence learning with neural networks.
arxiv preprint arxiv:1409.3215..kewei tu, meng meng, mun wai lee, tae eun choe,and song-chun zhu.
2014. joint video and text pars-ing for understanding events and answering queries.
ieee multimedia, 21(2):42–70..6784#.
1234567891011121314151617181920.predicates.
literal templates.
pointlineangletrianglequadrilateralparallelogramsquarerectanglerhombustrapezoidkitepolygonpentagonhexagonheptagonoctagoncirclearcsectorshape.
point(a), point($)line(a,b), line(m), line($)angle(a,b,c), angle(a), angle(1), angle($)triangle(a,b,c), triangle($), triangle($1,$2,$3)quadrilateral(a,b,c,d), quadrilateral(1), quadrilateral($)parallelogram(a,b,c,d), parallelogram(1), parallelogram($)square(a,b,c,d), square(1), square($)rectangle(a,b,c,d), rectangle(1), rectangle($)rhombus(a,b,c,d), rhombus(1), rhombus($)trapezoid(a,b,c,d), trapezoid(1), trapezoid($)kite(a,b,c,d), kite(1), kite($)polygon($)pentagon(a,b,c,d,e), pentagon($)hexagon(a,b,c,d,e,f), hexagon($)heptagon(a,b,c,d,e,f,g), heptagon($)octagon(a,b,c,d,e,f,g,h), octagon($)circle(a), circle(1), circle($)arc(a,b), arc(a,b,c), arc($)sector(o,a,b), sector($)shape($).
table 10: 20 predicates and corresponding literal templates for geometric shapes..table 11: 9 predicates and corresponding literal templates for unary geometric attributes..#.
123456789.
#.
1234567891011121314151617.predicates.
literal templates.
rightanglerightisoscelesequilateralregularredbluegreenshaded.
rightangle(angle($))right(triangle($))isosceles(polygon($))equilateral(polygon($))regular(polygon($))red(shape($))blue(shape($))green(shape($))shaded(shape($)).
predicates.
literal templates.
areaofperimeterofradiusofdiameterofcircumferenceofaltitudeofhypotenuseofsideofwidthofheightoflegofbaseofmedianofintersectionofmeasureoflengthofscalefactorof.
areaof(a)perimeterof(a)radiusof(a)diameterof(a)circumferenceof(a)altitudeof(a)hypotenuseof(a)sideof(a)widthof(a)heightof(a)legof(a)baseof(a)medianof(a)intersectionof(a,b)measureof(a)lengthof(a)scalefactorof(a,b).
table 12: 17 predicates and corresponding literal templates for general geometric attributes ..6785#.
123456789101112.predicates.
literal templates.
pointliesonlinepointliesoncircleparallelperpendicularintersectatbisectsanglecongruentsimilartangentsecantcircumscribedtoinscribedin.
pointliesonline(point($),line($1,$2))pointliesoncircle(point($),circle($))parallel(line($),line($))perpendicular(line($),line($))intersectat(line($),line($),line($),point($))bisectsangle(line($),angle($))congruent(polygon($),polygon($))similar(polygon($),polygon($))tangent(line($),circle($))secant(line($),circle($))circumscribedto(shape($),shape($))inscribedin(shape($),shape($)).
table 13: 12 predicates and corresponding literal templates for binary geometric relations..#.
123456789101112131415.predicates.
literal templates.
ismidpointofiscentroidofisincenterofisradiusofisdiameterofismidsegmentofischordofissideofishypotenuseofisperpendicularbisectorofisaltitudeofismedianofisbaseofisdiagonalofislegof.
ismidpointof(point($),line($))iscentroidof(point($),shape($))isincenterof(point($),shape($))isradiusof(line($),circle($))isdiameterof(line($),circle($))ismidsegmentof(line($),triangle($))ischordof(line($),circle($))issideof(line($),polygon($))ishypotenuseof(line($),triangle($))isperpendicularbisectorof(line($),triangle($))isaltitudeof(line($),triangle($))ismedianof(line($),quadrilateral($))isbaseof(line($),quadrilateral($))isdiagonalof(line($),quadrilateral($))islegof(line($),trapezoid($)).
table 14: 15 predicates and corresponding literal templates for a-isxof-b-type geometric relations..#.
123456789101112131415161718.predicates.
literal templates.
sinofcosoftanofcotofhalfofsquareofsqrtofratioofsumofaverageofaddmulsubdivpowequalsfindusetheorem.
sinof(var)cosof(var)tanof(var)cotof(var)halfof(var)squareof(var)sqrtof(var)ratioof(var), ratioof(var1,var2)sumof(var1,var2,...)averageof(var1,var2,...)add(var1,var2,...)mul(var1,var2,...)sub(var1,var2,...)div(var1,var2,...)pow(var1,var2)equals(var1,var2)find(var)usetheorem(a b c).
table 15: 18 predicates and corresponding literal templates for numerical attributes and relations..6786