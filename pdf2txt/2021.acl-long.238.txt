explanations for commonsenseqa: new dataset and models.
shourya aggarwal1, divyanshu mandowara1, vishwajeet agrawal1,dinesh khandelwal2, parag singla1, dinesh garg2.
1iit delhi,.
2ibm research ai, india.
aggarwal.shourya@gmail.com, divyanshu.mandowara92@gmail.comvishwa.grawal@gmail.com, dikhand1@in.ibm.comparags@cse.iitd.ac.in, garg.dinesh@in.ibm.com.
abstract.
commonsenseqa (cqa)(talmor et al.,2019) dataset was recently released to advancethe research on common-sense question an-swering (qa) task.
whereas the prior workhas mostly focused on proposing qa mod-els for this dataset, our aim is to retrieve aswell as generate explanation for a given (ques-tion, correct answer choice, incorrect answerchoices) tuple from this dataset.
our expla-nation deﬁnition is based on certain desider-ata, and translates an explanation into a setof positive and negative common-sense prop-erties (aka facts) which not only explain thecorrect answer choice but also refute the in-correct ones.
we human-annotate a ﬁrst-of-its-kind dataset (called ecqa) of positive andnegative properties, as well as free-ﬂow ex-planations, for 11k qa pairs taken from thecqa dataset.
we propose a latent representa-tion based property retrieval model as well asa gpt-2 based property generation model witha novel two step ﬁne-tuning procedure.
wealso propose a free-ﬂow explanation genera-tion model.
extensive experiments show thatour retrieval model beats bm25 baseline bya relative gain of 100% in f1 score, propertygeneration model achieves a respectable f1score of 36.4, and free-ﬂow generation modelachieves a similarity score of 61.9, where lasttwo scores are based on a human correlated se-mantic similarity metric..1.introduction.
the ﬁeld of automated question answering (qa)has witnessed a rapid progress in the past fewyears, sometimes beating even human perfor-the reasonsmance (zhang et al., 2020).
behind this trend include (i) emergence oflarge-sized qa datasets such as squad (ra-jpurkar et al., 2016), hotpotqa (yang et al.,2018), commonsenseqa (talmor et al., 2019),naturalqa (kwiatkowski et al., 2019), etc.,and (ii) emergence of powerful, large scale, pre-.
question:where is a frisbee in play likely to be?
answer choices:outside park roof.
tree.
air.
our explanation:positives properties1) a frisbee is a concave plastic disc designedfor skimming through the air as an outdoorgame.
negative properties1) a frisbee can be outside anytime, even whilenot in play.
2) a frisbee can be in a park anytime, even whilenot in play.
3) a frisbee can be on a roof after play.
4) a frisbee can be in a tree after play.
free-flow (ff) explanationa frisbee is a concave plastic disc designed forskimming through the air as an outdoor game,so while in play it is most likely to be in the air.
a frisbee can be outside or in a park anytime,and other options are possible only after play..cos explanation (rajani et al., 2019):a frisbee ﬂoats on air..table 1: an example from cqa dataset along withour human-annotated explanation, containing positiveproperties to support correct answer choice (in green),negative properties to refute the incorrect choices (inred), and free-ﬂow natural language explanation (inblue).
the cos explanation shown above from a priorwork (rajani et al., 2019) is less informative than ours..trained, neural language models such as trans-former (vaswani et al., 2017), bert (devlin et al.,2019), gpt (brown et al., 2020), etc..much of the prior work in qa has focusedon building models for only predicting the cor-rect answer.
in this paper, we tackle the problem.
proceedingsofthe59thannualmeetingoftheassociationforcomputationallinguisticsandthe11thinternationaljointconferenceonnaturallanguageprocessing,pages3050–3065august1–6,2021.©2021associationforcomputationallinguistics3050of generating an explanation for the answer of aquestion.
while existing work has looked at ex-plaining the answer predicted by a model (aminiet al., 2019), we take up the task of explainingthe given gold (correct) answer in a model obliv-ious fashion (jansen et al., 2018).
we do this inthe context of common-sense qa task and workwith commonsenseqa dataset.
explaining theknown gold answers for common-sense qa is animportant research problem and is far from beingsolved (rajani et al., 2019).
two major hurdles insolving this problem include (i) lack of any desider-ata for what constitutes an explanation (horacek,2017) and (ii) unavailability of qa datasets com-prising high quality human-annotated explanations.
in this work, we address the entire stackof automatically generating explanations for thecommonsenseqa task.
this includes setting up adesiderata for the explanation, curation of a datasetin accordance with the desiderata, proposing base-lines models, and careful experimentation.
ouroverall contributions can be summarized as:.
1. we present a set of characteristics (refutationcomplete, comprehensive, minimal, and coher-ent) for what constitutes an explanation.
forany given (question, correct answer choice, in-correct answer choices) tuple, our explanationconstitutes a set of positive properties to justifythe correct answer choice and a set of negativeproperties to refute the incorrect ones..2. we human annotate positive and negative prop-erties for 11k qa pairs from the recently re-leased commonsenseqa (cqa) dataset (tal-mor et al., 2019).
we also curate a free-ﬂowexplanation for each qa pair.
an example ofour human annotated explanation is shown intable 11. we call our dataset as ecqa (ex-planations for commonsenseqa) and publiclyrelease2 it for future research..3. we propose a set of models for the task of re-trieval as well as generation of explanations.
our retrieval system, called as explanationretriever (xr), represents properties in a la-tent space, and retrieves the facts against a cqaexample from a given common-sense knowl-edge corpus.
our generation system, called.
1an additional example is given in appendix a.1.
2https://github.com/dair-iitd/.
ecqa-dataset.
as explanation generator (xg), com-prises a novel two step ﬁne-tuned property gen-eration model (xgp) to generate common-senseproperties and a free-ﬂow explanation genera-tion model (xgf)..4. we perform extensive experiments to demon-strate the effectiveness of xr and xg systems.
we use an f1 based evaluation, calculated viaexact property match when retrieving using goldcorpus of facts.
for property generation, andretrieval using a silver corpus in the absenceof gold facts, f1 is computed using a semanticsimilarity metric carefully picked to have a highcorrelation with human judgment.
xr outper-forms bm25 by a relative gain of 100% for thegold corpus, and 70% for the sliver corpus.
xgpachieves a f1 score of 36.4, while xgf achievesa semantic similarity score of 61.9. we publiclyrelease our code and trained models 3..2 related work.
bulk of the recent literature on automated qais focused on either (i) proposing a new kindof dataset (unger et al., 2014; rajpurkar et al.,2016; ling et al., 2017; joshi et al., 2017; trivediet al., 2017; welbl et al., 2017; yang et al., 2018;kwiatkowski et al., 2019; talmor et al., 2019; miaoet al., 2020), or (ii) proposing a model with im-proved answer accuracy (amini et al., 2019; bhar-gav et al., 2020; chen et al., 2020).
as far as ex-planation in qa is concerned, we can either (i) ex-plain the model’s predicted answer, or (ii) explainthe given gold answer without worrying about themodel.
for certain qa tasks (e.g.
kbqa, mathqa,vqa), former explanation task is more meaning-ful.
for other qa tasks (e.g.
common-sense qa,scienceqa), the later form of explanation may bemore meaningful.
in both, one of the key challengeis to ground the deﬁnition of explanation..knowledge-base qa task (berant et al., 2013)requires the qa model to output a logical query(e.g.
sparql or sql) which is then executedover the underlying kb to get the answer.
thislogical query itself serves as an explanation.
themathqa task (ling et al., 2017; amini et al., 2019)requires the model to output a theorem-like proof,program, or algebraic construct which is executedto get the answer.
again, such a theorem servesas an explanation.
for scienceqa task, an expla-.
3https://github.com/dair-iitd/ecqa.
3051datasets.
reasoning type.
reasoning steps.
refutation.
knowledge baseof facts.
free flowexplanation.
worldtree v2cos-eqascopenbookqaecqa.
scientiﬁccommon-sensescientiﬁcscientiﬁccommon-sense.
multi-hopsingle-hoptwo-hopmulti-hopmulti-hop.
nnnny.ynyyy.nynny.table 2: comparison of various properties of the different multi-choice qa explanation datasets.
4th, 5th, and6th columns refer to whether the dataset (i) provides refutation for incorrect choices, (ii) comes with a knowledgecorpus of facts, (iii) provides a free-ﬂow natural language explanation, respectively..nation naturally comprises relevant scientiﬁc factscoming from a given corpus.
worldtree (jansenet al., 2018) and worldtree v2 (xie et al., 2020)are corpora of elementary multiple-choice sciencequestions with gold explanations for correct answerchoice.
openbookqa (mihaylov et al., 2018) is ascienceqa dataset built over the worldtree corpus.
qasc (khot et al., 2020) is a middle school levelmultiple-choice scienceqa dataset..for other qa tasks, such as common-sense qa,reading comprehension qa (rcqa), visual qa(vqa), grounding the deﬁnition of explanation isnot so obvious (horacek, 2017) and hence, theylack labeled data as well.
in the case of rcqaand vqa (ghosh et al., 2018), there have beenattempts to explain the predicted answers.
clarket al.
(2020) studied the logical reasoning capac-ity of transformer based language models on var-ious rcqa tasks.
bhagavatula et al.
(2019) haveproposed an nli dataset for abductive reasoning.
wang et al.
(2019) introduced the task of sense-making where given a pair of natural languagestatements, the goal is to pick the more sensiblestatement in the pair.
kotonya and toni (2020) haveproposed a dataset of explainable fact-checking inthe public health domain and deﬁned coherenceproperties to evaluate explanation quality..as far as common-sense qa is concerned, weare not aware of much prior work on generating hu-man understandable natural language explanationseither for the predicted answer or for the given goldanswer.
cqa (talmor et al., 2019) is a popular,multiple choice, common-sense qa dataset.
thegoal behind original cqa task is conﬁned only tillanswering the questions and hence almost all thesubmissions (ma et al., 2019; khashabi et al., 2020;zhu et al., 2020; yang et al., 2020) to the leader-board of the cqa dataset focus just on answeringthe question and not generating explanations.
as.
far as explaining the gold answers of cqa questionsare concerned, except for the works by rajani et al.
(2019), the literature is quite slim – both from theperspective of the explanation annotated datasetsand models.
rajani et al.
(2019) recently anno-tated explanations for the cqa dataset and calledthose explanations as cos explanation (cos-e forshort).
cos-e are much shorter than our ecqaexplanations (refer table 1) and their aim was toleverage them in training a qa model so as to boostits answering accuracy.
their qa model ﬁrst pre-dicts cos-e followed by leveraging the same toanswer the question.
also, it is designed to gen-erate only single-hop explanation which justiﬁesonly the correct answer choice and does not refuteany incorrect answer choice.
table 2 comparesour ecqa dataset with other relevant explanationdatasets.
to the best of our knowledge, both ourecqa annotation and xr, xg systems for explain-ing the cqa dataset are ﬁrst-of-a-kind..3 explanations for commonsenseqa.
the broad idea behind explaining common-senseqa is to capture how humans would justify if a qapair is presented to them.
however, grounding aprecise deﬁnition for this human justiﬁcation is stillhard due to subjectivity (horacek, 2017).
further-more, depending on the type of reasoning involvedin the qa task, form and shape of an explanationmay vary.
though, it is hard to give a single deﬁni-tion of the explanation for qa pairs coming fromthe cqa dataset, we believe one can still approachthis by means of putting forward desiderata or de-sired characteristics of a well-formed explanation:comprehensive: any information or reasoning,which is necessary to explain the answer should bepresent.
this requires writing common-sense factsthat are not present in the question but are essentialfor explanation..3052refutation complete: while it should explainwhy an answer choice is correct, it should also ex-plain why rest of the choices are incorrect or notbest suited as answer.
minimal: it should not contain any irrelevant orredundant information, especially the ones whichare already present in the question.
coherent: all the facts and statements should bewritten in a coherent and free-ﬂow form to get ameaningful and natural explanation..3.1 formatting of the explanation.
the next question is how to translate above desider-ata into a right format of the explanation for thepurpose of machine generation.
a na¨ıve approachwould be to consider it as a sequence of tokensor words, but it is unclear how to deﬁne metricsfor deciding whether such a sequence satisﬁes thedesiderata or not.
so, we alternatively suggest twodifferent formats for the explanations..1. property set format: given a cqa tuple(q, a, i) where, q is the question, a is the correctanswer choice, i is the list of incorrect choices,this format suggests compiling a set s of common-sense atomic facts (aka properties) such that eachproperty in s is required to either justify the cor-rect answer choice or refute an incorrect answerchoice.
furthermore, this format also requires theset s to be minimal in the sense that dropping anyproperty from s may fail to either justify correctanswer choice or refute one or more incorrect an-swer choices.
also, it’s good to ensure that eachproperty statement in s is atomic in the sense thatit is conﬁned to a single fact and can’t be furtherbroken down into two independent facts.
in sum-mary, s contains all those atomic properties thatare needed for the explanation and nothing more.
conceptually, we further partition this set s intos+ and s− and call the respective properties aspositive and negative, respectively.
positive proper-ties justify the correct answer choice and negativeproperties refute the incorrect answer choices.
ourecqa dataset has precisely annotated these sets forthe qa pairs in cqa dataset.
an example of suchs+ and s− sets is given in the table 1..2. free flow (ff) format: this format essen-tially converts the question, the answer choices,and the knowledge fact statements from the setss+ and s− into a well-formed, coherent, free-ﬂowstyle paragraph.
this is important since this is howa human might perceive an explanation to be..4 ecqa dataset.
we partnered with a private ﬁrm to crowdsource theannotations in property set (s) format for the cqadataset.
the ﬁrm utilized their in-house annotationand quality control teams for this purpose.
foreach question in the cqa dataset, an annotator wasshown the question, its target concept (as givenin cqa), all ﬁve answer choices, and the correctanswer choice.
as described earlier, the annotatorswere then asked to write the following: a set s+of positive properties, another set s− of negativeproperties and a free-ﬂowing english explanationusing the facts encapsulated in sets s+ and s−..each question in the cqa dataset comes witha label called target concept.
we sorted all thequestions according to their target concepts andprovided questions of the same target concept to asingle annotator.
this prevented from conﬂictingstatements appearing in positive and negative prop-erties, and also helped speed up the annotation.
anoutcome of this exercise is shown in table 1..while it is difﬁcult to guarantee that annotatedproperty set is comprehensive, we tried to ensureit by asking annotators writing at least one prop-erty for each answer choice.
we also asked themto write simple sentences by breaking down thecomplex sentences into two or more so that it helpsin maintaining minimality.
for the comprehensive-ness and minimality of the ﬁnal free-ﬂow expla-nation, we explicitly asked them to include every-thing that appear in properties and avoid introduc-ing anything from question and answer choices.
the dataset quality at the ground level was ensuredby a separate team of the partner ﬁrm, and randomchecks were performed by the authors as well..4.1 dataset analysis.
in this section, we highlight various insights regard-ing our ecqa dataset.
there are a total of 10962questions in the train and validation sets of cqa,and we get annotations for all of them.
top 3 rowsof table 3 gives the average count and the wordlength of properties per question.
we also give theaverage word length of ecqa free-ﬂow (ff) andcos-e free-ﬂow explanation for comparison..in order to measure how much informationecqa free-ﬂow annotations provide, we calculatednumber of distinct words (nouns, verbs, adjectives,and adverbs based on pos tagging) and report theiraverage numbers in table 4. the ﬁrst three rowscompare the information content in cqa, cos-e.3053statistic avg.
# per ques.
avg.
# wordss+s−sf fcos-e.9.9410.4210.2749.526.82.
2.054.266.3211.table 3: ecqa dataset statistics.
and ecqa, while fourth and ﬁfth rows tell what ex-tra is present in a single annotation of the two expla-nation datasets w.r.t to cqa.
this gives us a roughidea that the annotation introduces new entities andrelations required for the explanation.
compari-son using word-overlap metrics and additional datainsights are presented in the appendix a.9..dataset.
nn* vb*.
jj* rb*.
cqacos-eecqacos-e \ cqaecqa \ cqa.
7.923.4210.221.154.75.
3.752.677.830.885.22.
1.391.013.120.411.85.
0.600.492.200.211.82.table 4: comparing information content through im-portant words in cqa, cos-e and ecqa..4.2 human validation experiments.
we performed two human validation experimentsto assess the absolute (and relative to cos-e)quality of our ecqa dataset.
in the ﬁrst exper-iment, we asked three human judges to validate100 samples each from our ecqa dataset.
outof 100 samples, 50 samples were common acrossjudges (for normalization and correlation analysis)and 50 were different.
both s+ and s− propertysets were judged on a 3-points4 scale to capturehow well (negative)positive properties are justify-ing (in)correctness of (in)correct answer choice(s).
table 5 lists down the mean (µ), standard devia-tion (σ), standard error (e), and average pearson’scorrelation coefﬁcient (ρ) for both positive andnegative properties.
83.33% of the samples wererated a perfect 2 score for positive properties and66.67% were rated perfect 2 for negative proper-ties.
we computed pearson’s correlation coefﬁ-cient as follows.
for each of the 50 commonlylabeled samples, we ﬁrst computed the averagescore across all the judges.
then, we computed.
pearson’s coefﬁcient between scores of an individ-ual judge and the corresponding average scores.
finally, we took the average of these individualcoefﬁcients across all judges (gaona, 2014; agirreet al., 2012).
in the second experiment, we askeda set of three different human judges to comparethe ecqa explanations with cos explanations forthe same 100 samples as in previous validation ex-periment.
for each question, both explanationswere randomly shufﬂed and resulting pair of ex-planations was called as (e1, e2).
the judgeswere asked to compare e1 with e2 on each ofthe following aspects: comprehensiveness, refu-tation completeness, minimality/non-redundancy,and overall quality.
the comparison was logged ona 4-point scale5.
column 2 of table 6 lists down the% times our explanation stood better than cos-e.in all the four aspects, ecqa is judged to be out-performing cos-e by a huge margin.
pearson’scoefﬁcient can be computed for each quality mea-sure (column) and property (row) in table 6, givinga 4 × 4 matrix of coefﬁcient values with an averagevalue of 0.774. the detailed coefﬁcient matrix isgiven in appendix a.7..aspect.
µ.σ.e.ρ.s+s−.
1.799 0.566 0.057 0.7651.588 0.604 0.060 0.748.table 5: absolute dataset quality experiment: posi-tive and negative properties as rated by human judges.
aspect.
ecqabetter.
cos-ebetter.
bothgood.
bothbad.
comprehensive 79.0084.33rc76.00m/nr92.33overall.
1.330.335.330.33.
12.671.679.670.33.
7.0013.679.007.00.table 6: human judgements for relative dataset qual-ity experiment: ecqa and cos-e. numbers are av-eraged over 3 judges.
rc: refutation complete andm/nr: minimality/non-redundancy.
we do not report cohen’s kappa score sinceit can have problems when dealing with skewedpreferential distributions, i.e., when one choice isoverwhelmingly preferred over the other (feinsteinand cicchetti, 1990).
in such scenarios, kappa.
40: complete garbage, 1: partial but incomplete reasoning,.
51: e1 better than e2, 2: e2 better than e1, 3: both.
2: satisfactory reasoning..good, 4: both bad.
3054score can be low (and misleading) despite very highinter-annotator agreement due to the high chancesof random agreement between the annotators.
thisis true in our case since ecqa explanations arehighly preferred over cos-e ones, by the judges..5 explanation retrieval.
our.
(xr).
section.
describes.
thisproposedexplanation retrieversystemto retrieve s+ and s− property sets from a givenproperty corpus for a given question.
xr consistsof two modules - (i) property ranker, and (ii)property selector.
the experimentation code andtrained models for this and the following sectionare publicly released.
6.
5.1 property ranker.
input to property ranker is a tuple (q, a, c), whereq is a question (in natural language), a is one ofthe answer choices (natural language) for the ques-tion q, and c is token ’not’ if the answer choicea is incorrect and empty string otherwise.
prop-erty ranker ranks the properties in the given cor-pus based on the given tuple (q, a, c).
the archi-tecture of property ranker comprises two parame-ter shared sub-modules, namely qa encoder (e1)and property encoder (e2).
module e1 takes atuple (q, a, c) as input and outputs a vector zqacin a 512-dimensional latent space z. design ofmodule e1 is inspired by sentence transformers(sbert) (reimers and gurevych, 2019) and com-prises a bert layer followed by single mean-pooling and a fully connected layer.
we pickeddimensions of the latent space through hyperpa-rameter tuning on validation set.
module e2 takesa property statement p∗ (in natural language) asinput and returns a vector zp∗ in the same latentspace z. e2’s architecture is identical to the e1,with parameter shared at every layer level..training: for training property ranker, we usesbert library.7 we initialize the bert with pre-trained bert-base-uncased (devlin et al., 2019).
weights of the fully connected layer are initializedrandomly.
in ecqa dataset, multiple propertiesfrom the corresponding sets s+ or s− could formthe relevant properties (each referred as p∗) for agiven (q, a, c).
for the correct answer choice, allproperties from the corresponding s+ set are validp∗.
in case of incorrect choice, we ﬁrst match the.
6https://github.com/dair-iitd/ecqa7https://www.sbert.net/.
stemmed answer choice with the annotated prop-erties from the set s− and pick all the matchesas valid properties p∗, and remove all those tu-ples from the dataset where we cannot map to anyproperty.
approximately 2% (q, a, c) tuples getdropped from our experiments in this manner.
ad-ditionally, 32 questions in the original cqa datasetwere marked as ambiguous by our annotators, andhence, we drop them from all our experiments.
sothere are multiple training examples for a query(q, a, c) corresponding to each matched relevantproperty (p∗).
input part of each training examplecomprises a pair of (q, a, c) and a relevant common-sense property p∗.
output part of each training ex-ample comprises vector representations zqac andzp∗.
the model is trained using a loss function,which forces zqac and zp∗ to come closer in thelatent space z. we use multiple negatives ranking(mnr) (henderson et al., 2017) as the loss, whichis negative log-softmax over similarity of zqac andzp∗.8.
inference: for inference, we ﬁrst start with agiven property corpus s and encode all of them inthe latent space using property encoder e2.
now,we pass any given tuple (q, a, c) through e1 andobtain its latent vector representation zqac.
finally,we output a ranked list of the properties in the sets w.r.t to their cosine similarity with vector zqac..5.2 property selector.
the candidate properties retrieved by the propertyranker are passed to this property selection modulealong with the query (q, a, c).
this property selec-tor module then ﬁlters out a smaller size relevantproperties set from the given larger size retrievedproperties set .
we experiment with two variants ofthis module - (i) top-k, and (ii) alignment-basediterative retriever (air) (yadav et al., 2020)..top-k module picks top-k properties from theranked list returned by property ranker module.
top-k is a na¨ıve yet effective property selectionmodule.
we use ecqa dataset statistics to decidevalue for k. based on table 3, we select top-3properties for the correct answer choice and top-1property for an incorrect answer choice..air (yadav et al., 2020) is a state-of-the-art un-supervised explanation retrieval algorithm.
it it-eratively subselects multi-hop explanations froma given set by measuring the alignment betweenquestion, answer, and explanation sentences using.
8cosine similarity and mse losses did not perform well..3055glove embeddings (pennington et al., 2014).
weuse air to select the relevant set of properties fromthe top 50 properties given by the property ranker..5.3 experiments and results for xr system.
dataset: we ﬁrst randomly split our annotatedecqa dataset into a 70 : 10 : 20 partition to formtrain, val, and test sets, respectively.
for all ourexperiments, we train the proposed property rankerusing the ecqa train set and validate it using theecqa val set.
we experiment with both gold andsilver corpus of properties during inference.
thegold corpus consists of properties in the ecqadataset (including training, val, and test sets).
simi-larly, the silver corpus is the set of train and val setof ecqa dataset and an additional large size cor-pus of common-sense facts, called as open mindcommon sense (omcs) corpus (singh, 2002)9.the sizes of gold and silver corpus are 63975 and901202, respectively..metrics: we use f1 score between the sets ofgold and retrieved properties to compare the per-formance for retrieval from the gold corpus.
re-trieval from the silver corpus can never fetch us theground-truth properties for a tuple (q, a, c), sincethey are not contained in that corpus.
one way toovercome this is to align the retrieved properties setto the ground truth properties set.
we propose usinga maximum unweighted bipartite matching basedmetric to ﬁnd such an alignment score.
for this, weﬁrst create a complete bipartite graph between theground truth and the retrieved set of properties.
toeach edge in the graph, we assign a score based onthe semantic similarity of the corresponding prop-erty sentences.
for this we use lexical and seman-tic similarity metrics such as sts-bert score10,spice (anderson et al., 2016), cider (vedantamet al., 2015), meteor (banerjee and lavie, 2005),and rouge (lin, 2004).
we prune the edges inbipartite graph that have semantic similarity scoreless than some threshold value (τ ).
we then applya maximum unweighted bipartite matching algo-rithm (kuhn, 1955) on the pruned graph to ob-tain a matching of predicted silver properties withground-truth gold properties.
we then calculateusual f1 score assuming the matched properties asthe correctly retrieved ones.
in table 8 we reportsts-bert and spice based f1 scores as these.
9the omcs corpus has around 800,000 common-sense.
facts and was used to build conceptnet..10https://pypi.org/project/semantic-text-similarity/.
two metrics are the most correlated with humanjudgment.
results on other metrics are reported inappendix a.8.
details regarding our experimentto discover correlation between the ﬁve semanticsimilarity metrics and the human judgment, and theprocedure to obtain metric-speciﬁc thresholds (τ )is given in the appendix a.6..hyperparameters: we tune hyperparameters ofproperty ranker by maximizing the average cosinesimilarity over the validation set.
table 7 showsthe best hyperparameters for our proposed propertyranker obtained using grid search over validationset, where the parameters were searched in thegiven range.
we use the model which achieves thebest results on validation set in 5 epochs.
we setwarm-up steps and bert hidden layer dimensionto default values of 10011 and 768, respectively..parameter.
learning ratedimension of zmax training epochsbert sequence lengthk for positive propertiesk for negative properties.
value2×10−551253031.range[10−5, 10−3]{128, 256, 512}−{20, 30}{3, 5, 10}{1, 2, 3}.
table 7: best hyperparameters for property ranker.
zdenote the latent space..results: we have also considered the popular in-formation retrieval method bm25 (robertson andzaragoza, 2009) as another choice for the propertyranker module.
we have used the publicly avail-able implementation of bm2512.
table 8 showsthe performance comparison of xr system on goldand silver corpus for different choices of the prop-erty ranker and property selector modules.
ourproposed property ranker with top-k as propertyselector outperforms all other combinations witha signiﬁcant margin.
in appendix a.3, we reportsome anecdotal examples of retrieved properties..6 explanation generation.
in this section we will describe our proposed gpt-2 (radford et al., 2019) based explanation genera-tion system called explanation generator(xg).
note that xg does not use any corpus ofcommon-sense properties at the inference time togenerate explanations.
xg has two variants – (i).
11default value taken from sbert documentation12https://pypi.org/project/rank-bm25/.
3056f1 score (%).
xr system gold corpus.
silver corpus.
exact.
sts-bert spice.
bm25 + airbm25 + top-kours + airours + top-k.22.225.633.049.7.
15.116.225.027.6.
18.419.825.428.5.table 8: explanation retrieval results over gold andsilver corpus for different choices of property rankerand property selector modules in the xr system.“ours”stands for our proposed property ranker..xgp to generate common-sense properties, and (ii)xgf to generate the free-ﬂow explanations acrossall the answer choices.
in all our experiments, weuse random sampling to generate the output tokensusing gpt-2 and report average numbers over 3different runs..6.1 property generation (xgp)input to the xgp is a tuple (q, a, c) and it generatesa set of properties to justify/refute the given answerchoice for the given question.
the architecture forxgp is the same as gpt-2 but we ﬁne-tune it in acustomized manner as described below..training: we do a novel two-step ﬁne-tuningof gpt-2 and refer to this model as xgp.
in theﬁrst step, we ﬁne-tune gpt-2 to ensure that it cangenerate sentences that resemble common-senseproperties.
for this, we ﬁne-tune gpt-2 on lan-guage modeling task using a corpus of common-sense properties: ecqa train set plus omcs cor-pus.
we use perplexity to evaluate the quality oflanguage model on the val set and save the modelwhich achieves the lowest perplexity in 5 epochs.
the input to our model is: (cid:104)bop(cid:105) property (cid:104)eop(cid:105),where property is word-pieces tokens of propertyand (cid:104)bop(cid:105) and (cid:104)eop(cid:105) are special tokens to markthe beginning and end of a property..in the second step, we ﬁne-tune it to learn howto generate a set of properties.
given a query tu-ple (q, a, c) and a sequence of gold properties, say(p∗k), we create input to gpt-2 as: (cid:104)bos(cid:105)question: q a is c the answer because(cid:104)bop(cid:105) p∗.
1 (cid:104)eop(cid:105) ... (cid:104)bop(cid:105) p∗.
k (cid:104)eop(cid:105) (cid:104)eos(cid:105).
1, ..., p∗.
in this input template, the following set of stringsare always constant: question:, is, and theanswer because.
tokens (cid:104)bos(cid:105) and (cid:104)eos(cid:105)denotes the beginning and end of the sequence.
we.
use train set of ecqa, preserving the ordering ofproperties from the annotation, so as to generate theﬁne-tuning data in the above template for the sec-ond ﬁne-tuning step.
we ﬁne-tune for 5 epochs andsave the model that achieves the lowest perplexityon the ecqa val set..in order to establish the novelty of this 2 stepﬁne-tuning, we create another model (xgp-w) byperforming only 2nd step ﬁne-tuning on pre-trainedgpt-2 and compare it with xgp..inference: we use test set of ecqa to test xgp.
the input to model is: (cid:104)bos(cid:105) question: q a isc the answer because (cid:104)bop(cid:105).
the modelgenerates tokens until it generates (cid:104)eos(cid:105) token.
weparse output and collect a set of multiple propertiesbetween consecutive (cid:104)bop(cid:105) and (cid:104)eop(cid:105) tokens..experiments: table 9 shows the comparison ofxgp and xgp-w using the bipartite graph basedmetric discussed in section 5. note that we havealso included the best retrieval model on the silvercorpus from table 8 to show that our generationmodels perform signiﬁcantly better than it.
themaximum output token limit of gpt-2 in both themodels is set to 150. we report some anecdotalexamples of generated properties in appendix a.4..model.
f1 score (%).
sts-bert spice.
ours + top-k (silver corpus)xgp-wxgp.
27.633.036.4.
28.530.132.2.table 9: comparison of xgp, xgp-w, and the best xrmodel using silver corpus..6.2 free-flow explanation generation (xgf).
we now discuss models to generate the free-ﬂownatural language explanations, given a question,all answer choices, and the correct answer choice.
there are two different variants of xgf with differ-ent training strategies and inference prompts..6.2.1 xgf-i.
we use gpt-2 to directly output the free-ﬂow ex-planation f given an input tuple (q, o, ca), where qis question, o is sequence of all the answer choicesfor the question q, and ca is the correct answer..30577 conclusion and future work.
we have presented desiderata of what constitutesan explanation in the case of common-sense qa.
based on it, we generated a human-annotated expla-nation dataset ecqa for commonsenseqa.
wehave also proposed models to retrieve and gener-ate common-sense facts required to justify the an-swer choice.
we have publicly released our crowd-sourced ecqa dataset and code/models.
in futurework, we plan to explore directions to design rl-based schemes for joint training of property rankerand property selector components in the xr systemand joint training of xgp and xgf-ii to gener-ate free-ﬂow explanation.
another direction is toimprove the accuracy and interpretability of theexisting models for commonsenseqa using theecqa dataset..acknowledgments.
this work was supported by an ibm ai horizonsnetwork (aihn) grant.
parag singla is beingsupported by ibm sur awards and visvesvarayayoung faculty fellowship by govt.
of india.
wewould like to acknowledge the use of iit delhihpc facility, ibm cloud facility, and ibm cog-nitive computing cluster (ccc) for carrying outvarious experiments.
we thank avaljot singh andkoyal mukherjee for helpful inputs and discussionsduring the early stages, and mausam for his criticalcomments which helped improve the paper.
wewould also like to thank yatin nandwani and ke-shavi sai kolluru who gave useful comments on theinitial draft.
we would like to thank the membersof ibm-aihn team for their support and sugges-tions.
finally, we thank anonymous reviewers fortheir insightful comments in improving the ﬁnalversion of the paper..training: we ﬁne-tune gpt-2 for 5 epochs ontrain set of ecqa using standard language model-ing objective.
the input to gpt-2 during train-ing is: (cid:104)bos(cid:105) question: q the optionsare o. the best answer is ca becausef (cid:104)eos(cid:105).
validation is done on val set of ecqausing perplexity measure..inference: during inference on ecqa test set,the prompt is given till because token and gener-ation is done until (cid:104)eos(cid:105) token..6.2.2 xgf-iihere we generate the free-ﬂow explanations in atwo-step manner.
in the ﬁrst step, we generate theproperties for each answer choice of a questionusing the trained xgp (section 6.1) model.
aftergenerating all the properties, we feed them in con-junction with question, all the choices, and correctanswer to our gpt-2 based system xgf-ii so asto generate the free-ﬂow explanation..training: the ﬁne-tuning of pre-trained gpt-2proceeds in two-steps.
first, we ﬁne-tune on goldproperties from the ecqa dataset.
we take themodel that achieves lowest perplexity on val setin 5 epochs.
after ﬁne-tuning on gold properties,we now ﬁne-tune xgf-ii for 5 epochs on theproperties generated by xgp..inference: at inference time, we ﬁrst generatethe properties for each answer choice using xgp.
using these properties, xgf-ii generate the free-ﬂow explanation..experiments: table 10 shows sts-bert andspice scores between ground-truth and generatedexplanations by xgf.
both xgf variants give simi-lar results.
note that we set the maximum outputtoken limit of gpt-2 to 25013. we also tried free-ﬂow generation with bare pre-trained gpt-2 but itresulted in complete garbage output.
we report ananecdotal example of generated free-ﬂow explana-tions in appendix a.5..model.
sts-bert spice.
xgf-ixgf-ii.
62.561.9.
32.131.3.table 10: semantic similarity scores of xgf models..13as free-ﬂow explanations are longer than properties, weset the maximum output token limit of gpt-2 to 250 for xgfmodels compared to 150 used for xgp models..3058ethical impact.
this paper is concerned about proposing a brandnew dataset on explanations of common-sensequestion answers.
the dataset was crowdsourcedthrough a private ﬁrm and all the ethical consid-eration were taken into account including properremuneration to the human annotators as well astheir consent to use the dataset for our researchpurposes.
we have also ensured that there are nopersonally identiﬁable information or offensive con-tent in our annotations.
we also sought permissionfrom authors of the cqa dataset to add our an-notation on top of that dataset.
as far as externallibraries used in our code base is concerned, wehave sought appropriate permissions from authorsof all those external libraries which are availablein public domain but do not have any license speci-ﬁed..as far as implications of our research contri-butions is concerned, it can advance the state-of-the-art research on automated question answeringrequiring common-sense knowledge.
this researchcan also advance technologies in the areas suchas automated dialog, machine debate, etc.
in fact,generating an explanation for the correct answerchoice of a question help design fair and unbiasedqa and dialog systems.
these systems could of-fer huge value in sectors such as customer support,e-commerce, online education, home automation,etc..references.
eneko agirre, daniel m. cer, mona t. diab, and aitorgonzalez-agirre.
2012. semeval-2012 task 6: ain proceed-pilot on semantic textual similarity.
ings of the 6th international workshop on seman-tic evaluation, semeval@naacl-hlt 2012, pages385–393..aida amini, saadia gabriel, shanchuan lin, rikkoncel-kedziorski, yejin choi, and hannaneh ha-jishirzi.
2019. mathqa: towards interpretablemath word problem solving with operation-basedformalisms.
in proceedings of naacl-hlt, pages2357–2367..peter anderson, basura fernando, mark johnson, andstephen gould.
2016. spice: semantic proposi-tional image caption evaluation.
in proceedings ofeccv, pages 382–398..satanjeev banerjee and alon lavie.
2005. meteor:an automatic metric for mt evaluation with im-proved correlation with human judgments.
in pro-ceedings of the acl workshop on intrinsic and ex-.
trinsic evaluation measures for machine translationand/or summarization, pages 65–72..jonathan berant, andrew chou, roy frostig, and percyliang.
2013. semantic parsing on freebase fromin proceedings of emnlp,question-answer pairs.
pages 1533–1544..chandra bhagavatula, ronan le bras, chaitanyamalaviya, keisuke sakaguchi, ari holtzman, han-nah rashkin, doug downey, wen-tau yih, and yejinchoi.
2019. abductive commonsense reasoning.
in proceedings of iclr..g. p. shrivatsa bhargav, michael r. glass, dineshgarg, shirish k. shevade, saswati dana, dineshkhandelwal, l. venkata subramaniam, and alﬁogliozzo.
2020. translucent answer predictions inin proceed-multi-hop reading comprehension.
ings of aaai, pages 7700–7707..tom b. brown, benjamin mann, nick ryder, melaniesubbiah, jared kaplan, prafulla dhariwal andfarvind neelakantan, pranav shyam, girish sastry,amanda askell, sandhini agarwal, ariel herbert-voss, gretchen krueger, tom henighan, rewonchild, aditya ramesh, daniel m. ziegler, jeffreywu, clemens winter, christopher hesse, markchen, eric sigler, mateusz litwin, scott gray, ben-jamin chess, jack clark, christopher berner, sammccandlish, alec radford, ilya sutskever, anddario amodei.
2020. language models are few-in proceedings of neurips, pagesshot learners.
1877–1901..xinyun chen, chen liang, adams wei yu, dennyzhou, dawn song, and quoc v. le.
2020. neu-ral symbolic reader: scalable integration of dis-tributed and symbolic representations for readingcomprehension.
in proceedings of iclr..peter clark, oyvind tafjord, and kyle richardson.
2020. transformers as soft reasoners over lan-guage.
in proceedings of ijcai, pages 3882–3890..jacob devlin, ming-wei chang, kenton lee, andkristina toutanova.
2019. bert: pre-training ofdeep bidirectional transformers for language un-derstanding.
in proceedings of naacl-hlt, pages4171–4186..alvan r feinstein and domenic v cicchetti.
1990.high agreement but low kappa: i. the problems ofjournal of clinical epidemiology,two paradoxes.
43(6):543–549..miguel angel r´ıos gaona.
2014. methods for measur-ing semantic similarity of texts.
ph.d. thesis, uni-versity of wolverhampton, uk..shalini ghosh, giedrius burachas, arijit ray, and aviziskind.
2018. generating natural language expla-nations for visual question answering using scenein proceedings ofgraphs and visual attention.
xai@icml..3059matthew henderson, rami al-rfou, brian strope, yun-hsuan sung, l´aszl´o luk´acs, ruiqi guo, sanjiv ku-mar, balint miklos, and ray kurzweil.
2017. efﬁ-cient natural language response suggestion for smartreply.
arxiv preprint arxiv:1705.00652..helmut horacek.
2017. requirements for conceptualrepresentations of explanations and how reason-ing systems can serve them.
in proceedings of the1st workshop on explainable computational intelli-gence (xci 2017)..peter jansen, elizabeth wainwright, steven mar-morstein, and clayton morrison.
2018. worldtree:a corpus of explanation graphs for elementary sci-ence questions supporting multi-hop inference.
inproceedings of lrec..mandar joshi, eunsol choi, daniel weld, and lukezettlemoyer.
2017. triviaqa: a large scale dis-tantly supervised challenge dataset for readingin proceedings of acl, pagescomprehension.
1601–1611..daniel khashabi, sewon min, tushar khot, ashishsabharwal, oyvind tafjord, peter clark, and han-naneh hajishirzi.
2020. unifiedqa: crossing for-mat boundaries with a single qa system.
in find-ings of acl: emnlp 2020, pages 1896–1907..tushar khot, peter clark, michal guerquin, peterjansen, and ashish sabharwal.
2020. qasc: adataset for question answering via sentence com-position.
in proceedings of aaai, pages 8082–8090..generalizable neuro-symbolic systems for com-in proceedings ofmonsense question answering.
the first workshop on commonsense inference innatural language processing, pages 22–32..shen-yun miao, chao-chun liang, and keh-yih su.
2020. a diverse corpus for evaluating and devel-oping english math word problem solvers.
in pro-ceedings of acl, pages 975–984..todor mihaylov, peter clark, tushar khot, and ashishsabharwal.
2018. can a suit of armor conductelectricity?
a new dataset for open book ques-tion answering.
in proceedings of emnlp, pages2381–2391..jeffrey pennington, richard socher, and christopher dmanning.
2014. glove: global vectors for word rep-resentation.
in proceedings of emnlp, pages 1532–1543..alec radford, jeffrey wu, rewon child, david luan,dario amodei, and ilya sutskever.
2019. languagemodels are unsupervised multitask learners.
openaiblog..nazneen fatema rajani, bryan mccann, caimingxiong, and richard socher.
2019. explain your-self!
leveraging language models for common-in proceedings of acl, pagessense reasoning.
4932–4942..pranav rajpurkar, jian zhang, konstantin lopyrev, andpercy liang.
2016. squad: 100,000+ questionsin proceed-for machine comprehension of text.
ings of emnlp, pages 2383–2392..neema kotonya and francesca toni.
2020. explain-able automated fact-checking for public healthin proceedings of emnlp, pages 7740–claims.
7754..nils reimers and iryna gurevych.
2019. sentence-bert: sentence embeddings using siamese bert-networks.
in proceedings of emnlp, pages 3973–3983..harold w kuhn.
1955. the hungarian method for theassignment problem.
naval research logistics quar-terly, 2(1-2):83–97..stephen robertson and hugo zaragoza.
2009. theprobabilistic relevance framework: bm25 and be-yond.
now publishers inc..tom kwiatkowski, jennimaria palomaki, olivia red-ﬁeld, michael collins, ankur p. parikh, chris al-berti, danielle epstein, illia polosukhin, jacob de-vlin, kenton lee, kristina toutanova, llion jones,matthew kelcey, ming-wei chang, andrew m. dai,jakob uszkoreit, quoc le, and slav petrov.
2019.natural questions: a benchmark for question an-swering research.
transactions of the associationfor computational linguistics (tacl), 7:452–466..chin-yew lin.
2004. rouge: a package for auto-matic evaluation of summaries.
in text summariza-tion branches out, pages 74–81..wang ling, dani yogatama, chris dyer, and phil blun-som.
2017. program induction by rationale genera-tion: learning to solve and explain algebraic wordproblems.
in proceedings of acl, pages 158–167..kaixin ma, jonathan francis, quanyang lu, eric ny-berg, and alessandro oltramari.
2019. towards.
p singh.
2002..the public acquisition of com-in proceedings of aaaimon sense knowledge.
spring symposium on acquiring (and using) lin-guistic (and world) knowledge for information ac-cess, 2002. aaai..alon talmor, jonathan herzig, nicholas lourie, andjonathan berant.
2019. commonsenseqa: a ques-tion answering challenge targeting commonsenseknowledge.
in proceedings of naacl-hlt, pages4149–4158..priyansh trivedi, gaurav maheshwari, mohnishdubey, and jens lehmann.
2017. lc-quad: a cor-pus for complex question answering over knowledgegraphs.
in proceedings of iswc, pages 210–218..christina unger, corina forascu, vanessa l´opez, axelcyrille ngonga ngomo, elena cabrio, philipp cimi-ano, and sebastian walter.
2014. question answer-ing over linked data (qald-4).
in proceedings ofclef..3060ashish vaswani, noam shazeer, niki parmar, jakobuszkoreit, llion jones, aidan n. gomez, lukaszkaiser, and illia polosukhin.
2017. attention is allyou need.
in proceedings of neurips, pages 5998–6008..ramakrishna vedantam, c lawrence zitnick, and deviparikh.
2015. cider: consensus-based image de-scription evaluation.
in proceedings of cvpr, pages4566–4575..cunxiang wang, shuailong liang, yue zhang, xiao-nan li, and tian gao.
2019. does it make sense?
and why?
a pilot study for sense making andin proceedings of acl, pages 4020–explanation.
4026..johannes welbl, nelson f. liu, and matt gardner.
2017.crowdsourcing multiple choice science questions.
in proceedings of nut@emnlp, pages 94–106..zhengnan xie, sebastian thiem, jaycie martin, eliz-abeth wainwright, steven marmorstein, and peterjansen.
2020. worldtree v2: a corpus of science-domain structured explanations and inference pat-terns supporting multi-hop inference.
in proceed-ings of lrec, pages 5456–5473..vikas yadav, steven bethard, and mihai surdeanu.
2020. unsupervised alignment-based iterative ev-idence retrieval for multi-hop question answering.
in proceedings of acl, pages 4514–4525..yiben yang, chaitanya malaviya, jared fernandez,swabha swayamdipta, ronan le bras, ji-pingwang, chandra bhagavatula, yejin choi, and dougdowney.
2020. generative data augmentation forin findings of acl:commonsense reasoning.
emnlp 2020, pages 1008–1025..zhilin yang, peng qi, saizheng zhang, yoshua ben-gio, william w. cohen, ruslan salakhutdinov, andchristopher d. manning.
2018.hotpotqa: adataset for diverse, explainable multi-hop ques-tion answering.
in proceedings of emnlp, pages2369–2380..zhuosheng zhang, junjie yang, and hai zhao.
2020.retrospective reader for machine reading compre-hension.
corr, abs/2001.09694..chen zhu, yu cheng, zhe gan, siqi sun, tom gold-stein, and jingjing liu.
2020. freelb: enhancedadversarial training for natural language under-standing.
in proceedings of iclr..3061a appendices.
a.1 additional example of ecqa.
annotations.
table 11 shows an additional example ofcommonsenseqa,along with our human-annotated explanations, containing positive proper-ties to support the correct answer choice (in green),negative properties to refute the incorrect choices(in red), and free-ﬂow natural language explanation(in blue)..question:what is something that people do early in theday?
answer choices:believe in god.
make tools.
skydive.
smoke pot.
eat eggs.
our explanation:positives properties1) people generally eat breakfast early morning.
2) people most often eat eggs as breakfast.
negative properties1) believing in god is not restricted to a speciﬁcpart of a day.
2) people generally do not make tools early inthe day.
3) skydive is an irrelevant answer.
4) people usually do not smoke pot early in theday.
free-flow explanation (ff)people generally eat breakfast early morningwhich most often consists eggs.
people gener-ally do not make tools or smoke pot early in theday.
skydive is an irrelevant answer..table 11: example of commonsenseqa with our an-notated explanation.
a.2 experimental details.
computing infrastructure: we run all ourexperiments on a machine with a single tesla p100gpu (16 gib) and 8 intel(r) xeon(r) e5-2690v4 @ 2.60ghz cpus with 59 gib of physicalmemory.
training times for all our differentmodels within the proposed xr and xg systemswere within 4 hours..implementation details: all our models areimplemented in pytorch14.
we used sbert15 toimplement our property retriever system xr.
forour proposed property ranker module, we used abert-base-uncased, followed by a mean poolinglayer, and then a dense layer of size 512. we usehuggingface transformer package16 to ﬁne-tunegpt-2 for all our generation models..a.3 anecdotal examples: property retrieval.
table 12 shows some hand-picked examples whereour proposed xr system retrieves a set of propertiesto either support or refute the given option..query (q, a, c): (the person used a candle tonavigate up the spiral staircase, where were theylikely?, light house, true)gold set (p∗): {’light house has a spiral stair-case’, ’light house is a structure’, ’a candle canbe used inside a light house’}ours+top-k: {’light house has a spiral stair-case’, ’a candle can be used inside a light house’,’light house is a structure’}bm25+top-k: {’a candle can be used inside alight house’, ’light house has a spiral staircase’,’candle is used to counter insufﬁcient lighting’}.
query (q, a, c): (sally took her medicine andexperienced strong side effects.
what did doctorssay about the side effects?, distinguished, false)gold set (p∗): {’distinguished means importantor respected’}ours+top-k: {’distinguished means importantor respected’}bm25+top-k: {’sally belong to the house andher neighbour’}.
query (q, a, c): (two friends wanted to spenda quiet evening together, what did they go see?,restaurant, false)gold set (p∗): {’restaurant will not be quiet’}ours+top-k: {’restaurant is where people goand eat’}bm25+top-k: {’restaurant will not be quiet’}.
table 12: anecdotal examples of retrieved propertiesby our proposed xr system..14https://pytorch.org/15https://www.sbert.net/16https://huggingface.co/transformers/.
3062a.4 anecdotal examples: property.
generation.
table 13 shows some hand-picked examples ofgenerated properties by xgp model and retrievedproperties by xr system from the silver corpus..query (q, a, c): (where do people go to pray?,church, true)gold set (p∗): {’prayer is done at church’, ’peo-ple go to church for praying’}ours+top-k: {’people go to church to worshipand pray’, ’some people go to church to pray totheir god’, ’if you want to pray then you shouldgo to church’}xgp: {’people go to a church to pray’, ’churchis a place of worship’}.
query (q, a, c): (how would someone feel aftergoing for run?, falling down, false)gold set (p∗): {’going for a run generally won’tmake one fall down’}ours+top-k: {’something that might happenas a consequence of going for a run is fallingdown’}xgp: {’person doesn’t fall down after going forrun always’, ’falling down is not a feeling’}.
query (q, a, c): (what is the best course of ac-tion for a person to take if they want to get upearly?, dawn, false)gold set (p∗): {’dawn is not an action’}ours+top-k: {’something that might happenwhen you get up early is you see the dawn’}xgp: {’dawn is not the best action for a personto take if he wants to get up early’}.
table 13: anecdotal examples of generated propertiesby xgp model and retrieved properties by the best xrsystem using silver corpus..a.5 anecdotal examples: free-flowexplanation generation.
table 14 gives an example of free-ﬂow explanationgeneration by the two variants of xgf system..a.6 human-metric correlation experiment.
the semantic textual similarity (sts) task aimsto measure semantic similarity between two sen-tences quantitatively.
n -gram matching based met-rics (cider, meteor, and rouge)17 only cap-.
input: question: sally went to a store and spentmoney.
most of her purchases were fresh butsome were frozen.
what did she do?
the optionsare made a mistake, control people, get things,buy food, pay bills.
the best answer is buy foodbecausegold free-ﬂow: buying food is an activity doneat store which requires money.
it can be bothfresh and frozen.
all the other options are incor-rect as they are not related to spending money tobuy something.
pre-trained gpt-2: they have a good idea ofwhere you want to buy.
if they don’t know, buyfood.
if you are going to buy food, it should beon the menu.
if you are going to buy a food itemthat is going to get you a lot of attention andattention is not being paid to you, buy it.
buythe food.
(“buy the food” repeated 33 times)xgf-i: food is sold in store so sally boughtfresh food from a store and bought it from astore.
all the other options are not fesiable asthey are not a place where sally spent money.
xgf-ii: buying food is done by sally.
shewent to a store to buy food.
controlling peopleis not done by buying food.
getting things isnot done by sally.
paying bills is not related tospending money..table 14: anecdotal example of free-ﬂow explanationgeneration by 2 variants of xgf system and pre-trainedgpt-2..ture the lexical and syntactic similarity and arenot suitable for capturing the semantic similaritybetween two sentences.
spice uses a semanticrepresentation known as scene graphs to overcomethe problem with n-gram matching.
sts-bert18is an implementation interface for a pre-trainedbert model followed by a linear regression head,ﬁne-tuned over sts-b dataset (wang et al., 2018)to compute semantic similarity between englishsentences.
it can also be used to provide a sim-ilarity score in our case.
we designed an exper-iment to ﬁnd which metric correlates better withhuman judgments.
we took 100 random samples ofqueries (q, a, c), picked a valid gold, and one of thexgp generated properties.
we human-annotatedwhether the picked gold and xgp generated prop-erty are semantically similar or not.
we also cal-.
17bleu was least correlated with human judgment, there-.
18https://pypi.org/project/.
fore it was not included in further experiments..semantic-text-similarity/.
3063culate all the metrics scores between both sets ofproperties.
if the score is greater than a thresholdτ , we say the properties are semantic similar, oth-erwise not.
threshold τ for each metric is selectedby maximizing the f1 score for these 100 selectedsamples.
we also calculated pearson’s correlationcoefﬁcient between metric scores and human an-notations.
we compared the f1 scores of differentmetrics and found sts-bert score and spiceto be having the highest f1 scores and maximumhuman correlation..thresholds veriﬁcation: we designed anotherexperiment to verify these thresholds.
we took 200random queries (q, a, c) along with one of theirgold properties from ecqa dataset.
we asked adifferent annotator to write semantically similarproperty to gold property for each of the ﬁrst 100queries and semantically dissimilar property for theother 100 queries.
we used the thresholds calcu-lated in the previous experiment to calculate thef1 scores using different metrics on these two setsof properties.
sts-bert score and spice metrichave the highest f1 scores in this experiment also.
table 15 shows the thresholds (τ ), correspondingf1 scores, and pearson’s correlation coefﬁcientswith human annotation for different metrics in ex-periment 2. we used the same thresholds (τ ) forretrieval using silver corpus and property genera-tion results reported in the table 8 and 9 of themain paper using our proposed unweighted bipar-tite matching based metric..measure.
st.sp.
c.m.r.0.6.
0.3thresholdf1 score (%) 78.1 64.7 35.3 54.3 36.559.6 35.0 31.0 47.7 21.8pc (%).
0.4.
0.3.
0.3.table 15: human correlation with different metrics.
pc:pearson’s coefﬁcient, st: sts-bert, sp: spice,c:cider, m:meteor, r:rouge.
a.7 human validation experiment.
table 16 lists the pearson’s correlation coefﬁcientsfor human judgements in relative dataset qualityexperiment, for each quality measure (column) andproperty (row) combination in table 6. pearson’scoefﬁcient is computed as follows: for each judge,we calculate the correlation coefﬁcient between thescores given by the judge, and the average of thescores across all the judges, for commonly labeled50 samples.
this is followed by computation of.
the average of this coefﬁcient across all the judgesfor each entry in the table..aspect.
ecqabetter.
cos-ebetter.
bothgood.
bothbad.
comprehensive 78.068.7rc65.1m/nr74.0overall.
92.0-86.9-.
84.9 75.792.0 79.861.7 73.574.5.
-.
table 16: pearson’s correlation coefﬁcient for rela-tive dataset quality experiment: ecqa and cos-e.rc: refutation complete, m/nr: minimality/non-redundancy, - means 1 or more annotators never pickedthis option..a.8 more retrieval and generation results.
table 17 shows f1 scores for retrieval from silvercorpus and property generation using different met-rics.
table 18 compares the free-ﬂow explanationgenerated by xgf-i and xgf-ii..system.
f1 score (%).
st.sp.
c.m.r.retrievalbm25+air 15.1 18.4 3.2bm25+top-k 16.2 19.8 4.125.0 25.4 3.3ours+air27.6 28.5 4.0ours+top-k.4.3 13.14.5 10.15.4 14.75.5 14.1.generationxgp-wxgp.
33.0 30.1 9.8 12.3 22.636.4 32.2 11.1 13.7 25.7.table 17: explanation retrieval results over silver cor-pus for different xr systems and property generationresults by the xgp models for all 5 metrics.
st: sts-bert, sp: spice, c:cider, m:meteor, r:rouge.
system.
st.sp.
c.m.r.xgf-i62.5 32.1 20.3 17.5 12.2xgf-ii 61.9 31.3 18.7 17.2 12.5.table 18: semantic similarity scores for free-ﬂow gen-eration on all 5 metrics.
st: sts-bert, sp: spice,c:cider, m:meteor, r:rouge.
a.9 data insights.
this section provides some more insights aboutthe ecqa dataset.
table 19 gives the word-overlap.
3064figure 1: (a) distribution of number of properties per question.
(b) distribution of properties length in words..(a).
(a).
(b).
(b).
figure 2: distribution of number of distinct nouns (a) and verbs (b) in cqa vs ecqa.
for each n on x axis, theplot gives the fraction of questions which have n distinct nouns/verb..metric scores like bleu-4 and rouge betweenthe explanation and the corresponding question textfor both cos-e and ecqa.
the scores are low forboth cos-e and ecqa.
we note these scores maynot be reﬂective of the true picture about overlap ofinformation content between the explanation andthe question text because of two reasons: (a) expla-nations may paraphrase the content in the originalquestion text artiﬁcially resulting in a low score,(b) the score may be low due to difference in thelength of the explanation and question.
thus, wehave focused on the number of (distinct) importantwords present only in the explanation, as a metricfor information content in the main paper (table 4)..dataset.
bleu-4 rouge.
cos-e \ cqaecqa \ cqa.
18.018.3.
16.224.5.table 19: comparing information contentword-overlap metrics in cqa, cos-e and ecqa..through.
we give distribution of number of properties infigure 1a and length of properties in figure 1b.
the green curve corresponds to positive properties,red curve corresponds to negative properties and.
the blue curve corresponds to total properties.
thedistribution of extra number of nouns and verbsin the ecqa dataset are given in figure 2a and 2brespectively.
here, the green curve corresponds tocqa dataset (number of distinct words in questionand answer choices).
the red curve correspondsto ecqa dataset (number of distinct words in prop-erties and free-ﬂow explanation).
finally, the bluecurve represents the ecqa \ cqa plot correspond-ing to the number of novel words (present in theproperties and free-ﬂow explanation but not in thequestion and answer choices).
this, in turn, givesa rough idea of the extra information present in ourannotations..we analyzed the rare novel words present inour annotations and found that on average, everyannotation has 0.23 words which do not appearanywhere else in the corpus, 0.7 words which ap-pear less than 10 times and 2.4 words appearingless than 100 times in the whole corpus of about1.5 million words.
this gives an idea about thediversity of extra information in our annotations,indicating the inherent hardness for any machineto generate it without access to external relevantcommon-sense facts..3065