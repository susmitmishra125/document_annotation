claim matching beyond english to scale global fact-checking.
ashkan kazemiuniversity of michigan and meedanashkank@umich.edu.
kiran garimellamitgarimell@mit.edu.
devin gaffneymeedandevin@meedan.com.
scott a. haleuniversity of oxford and meedanscott@meedan.com.
abstract.
manual fact-checking does not scale well toserve the needs of the internet.
this issue isfurther compounded in non-english contexts.
in this paper, we discuss claim matching as apossible solution to scale fact-checking.
wedeﬁne claim matching as the task of iden-tifying pairs of textual messages containingclaims that can be served with one fact-check.
we construct a novel dataset of whatsapptipline and public group messages alongsidefact-checked claims that are ﬁrst annotated forcontaining “claim-like statements” and thenmatched with potentially similar items andannotated for claim matching.
our datasetcontains contentin high-resource (english,hindi) and lower-resource (bengali, malay-alam, tamil) languages.
we train our own em-bedding model using knowledge distillationand a high-quality “teacher” model in orderto address the imbalance in embedding qualitybetween the low- and high-resource languagesin our dataset.
we provide evaluations on theperformance of our solution and compare withbaselines and existing state-of-the-art multilin-gual embedding models, namely laser andlabse.
we demonstrate that our performanceexceeds laser and labse in all settings.
we release our annotated datasets1, codebooks,and trained embedding model2 to allow for fur-ther research..1.introduction.
human fact-checking is high-quality but time-consuming.
given the effort that goes into fact-checking a piece of content, it is desirable thata fact-check be easily matched with any contentto which it applies.
it is also necessary for fact-checkers to prioritize content for fact-checking.
1https://doi.org/10.5281/zenodo..4890949.indian-xlm-r.2https://huggingface.co/meedan/.
since there is not enough time to fact-check every-thing.
in practice, there are many factors that affectwhether a message is ‘fact-check worthy’ (kon-stantinovskiy et al., 2020; hassan et al., 2017), butone important factor is prevalence.
fact-checkersoften want to check claims that currently have highviewership and avoid fact-checking ‘fringe’ claimsas a fact-check could bring more attention to theclaims—an understudied process known as ampli-ﬁcation (phillips, 2018; wardle, 2018).
while thenumber of exact duplicates and shares of a messagecan be used as a proxy for popularity, discoveringand grouping together multiple messages makingthe same claims in different ways can give a moreaccurate view of prevalence.
such algorithms arealso important for serving relevant fact-checks via‘misinformation tiplines’ on whatsapp and otherplatforms (wardle et al., 2019; meedan, 2019; ma-gall´on rosa, 2019)..identifying pairs of textual messages containingclaims that can be served with one fact-check isa potential solution to these issues.
the ability togroup claim-matched textual content in differentlanguages would enable fact-checking organiza-tions around the globe to prioritize and scale uptheir efforts to combat misinformation.
in this pa-per, we make the following contributions: (i) wedevelop the task of claim matching, (ii) we trainand release an indian language xlm-r (i-xlm-r) sentence embedding model, (iii) we developa multilingual annotated dataset across high- andlower-resource languages for evaluation, and (iv)we evaluate the ability of state-of-the-art sentenceembedding models to perform claim matching atscale.
we formally evaluate our methods within lan-guage but also show clusters found using our mul-tilingual embedding model often have messages indifferent languages presenting the same claims..we release two annotated datasets and our code-books to enable further research.
the ﬁrst dataset.
proceedingsofthe59thannualmeetingoftheassociationforcomputationallinguisticsandthe11thinternationaljointconferenceonnaturallanguageprocessing,pages4504–4517august1–6,2021.©2021associationforcomputationallinguistics4504table 1: example message pairs in our data annotated for claim similarity..item #1.item #2.barber’s salon poses the biggest risk factorfor corona!
this threat is going to remainfor a long duration.
*at an average a bar-ber’s napkin touches 5 noses minimum*the us health dept chief j anthony saidthat salons have been responsible for almost50% deaths..*the biggest danger is from the barbershopitself*.
this danger will remain for a longtime.
*barber rubs the nose of at least 4to 5 people with a towel,* the head of theus department of health j. anthony hassaid that 50 percent of the deaths in the ushave happened in the same way that camein saloons..label.
very similar.
very similar.
very similar.
very similar.
somewhat similar.
guys important msg:- there is the news ofmilitary bsf & cisf coming to mumbai andhaving a seven days to 2 weeks curfew.. .
..*just received information* entire mumbaiand pune will be under military lockdownfor 10 days starts from saturday.. .
..don’t believe this fake picture of pmmodi; here’s the truth.
don’t believe this fake picture of viratkohli; here’s the fact check.
very dissimilar.
consists of 5,066 messages in english, hindi, ben-gali, malayalam, and tamil that have been triple an-notated for containing ‘claim-like statements’ fol-lowing the deﬁnition proposed by fact-checkers inkonstantinovskiy et al.
(2020).
the second datasetconsists of 2,343 pairs of social media messagesand fact-checks in the same ﬁve languages as theﬁrst dataset annotated for claim similarity.
table 1shows examples of annotated pairs of messagesfrom the second dataset..2 related work.
2.1 semantic textual similarity.
semantic textual similarity (sts) refers to the taskof measuring the similarity in meaning of sen-tences, and there have been widely adopted evalu-ation benchmarks including the semantic textualsimilarity benchmark (sts-b) (2017; 2016; 2015;2014; 2013; 2012) and the microsoft researchparaphrase corpus (mrpc) (dolan and brockett,2005).
the sts-b benchmark assigns discrete sim-ilarity scores of 0 to 5 to pairs of sentences, withsentence pairs scored zero being completely dis-similar and pairs scored ﬁve being equivalent inmeaning.
the mrpc benchmark assigns binary.
labels that indicate whether sentence pairs are para-phrases or not..semantic textual similarity is a problem still ac-tively researched with a dynamic state of the artperformance.
in recent work from raffel et al.
(2020), the authors achieved state-of-the-art perfor-mance on sts-b benchmark using the large 11bparameter t5 model.
the albert model (lanet al., 2019) achieved an accuracy of 93.4% on themrpc benchmark and is considered one of the topcontenders on the mrpc leaderboard..while semantic textual similarity is similar toclaim matching, the nuances in the latter requirespecial attention.
claim matching is the task ofmatching messages with claims that can be servedwith the same fact-check and that does not alwaystranslate to message pairs having the same mean-ings.
moreover, claim matching requires workingwith content of variable length.
in practice, contentfrom social media also has wide variation in lexicaland grammatical quality..2.2 multilingual embedding models.
embedding models are essential for claim and se-mantic similarity search at scale, since classiﬁca-tion methods require a quadratic number of compar-.
4505पािक�तान म� गनपॉइंट पर हुई एक डकैती को बताया जा रहा है मुंबई की घटनाकराची पािक�तान म� घिटत लूट को मुंबई का बताया जा रहा है।பாகிஸ்தானில் உள்ள இந்திய �தர் உடன�யாக ெடல்லி தி�ம்ப மத்திய அர� உத்தர�*ெசய்திகள்24/7*   *flash*  *பாகிஸ்தானில் உள்ள இந்திய �தர் ெடல்லி தி�ம்ப மத்திய அர� உத்தர� என தகவல்..*ഇവിടുെ� മാമ മാധ്യമ�ൾ live  കാണി�ില്േലലും േദശീയ മാധ്യമ�ൾ െചയ്തു േക�ാഇവിടുെ�  മാധ്യമ�ൾ കാണി�ില്േലലും േദശീയ മാധ്യമ�ൾ െചയ്തു േക�ാisons.
while we have seen an increasing number oftransformer-based contextual embedding modelsin recent years (devlin et al., 2019; reimers andgurevych, 2019; cer et al., 2018), the progress hasbeen asymmetric across languages..the xlm-r model by conneau et al.
(2019)with 100 languages is a transformer-based modelwith a 250k token vocabulary trained by multi-lingual masked language modeling (mlm) withmonolingual data and gained signiﬁcant improve-ments in cross-lingual and multilingual bench-marks.
laser (artetxe and schwenk, 2019) pro-vided language-agnostic representation of text in93 languages.
the authors trained a bilstm archi-tecture using parallel corpora and an objective func-tion that maps similar sentences in the same vicinityin a high-dimensional space.
language-agnosticbert sentence embeddings (labse) by feng et al.
(2020) improved over laser in higher resourcelanguages by mlm and translation language mod-eling (tlm) pretraining, followed by ﬁne-tuningon a translation ranking task (yang et al., 2019)..2.3 claim matching.
shaar et al.
(2020) discussed retrieval and rankingof fact-checked claims for an input claim to detectpreviously debunked misinformation.
they intro-duced the task, as well as a dataset covering us pol-itics in english, and two bm25 based architectureswith sbert and a bert-based reranker on top.
vo and lee (2020) tackled a similar problem byﬁnding relevant fact-check reports for multimodalsocial media posts.
however these projects only fo-cus on english data that mainly cover u.s. politicsand at least one of the matching pairs is a claimfrom a fact-check report.
additionally, the datacollection process used in shaar et al.
(2020) mightnot necessarily capture all possible matches for aclaim, since the dataset is constructed by includ-ing only the claims mentioned in one fact-checkreport and not all previous occurrences.
this mayskew results and increase the risk of the modelhaving a high false negative ratio.
recently, thecheckthat!
lab 2020 (barr´on-cedeno et al., 2020)has presented the same problem as a shared task.
we improve on prior work by ﬁnding a solutionthat works for high- and low-resource languagesand also for matching claims between pairs of so-cial media content and pairs of fact-checks.
weexplicitly annotated claim pairs that might match,avoiding the aforementioned false negatives issue.
by design and providing more accurate models andevaluations..3 data sources.
the data used in this paper comes from a vari-ety of sources.
we use a mixture of social media(e.g., whatsapp) content alongside fact-checkedclaims, since it is essential for any claim-matchingsolution to be able to match content both amongfact-checked claims and social media posts as wellas within social media posts.
among the preva-lent topics in our data sources are the covid-19pandemic, elections, and politics..tiplines.
meedan, a technology non-proﬁt, hasbeen assisting fact-checking organizations to setupand run misinformation tiplines on whatsapp us-ing their open-source software, check.
a tiplineis a dedicated service to which ‘tips’ can be sub-mitted by users.
on whatsapp, tiplines are phonenumbers to which whatsapp users can forwardpotential misinformation to check for existing fact-checks or request a new fact-check.
the ﬁrst tiplinein our dataset ran during the 2019 indian electionsand received 37,823 unique text messages.
severaladditional always-on tiplines launched in decem-ber 2019 and ran throughout the 2020 calendaryear.
we obtained a list of the text of messages andthe times at which they were submitted to thesetiplines for march to may 2019 (indian electiontipline) and for february 2020 to august 2020 (allother tiplines).
we have no information beyond thetext of messages and the times at which they weresubmitted.
in particular, we have no informationabout the submitting users..whatsapp public groups.
in addition to themessages submitted to these tiplines, we have datafrom a large number “public” whatsapp groupscollected by garimella and eckles (2020) dur-ing the same time period as the indian electiontipline.
the dataset was collected by monitoringover 5,000 public whatsapp groups discussingpolitics in india, totaling over 2 million uniqueposts.
for more information on the dataset, pleaserefer to garimella and eckles (2020).
such pub-lic whatsapp groups, particularly those discussingpolitics have been shown to be widely used in in-dia (lokniti, 2018)..fact-check reports.
we aggregate roughly150,000 fact-checks from a mixture of primary.
4506fact-checkers and fact-check aggregators.
we em-ploy aggregators such as google fact-check ex-plorer,3 gesis (tchechmedjiev et al., 2019), anddata commons, and include roughly a dozen fact-checking organizations certiﬁed by the interna-tional fact-checking network with either global orgeographically-relevant scope in our dataset.
allfact-checks included at minimum a headline and apublish date, but typically also include a lead or thefull text of the fact-check, as well as adjudicationof the claim (e.g., truth or falsity), and sometimesinclude information of lesser value for our worksuch as author, categorization tags, or references tooriginal content that necessitated the fact-check..4 data sampling & annotation.
to construct a dataset for claim matching, we de-sign a two-step sampling and annotation process.
we ﬁrst sample a subset of items with potentialmatches from all sources and then annotate andselect the ones containing “claim-like statements.”in a second task, we annotate pairs of messagesfor claim similarity.
one of the messages in eachpair must have been annotated as containing a“claim-like statement” in the ﬁrst annotation task.
we sample possible matches in several ways in or-der to not unnecessarily waste annotator time.
wedescribe these sampling strategies and other detailsof the process in the remainder of this section..4.1 task 1: claim detection.
task 1 presented annotators with a whatsapp mes-sage or fact-check headline and asked whether itcontained a “claim-like statement.”.
we ﬁrst created a codebook by inductively ex-amining the english-language data, translations ofthe other-language data, and discussing the taskwith two fact-checkers (one hindi-speaking andone malayalam-speaking).
we began with the def-inition set out by practitioners (konstantinovskiyet al., 2020) for a “claim-like statement” and cre-ated examples drawn from our data sources.
an-notators were asked whether the message had aclaim-like statement and allowed to choose “yes”,“probably”, “no”, or “n/a: the message is not inlanguage x” (where x was the language being an-notated).
the instructions made clear “probably”should be used sparingly and was intended for in-stances where an image, video, or other context was.
3https://toolbox.google.com/factcheck/.
explorer.
κ is randolph’stable 2: claim-like statements.
marginal-free kappa agreement on the collapsed data(yes/probably, no, incorrect language).
all languageswere annotated by three annotators..language.
items.
κ majority yes.
bengali (bn)english (en)hindi (hi)malayalam (ml)tamil (ta).
1093100010001025948.
0.300.600.590.630.63.
30%54%41%69%21%.
missing.
the detailed instructions and an exampleof the interface are provided in the supplementalmaterials..we recruited three native speakers for each ofhindi, bengali, tamil, and malayalam through in-dian student societies at different universities aswell as independent journalists.
all of our an-notators had a bachelor’s degree and many werepursuing masters or phds.
we onboarded all an-notators and discussed the risks of possibly polit-ically charged, hateful, violent, and/or offensivecontent in the dataset.
our custom-built annotationinterface provided the ability to skip any piece ofcontent with one keystroke.
we also encouragedannotators to take frequent breaks and calculatedthese breaks into our payments..our english-language data is a mix of indian andglobal content.
two of our english annotators hadpreviously completed the hindi and malayalamtasks while the third english annotator completedonly the english-language task..we calculate agreement using randolph’smarginal-free kappa (randolph, 2005).
this mea-sure better estimates intercoder agreement in unbal-anced datasets compared to ﬁxed-marginal scoreslike fleiss’ kappa (warrens, 2010)..all participants annotated 100 items indepen-dently.
we then discussed disagreements on these100 items and updated the codebook if needed.
the participants then annotated datasets of approx-imately 1,000 items in each language.
informationabout this ﬁnal annotation dataset is presented intable 2. agreement between annotators for thistask is lower than the next task but on par withannotation tasks for hate speech and other ‘hardtasks’ (del vigna et al., 2017; ousidhoum et al.,2019) suggesting determining whether a messagehas a claim-like statement is harder than determin-ing the similarity of the statements (task 2)..4507table 3: task 2 dataset.
κ is randolph’s marginal-freekappa (randolph, 2005) agreement on the collapseddata (very similar, not very similar, n/a).
“v.
sim.”is the percentage of cases where two or more annota-tors indicated the pairs were “very similar.”.
lang.
pairs.
κ annotators v. sim..bnenhimlta.
644398399604298.
0.64–0.680.690.900.910.85.
2–34332.
6%15%21%7%11%.
4.2 task 2: claim similarity.
the second task presented annotators with twomessages and asked how similar the claim-likestatements were in the messages.
annotators weregiven a four-point scale (“very similar”, “some-what similar”, “somewhat dissimilar”, and “verydissimilar”).
we prepared a codebook with clearinstructions for each response and examples in con-sultation with the two fact-checkers and discussedit with all annotators before annotation began.
an-notators could also select “n/a: one or more of themessages is not in language x or does not containa claim-like statement”)..our initial testing showed the largest source ofdisagreement was between “somewhat dissimi-lar” and “very dissimilar.” we added guidance tothe codebook but did not dwell on this aspect aswe planned to collapse these categories together.
we prioritize our evaluations on “very similar” or“somewhat similar” statements..although our goal is claim matching, this taskasked annotators about the similarity of claim-like statements as the annotators were not all fact-checkers.
we found asking the annotators to spec-ulate about whether some hypothetical fact-checkcould cover both statements was unhelpful.
ourcodebook is constructed such that “very similar”pairs of messages could be served by one fact-check while “somewhat similar” messages wouldpartially be served by the same fact-check.
a linkto the codebook is in the supplemental materials.
the same annotators from task 1 completedtask 2 with a few exceptions.
one tamil annota-tor was unable to continue due to time restrictions,and one bengali annotator only completed partof the annotations (we calculate agreement withand without this annotator in table 3).
we addeda fourth english annotator in case there was an-.
figure 1: cdf of cosine similarities of all labeled dataaccording to laser, labse, and i-xlm-r models.
legend: “similar” pairs were annotated by two or moreannotators as being “very similar”.
“not sim.” encom-passes all other pairs, excluding “n/a” pairs..other dropout but all english annotators completed.
table 3 shows a breakdown of the dataset by lan-guage.
in general, agreement on this task, evenamong the same annotators as task 1, was muchhigher than task 1 suggesting claim similarity is aneasier task than claim detection.
the largest pointof disagreement was around the use of the n/alabel: discussing this with annotators we found itwas again the disagreement about whether certainmessages had claims leading to the disagreement..4.3 sampling.
a purely random sample of pairs is very unlikely toﬁnd many pairs that match.
we considered examin-ing pairs with the highest cosine similarities only,but these pairs were likely to match in trivial anduninteresting ways.
in the end, we used randomstratiﬁed sampling to select pairs for annotation..we ﬁrst calculate all pairwise cosine similari-ties using multiple embedding models (describedin section 5).
we then use stratiﬁed sampling tosample 100 pairs in proportion to a gaussian distri-bution with mean 0.825 and standard deviation 0.1for each model and language.
we do this due to ourstrong prior that pairs close to zero as well as pairsclose to one are usually ‘uninteresting.’ these rep-resent pairs that either clearly do not match or (veryoften) clearly match.
in practice, we still sample awide range of values (figure 1).
we also include100 random pairs for each language with the excep-tion of tamil due to annotator time limitations..we used laser, labse, and our indian xlm-r (i-xlm-r) model (details below) to sample pairsfor all languages.
our bengali and malayalamannotators had additional capacity and annotated.
45080.00.20.40.60.81.0cosine similarity0.00.20.40.60.81.0fraction of postslabse not sim.labse similarlaser not sim.laser similari-xlm-r not sim.i-xlm-r similaradditional pairs drawn in a similar way..5 claim matching methods.
5.1 experimental setup.
we use a gpu-enabled server with one 1080 gputo train our own embedding model and run therest of our experiments on desktop computers withminimal runtime.
we use the elasticsearch im-plementation of the bm25 system and use thesentence-transformers (for i-xlm-r), pytorch(for laser), and tensorflow (for labse)4 totrain and retrieve embeddings.
we follow the ap-proach of reimers and gurevych (2020) for tuningthe hyperparameters of our embedding model..5.2 training a multilingual embedding.
model.
we use the knowledge distillation approach pre-sented in reimers and gurevych (2020) to traina multilingual embedding model.5 the approachadopts a student–teacher model in which a highquality teacher embedding model is used to aligntext representations of a student model by map-ping embeddings of text in the student languageto close proximity of the embeddings of the sametext in the teacher language.
using this approachwe train a model for english, hindi, malayalam,tamil, and bengali.
we refer to this model as ourindian xlm-r model (i-xlm-r), and use it asone of the models we evaluate for claim matching..training data.
the knowledge distillation ap-proach requires parallel text in both student andteacher languages for training embedding models.
we ﬁnd the opus parallel corpora (tiedemann,2012) to be a useful and diverse resource for paral-lel data.
we retrieve parallel data between englishand the collection of our four indian languagesfrom opus and use it as training data..training procedure.
for a teacher model mtand a student model ms and a collection of (si, ti)pairs of parallel text, we minimize the followingmse loss function for a given mini-batch b:.
[(mt (si) − ms(si))2 + (mt (si) − ms(ti))2].
1|b|.
(cid:80)i∈b.
intuitively, this loss function forces embeddingsof the student model for both ti and si to bein proximity of the teacher embeddings for si,.
4we use https://github.com/bojone/labse.
5trained models from reimers and gurevych do not in-clude embeddings for bengali, tamil, and malayalam, whichmotivated us to train the i-xlm-r model..therefore transferring embedding knowledge fromthe teacher to the student model.
for trainingour indian xlm-r model, we pick the englishsbert model as teacher (reimers and gurevych,2019) (for its high quality embeddings) and xlm-roberta (xlm-r) as the student (for sota per-formance in nlp tasks and a universal vocabularythat includes tokens from 100 languages)..5.3 model architecture.
we evaluate a retrieval-based claim matching so-lution built on top of the bm25 retrieval sys-tem (robertson and zaragoza, 2009) as well asan embeddings-only approach.
in the ﬁrst case,queries are fed into bm25 and the retrieved resultsare then sorted based on their embedding similarityto the input query.
the top ranking results are thenused as potential matches for the input claim.
in thelatter case, we classify pairs of items using featuresderived from the embedding models..6 results.
for some applications, it is good enough to beable to rank the most similar claims and treat theproblem of claim matching as an information re-trieval problem.
this is the case, for example, whenfact-checkers are examining possible matches todetermine if a new content item matches a previ-ous fact-check.
we discuss the performance ofinformation retrieval approaches in section 6.1..in many other applications, however, we seeka system that can determine if the claims in twoitems match without human intervention.
theseapplications demand a classiﬁcation approach: i.e.,to determine whether two items match.
this allowssimilar items to be grouped and fact-checkers toidentify the largest groups of items with claimsthat have not been fact-checked.
we discuss theperformance of simple classiﬁcation approaches insection 6.2..6.1.information retrieval approach.
we ﬁnd the mean reciprocal rank (mrr) metricto be a good ir-based performance measure forour system, since we only know of one match inthe retrieved results by the system for our queries.
we use the base bm25 system as a strong baselineto compare against.
we also compare our systemwith other state-of-the-art multilingual embeddingmodels used for reranking, namely laser andlabse.
results are presented in table 4..4509table 4: mrr across different models and languages.
columns refer to reranking embedding models on topof bm25, with the exception of bm25 as the baseline..language.
bm25 laser labse i-xlm-r.0.4247bengali0.4286englishhindi0.4524malayalam 0.39030.4747tamil.
0.41700.42470.42890.37770.4050.
0.41200.41010.36750.36510.4563.
0.52810.42210.48490.40230.4634.figure 2: accuracy, precision, recall, and f1 for sim-ple thresholds on the cosine similarity scores..the bm25 with i-xlm-r reranking outper-forms other systems in all languages, with the ex-ception of tamil and english where the systemperforms comparably with the bm25 baseline.
thelargest lead in performance of the i-xlm-r basedmodel is for bengali, where the mrr score is morethan 0.1 higher than the bm25 baseline..both laser and labse fall short on surpassingthe baseline for any of the languages.
laserperforms the worst on tamil, where its mrr scoreis nearly 0.07 less than bm25.
similarly, labse’slargest difference with bm25 is in hindi whereit falls short by 0.085. although there is roomfor improvement in some languages, the i-xlm-rseems the best choice if only one system is chosen.
after calculating mrr we also evaluated thesystems on other metrics, namely “mean first rel-evant” (mfr, fuhr (2018)) and haspositive@k(shaar et al., 2020).
both measures did not demon-strate any meaningful patterns useful for selectingthe best system.
we do not include the details ofthese evaluations for brevity..6.2 classiﬁcation approaches.
responding to submitted content on a tipline, aswell as grouping claims to understand their relativeprevalence/popularity, requires more than present-ing a ranked list as occurs in the information re-trieval approaches in the previous subsection and inprevious formulations of this problem (e.g., shaaret al., 2020).
in this section we use the annotatedpairs to evaluate how well simple classiﬁers per-form with each model..threshold classiﬁer.
the ﬁrst ‘classiﬁer’ weevaluate is a simple threshold applied to the co-sine similarity of a pair of items.
items above thethreshold are predicted to match while items witha similarity below the threshold are predicted tonot match.
in doing this, we seek to understand theextent to which the embedding models can separatemessages with matching claims from those withnon-matching claims..an ideal model would assign higher cosine simi-larity scores to every pair of messages with match-ing claims than to pairs of messages with non-matching claims.
table 5 shows the f1 scoresaveraged across 10 runs of 10-fold cross validationfor binary classiﬁers applied to all languages andeach language individually.
in general, the indianxlm-r model performs best at the task with f1scores ranging from 0.57 to 0.88. as shown infigure 2, our indian xlm-r model outperformslaser primarily in precision and outperformslabse primarily in terms of recall..the numbers reported in table 5’s last columnall come from i-xlm-r. the english-only sbertmodel performs slightly better with a maximum f1score of 0.90±0.09 at a threshold of 0.71 on en-glish data, suggesting that the student model mayhave drifted from the teacher model for englishduring training.
this drift is slight, however, andthe cosine similarities across all english-languagedata for the two models are highly correlated witha pearson’s correlation coefﬁcient of 0.93. theauthors of sbert released two additional multilin-gual models on that support english and hindi, butdo not support bengali, malayalam, or tamil.6 weﬁnd the models have comparable performance toi-xlm-r on english & hindi while f1 scores forother languages are between 0.17 and 0.61..6https://www.sbert.net/docs/.
pretrained_models.html hasbase-paraphrase-v1’tokens’.
‘xlm-r-distilroberta-and ‘xlm-r-bert-base-nli-stsb-mean-.
4510table 5: maximum average f1 scores ± standard devia-tions achieved with 10 runs of 10-fold cross-validationand the corresponding thresholds (thres.)
for eachscore.
the ‘classiﬁers’ are simple thresholds on the co-sine similarities..laser.
labse.
i-xlm-r.language.
f1 (thres.).
f1 (thres.).
f1 (thres.).
all.
english.
bengali.
0.55±0.08(0.91)0.68±0.21(0.96)0.85±0.09(0.85)0.74±0.13(0.88)malayalam 0.47±0.20(0.92)0.26±0.21(0.99).
tamil.
hindi.
0.58±0.07(0.84)0.58±0.23(0.90)0.77±0.15(0.77)0.61±0.15(0.87)0.71±0.20(0.85)0.50±0.20(0.98).
0.73±0.07(0.90)0.74±0.19(0.96)0.88±0.10(0.78)0.82±0.12(0.87)0.79±0.20(0.89)0.57±0.15(0.96).
our dataset includes both social media messages(namely, whatsapp messages) and fact-checks.
overall, performance is higher for matching fact-checks to one another than for matching social me-dia messages to one another for all models.
as anexample, the best-performing model, indian xlm-r, achieves a maximum f1 score of 0.76 with athreshold 0.87 for matching pairs of fact-checks,but only a maximum f1 score of 0.72 (threshold0.90) for matching pairs of social media messages..claim matching classiﬁer.
we train an ada-boost binary classiﬁer that predicts if two textualclaims match.
the features are all precomputed ortrivial to compute so that such a system could eas-ily be run to reﬁne a smaller number of candidatematches with minimal additional computation..we use lengths of claims, the difference inlengths, embedding vectors of each item, and theircosine similarity as features.
we build a balanceddataset by taking all the “very similar” pairs andmatching every item with a randomly selected “notvery similar” (every other label) item from thesame language.
we do not differentiate betweenpairs in different languages as our per languagedata is limited and all features including the em-bedding vectors translate across languages as theyare from mulitilingual embedding models..claim matching classiﬁcation results are pre-sented in table 6. we evaluate models using 10-fold cross validation and report accuracy and f1.
table 6: claim matching classiﬁcation results..model.
accuracy.
f1 (+).
f1 (-).
0.805±0.064laser0.797±0.059labsei-xlm-r 0.883±0.036.
0.789±0.0870.791±0.0670.885±0.036.
0.814±0.0390.800±0.0550.880±0.037.
all.
0.868±0.036.
0.868±0.036.
0.866±0.039.
scores for each class averaged over 10 runs.
consis-tent with previous outcomes, it is clear that usingthe i-xlm-r cosine similarity and embeddingsas input features results in better performance thanother models, including the model with all features.
the positive class f1 scores for all models intable 6 are notably higher than the threshold ap-proaches (table 5) suggesting information from theembeddings themselves and the lengths of the textsare useful in determining whether the claims in twomessages match.
the claim matching classiﬁer islanguage-agnostic and is learning from only 522datapoints, which underscores the quality of thei-xlm-r embeddings..error analysis.
we manually inspect the pairsclassiﬁed in error using the “threshold classiﬁer”and i-xlm-r. the pairs either have a similarityscore above the matching threshold but are “notsimilar” (false positives, 24/89) or are matchesand have a score below threshold (false negatives,65/89).
16 of the 24 false positives are labeled as“somewhat similar,” and manual inspection showsthat these pairs all have overlapping claims (i.e.,they share some claims but not others).
there areno obvious patterns for the false negatives, butsome of the errors are made in ambiguous cases..we also examine the errors of one random fold ofthe adaboost classiﬁer to further investigate whereour model makes mistakes.
there are a total of10 wrong predictions (6 false negatives and 4 falsepositives).
of these, 2/6 and 1/4 are annotationerrors.
within the false negatives, most other casesare pairs of text that are very similar but minimallyambiguous because of a lack of context, which an-notators correctly resolved to being identical.
anexample of such a false negative is the pair of mes-sages “claim rare ﬂower that blooms once in 400years in the-himalayas-called-mahameru-pushpam”and “images of mahameru ﬂower blooms once ev-ery 400 years in himalayas.” false positives wereall “somewhat similar” and “somewhat dissimilar”pairs that the classiﬁer mistook for “very similar.”there were no signiﬁcant discrepancies among lan-guages in classiﬁcation errors..45117 discussion & conclusions.
scaling human-led fact-checking efforts requiresmatching messages with the same claims.
in thispaper, we train a new model and create an evalua-tion dataset that moves beyond english and ameri-can politics.
our system is being used in practiceto support fact-checking organizations..we ﬁnd that the embedding models can gener-ally match messages with the same claims.
perfor-mance for matching fact-checks slightly exceedsthat for matching social media items.
this makessense, given that fact-checks are written by profes-sional journalists and generally exhibit less ortho-graphical variation than social media items..too few examples of fact-checks correctlymatched a social media item to evaluate perfor-mance in that setting.
this is not a major limitationsince nearly every fact-check starts from a socialmedia item.
so, in practice we only need to be ableto match social media items to one another in orderto locate other social media items having the sameclaims as the item that led to a fact-check..we evaluate claim matching within each lan-guage, but the embedding models are all multi-lingual and could serve to match claims acrosslanguages.
bm25 is not multilingual, but elastic-search can index embeddings directly.
previouslyde britto almeida and santos (2020) developed aelasticsearch plugin to query embeddings by co-sine distance, but since version 7.3 of elasticsearchthis functionality is now available natively in elas-ticsearch (tibshirani, 2019), meaning a large set ofembeddings can be searched efﬁciently to ﬁnd nearmatches across languages..as a proof of concept, we took the 37,823 uniquetext messages sent to the indian election tipline andclustered them using i-xlm-r and online, single-link hierarchical clustering with a threshold of 0.90.we found 1,305 clusters with 2 or more items; thelargest cluster had 213 items.
we hired an indianjournalist with experience fact-checking during theindian 2019 elections to annotate each of the 559clusters with ﬁve or more items by hand.
the anno-tation interface presented three examples from eachcluster: one with the lowest average distance to allother messages in the cluster, one with the highestdistance, and one message chosen randomly.
in137 cases the examples shown for annotation werefrom multiple languages, and in 132 of those casesthe journalist was able to identify the same claimsacross multiple languages.
although preliminary,.
this demonstrates the feasibility and importance ofmultilingual claim matching with these methods—an area we hope further work will tackle..our ﬁndings are supporting over 12 fact-checking organizations running misinformationtiplines.
the deployed system uses i-xlm-r andautomatically groups text messages with similari-ties over 0.95 and recommends possible matchesfrom less-similar candidates that fact-checking or-ganizations can conﬁrm or reject.
matches can alsobe added manually.
initial feedback from the fact-checkers has been positive, and we are collectingdata for further research and evaluation..we prioritized the well-being of annotators andthe privacy of whatsapp users throughout this re-search.
our data release conforms to the fairprinciples (wilkinson et al., 2016).
we have noidentifying information about whatsapp users andany references to personally identiﬁable informa-tion in messages such as phone numbers, emails,addresses and license plate numbers are removed topreserve user privacy.
we worked closely with ourannotators preparing them for the risk of hatefulcontent, encouraging frequent breaks, and payingwell-above minimum wage.
we took a compas-sionate response to covid disruptions and otherlife stresses even when this meant less annotateddata than was originally envisioned..acknowledgments.
this work was funded by the omidyar networkwith additional support from sida, the robert woodjohnson foundation, and the volkswagen founda-tion.
kiran garimella is supported by the michaelhammer postdoctoral fellowship at mit.
we arethankful to all of the wonderful annotators and fact-checking organizations who made this research pos-sible.
we are grateful to the meedan team, prof.rada mihalcea, gautam kishore shahi, and ouranonymous reviewers..references.
eneko agirre, carmen banea, claire cardie, danielcer, mona diab, aitor gonzalez-agirre, weiweiguo, i˜nigo lopez-gazpio, montse maritxalar, radamihalcea, german rigau, larraitz uria, and janycewiebe.
2015. semeval-2015 task 2: semantic tex-tual similarity, english, spanish and pilot on inter-pretability.
in proceedings of the 9th internationalworkshop on semantic evaluation (semeval 2015),pages 252–263, denver, colorado.
association forcomputational linguistics..4512eneko agirre, carmen banea, claire cardie, danielcer, mona diab, aitor gonzalez-agirre, weiweiguo, rada mihalcea, german rigau, and janycewiebe.
2014. semeval-2014 task 10: multilingualin proceedings of thesemantic textual similarity.
8th international workshop on semantic evaluation(semeval 2014), pages 81–91, dublin, ireland.
as-sociation for computational linguistics..eneko agirre, carmen banea, daniel cer, mona diab,aitor gonzalez-agirre, rada mihalcea, germanrigau, and janyce wiebe.
2016. semeval-2016task 1: semantic textual similarity, monolingualand cross-lingual evaluation.
in proceedings of the10th international workshop on semantic evalua-tion (semeval-2016), pages 497–511, san diego,california.
association for computational linguis-tics..eneko agirre, daniel cer, mona diab, and aitorgonzalez-agirre.
2012. semeval-2012 task 6: apilot on semantic textual similarity.
in *sem 2012:the first joint conference on lexical and compu-tational semantics – volume 1: proceedings of themain conference and the shared task, and volume2: proceedings of the sixth international workshopon semantic evaluation (semeval 2012), pages 385–393, montr´eal, canada.
association for computa-tional linguistics..eneko agirre, daniel cer, mona diab, aitor gonzalez-agirre, and weiwei guo.
2013.
*sem 2013 sharedin second jointtask: semantic textual similarity.
conference on lexical and computational seman-tics (*sem), volume 1: proceedings of the mainconference and the shared task: semantic textualsimilarity, pages 32–43, atlanta, georgia, usa.
as-sociation for computational linguistics..mikel artetxe and holger schwenk.
2019. mas-sively multilingual sentence embeddings for zero-shot cross-lingual transfer and beyond.
transac-tions of the association for computational linguis-tics, 7:597–610..alberto barr´on-cedeno, tamer elsayed, preslavnakov, giovanni da san martino, maram hasanain,reem suwaileh, and fatima haouari.
2020. check-that!
at clef 2020: enabling the automatic identiﬁca-tion and veriﬁcation of claims in social media.
in eu-ropean conference on information retrieval, pages499–507.
springer..daniel cer, mona diab, eneko agirre, i˜nigo lopez-gazpio, and lucia specia.
2017. semeval-2017task 1: semantic textual similarity multilingual andin proceedingscrosslingual focused evaluation.
of the 11th international workshop on semanticevaluation (semeval-2017), pages 1–14, vancouver,canada.
association for computational linguistics..daniel cer, yinfei yang, sheng-yi kong, nan hua,nicole limtiaco, rhomni st. john, noah constant,mario guajardo-cespedes, steve yuan, chris tar,brian strope, and ray kurzweil.
2018. universal.
in proceedings ofsentence encoder for english.
the 2018 conference on empirical methods in nat-ural language processing: system demonstrations,pages 169–174, brussels, belgium.
association forcomputational linguistics..alexis conneau, kartikay khandelwal, naman goyal,vishrav chaudhary, guillaume wenzek, franciscoguzm´an, edouard grave, myle ott, luke zettle-moyer, and veselin stoyanov.
2019. unsupervisedcross-lingual representation learning at scale.
arxivpreprint arxiv:1911.02116..caio sacramento de britto almeida and d´ebora ab-dalla santos.
2020. text similarity using word em-in workshopbeddings to classify misinformation.
on digital humanities and natural language pro-cessing, dhandnlp 2020..fabio del vigna, andrea cimino, felice dell’orletta,marinella petrocchi, and maurizio tesconi.
2017.hate me, hate me not: hate speech detection on face-book.
in in proceedings of the first italian confer-ence on cybersecurity (itasec17)..jacob devlin, ming-wei chang, kenton lee, andkristina toutanova.
2019. bert: pre-training ofdeep bidirectional transformers for language under-in proceedings of the 2019 conferencestanding.
of the north american chapter of the associationfor computational linguistics: human languagetechnologies, volume 1 (long and short papers),pages 4171–4186, minneapolis, minnesota.
associ-ation for computational linguistics..william b. dolan and chris brockett.
2005. automati-cally constructing a corpus of sentential paraphrases.
in proceedings of the third international workshopon paraphrasing (iwp2005)..fangxiaoyu feng, yinfei yang, daniel cer, naveenlanguage-arivazhagan, and wei wang.
2020.agnostic bert sentence embedding.
arxiv preprintarxiv:2007.01852..norbert fuhr.
2018. some common mistakes in ir eval-uation, and how they can be avoided.
in acm sigirforum, volume 51, pages 32–41.
acm new york,ny, usa..kiran garimella and dean eckles.
2020. images andmisinformation in political groups: evidence fromwhatsapp in india.
harvard kennedy school misin-formation review..naeemul hassan, fatma arslan, chengkai li, andmark tremayne.
2017.toward automated fact-checking: detecting check-worthy factual claimsthe 23rdby claimbuster.
acm sigkdd international conference on knowl-edge discovery and data mining, kdd ’17, page1803–1812, new york, ny, usa.
association forcomputing machinery..in proceedings of.
4513ra´ul magall´on rosa.
2019. veriﬁcado m´exico 2018:desinformaci´on y fact-checking en campa˜na elec-toral.
revista de comunicaci´on, 18(1):234–258..tor ﬁelds..lev konstantinovskiy, oliver price, mevan babakar,and arkaitz zubiaga.
2020. towards automatedfactchecking: developing an annotation schema andbenchmark for consistent automated claim detec-tion..zhenzhong lan, mingda chen, sebastian goodman,kevin gimpel, piyush sharma, and radu soricut.
2019. albert: a lite bert for self-supervised learn-arxiv preprinting of language representations.
arxiv:1909.11942..csds lokniti.
2018. how widespread is whatsapp’s.
usage in india?.
meedan.
2019. press release: new whatsapp tip linelaunched to understand and respond to misinforma-tion during elections in india..nedjma ousidhoum, zizheng lin, hongming zhang,yangqiu song, and dit-yan yeung.
2019. multilin-gual and multi-aspect hate speech analysis.
in pro-ceedings of the 2019 conference on empirical meth-ods in natural language processing and the 9th in-ternational joint conference on natural languageprocessing (emnlp-ijcnlp), pages 4667–4676..whitney phillips.
2018. the oxygen of ampliﬁcation..data & society, 22:1–128..colin raffel, noam shazeer, adam roberts, katherinelee, sharan narang, michael matena, yanqi zhou,wei li, and peter j liu.
2020. exploring the lim-its of transfer learning with a uniﬁed text-to-texttransformer.
journal of machine learning research,21(140):1–67..j. j. randolph.
2005. free-marginal multirater kappa:an alternative to fleiss’ ﬁxed-marginal multiraterkappa..nils reimers and iryna gurevych.
2019. sentence-bert: sentence embeddings using siamese bert-networks.
in proceedings of the 2019 conference onempirical methods in natural language processingand the 9th international joint conference on natu-ral language processing (emnlp-ijcnlp), pages3982–3992, hong kong, china.
association forcomputational linguistics..nils reimers and iryna gurevych.
2020. makingmonolingual sentence embeddings multilingual us-in proceedings of theing knowledge distillation.
2020 conference on empirical methods in naturallanguage processing (emnlp), pages 4512–4525,online.
association for computational linguistics..stephen robertson and hugo zaragoza.
2009. theprobabilistic relevance framework: bm25 and be-yond.
now publishers inc..shaden.
shaar,.
nikolay babulkov,.
giovannida san martino, and preslav nakov.
2020. thatis a known lie: detecting previously fact-checkedclaims.
in proceedings of the 58th annual meetingofthe association for computational linguis-tics, pages 3607–3618, online.
association forcomputational linguistics..andon tchechmedjiev, pavlos fafalios, katarinaboland, malo gasquet, matth¨aus zloch, benjaminzapilko, stefan dietze, and konstantin todorov.
2019.claimskg: a knowledge graph of fact-checked claims.
in international semantic web con-ference, pages 309–324.
springer..julie tibshirani.
2019. text similarity search with vec-.
j¨org tiedemann.
2012. parallel data, tools and inter-in proceedings of the eighth in-faces in opus.
ternational conference on language resources andevaluation (lrec’12), pages 2214–2218, istanbul,turkey.
european language resources association(elra)..nguyen vo and kyumin lee.
2020. where are thefacts?
searching for fact-checked information to alle-viate the spread of fake news.
in proceedings of the2020 conference on empirical methods in naturallanguage processing (emnlp), pages 7717–7731,online.
association for computational linguistics..c wardle, a pimenta, g conter, and nd pedro burgos.
2019. comprova: an evaluation of the impact of acollaborative journalism project on brazilian journal-ists and audiences.
first draft..claire wardle.
2018. lessons for reporting in an age of.
disinformation.
first draft, 28..matthijs j. warrens.
2010. inequalities between multi-rater kappas.
advances in data analysis and classi-ﬁcation, (4)..mark d wilkinson, michel dumontier, ijsbrand janaalbersberg, gabrielle appleton, myles axton,arie baak, niklas blomberg, jan-willem boiten,luiz bonino da silva santos, philip e bourne, et al.
the fair guiding principles for scientiﬁc2016.data management and stewardship.
scientiﬁc data,3(1):1–9..yinfei yang, gustavo hernandez abrego, steve yuan,mandy guo, qinlan shen, daniel cer, yun-hsuansung, brian strope, and ray kurzweil.
2019.im-proving multilingual sentence embedding using bi-directional dual encoder with additive margin soft-max.
in proceedings of the 28th international jointconference on artiﬁcial intelligence, pages 5370–5378. aaai press..4514figure 3: an example of the annotation interface.
8 supplemental materials.
8.3 alternative deﬁnition of the positive class.
the analysis in the paper presents results for “verysimilar” compared to all other classes (n/a labelsexcluded).
here we show qualitatively similar re-sults are obtained when the positive class is itemsfor which a majority of annotators indicated “verysimilar” or “somewhat similar.” as stated, some-what similar matches are useful as a fact-checkwould partially address some of the claims in asomewhat similar match.
table 8 provides the dis-tribution of labels for the claim matching dataset.
table 7 presents f1 scores averaged across 10runs of 10-fold cross validation using “somewhatsimilar” or “very similar” as the positive class.
the results are similar to table 5 in the main paper.
f1 scores are generally higher, but our indian xlm-r model still performs best.
surprisingly, lasermatches its performance in one language (hindi)..8.1 codebooks.
our codebooks are available openly.
due to thepage limit for the supplemental materials, we pro-vide hyperlinks to these codebooks:.
• claim detection codebook.
• claim similarity codebook.
we coded a simple annotation interface, whichis free and open-source: https://github.com/meedan/surveyer/.
a screen capture of the anno-tation interface during the english-language claim-similarity task is shown in figure 3.
8.2 per language results.
figure 4 shows the accuracy, precision, recall, andf1 scores for simple threshold classiﬁers.
thisis equivalent to figure 2, but shows the plots foreach language individually in addition to the overallvalues across all languages..the ﬁgure also includes two additional embed-ding models from the sbert website: xlm-r-distilroberta-base-paraphrase-v1 and xlm-r-bert-base-nli-stsb-mean-tokens.7 as discussed in themain paper, we ﬁnd our models far outperformthese models for bengali, malayalam, and tamilwhile performance for english and hindi is similar..7https://www.sbert.net/docs/pretrained_models.html#multi-lingual-models.
4515figure 4: accuracy, precision, recall, and f1 scores for each language individually.
positive class is “very similar.”.
4516table 7: maximum f1 scores (f1) and standard deviations achieved and the corresponding thresholds (thres.)
foreach score.
the ‘classiﬁers’ are simple thresholds on the cosine similarities.
scores are the average of 10 roundsof 10-fold cross validation.
the positive class is “somewhat similar” or “very similar.”.
laser.
labse.
i-xlm-r.language.
f1 (thres.).
f1 (thres.).
f1 (thres.).
all.
english.
bengali.
0.63±0.05(0.88)0.63±0.09(0.87)0.90±0.09(0.85)0.82±0.09(0.88)malayalam 0.52±0.21(0.92)0.42±0.16(0.89).
tamil.
hindi.
0.60±0.05(0.82)0.65±0.11(0.72)0.81±0.12(0.77)0.64±0.11(0.77)0.62±0.17(0.85)0.54±0.18(0.84).
0.76±0.05(0.82)0.67±0.12(0.79)0.95±0.08(0.78)0.82±0.09(0.82)0.76±0.16(0.85)0.68±0.13(0.82).
table 8: label distribution for the claim matching dataset: vs is very similar, ss is somewhat similar, sd issomewhat dissimilar and vd is very dissimilar.
nm refers to “no majority” meaning there wasn’t consensusamong annotators..vs.ss.
sd.
vd.
nm.
language.
#.
(%).
#.
(%).
#.
(%).
#.
(%).
#.
(%).
allbengalienglishhindimalayalamtamil.
2613864844233.
(11%)(6%)(16%)(21%)(7%)(11%).
121621029911.
(5%)(10%)(3%)(7%)(2%)(4%).
115262110517.
(5%)(4%)(5%)(3%)(8%)(2).
1,417225300259474159.
(61%)(35%)(75%)(65%)(78%)(53%).
4292933172888.
(18%)(45%)(1%)(4%)(5%)(30%).
4517