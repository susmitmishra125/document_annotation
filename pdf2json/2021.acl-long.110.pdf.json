{
  "name" : "2021.acl-long.110.pdf",
  "metadata" : {
    "source" : "CRF",
    "title" : "Assessing Emoji Use in Modern Text Processing Tools",
    "authors" : [ "Abu Awal", "Md Shoeb", "Gerard de Melo" ],
    "emails" : [ "abu.shoeb@rutgers.edu", "gdm@demelo.org" ],
    "sections" : [ {
      "heading" : null,
      "text" : "munication, due to their visual appeal as well as their ability to vividly convey human emotion, among other factors. This also leads to an increased need for systems and tools to operate on text containing emojis. In this study, we assess this support by considering test sets of tweets with emojis, based on which we perform a series of experiments investigating the ability of prominent NLP and text processing tools to adequately process them. In particular, we consider tokenization, part-of-speech tagging, dependency parsing, as well as sentiment analysis. Our findings show that many systems still have notable shortcomings when operating on text containing emojis."
    }, {
      "heading" : "1 Introduction",
      "text" : "In our modern digital era, interpersonal communication often takes place via online channels such as instant messaging, email, social media, etc. This entails an increasing need for tools that operate on the resulting digital data. For instance, online conversations can be invaluable sources of insights that reveal fine-grained consumer preferences with regard to products, services, or businesses (Dong and de Melo, 2018).\nHowever, the shifts in modality and medium also shape the way we express ourselves, making it increasingly natural for us to embed emojis, images, hashtags into our conversations. In this paper, we focus specifically on emojis, which have recently become fairly ubiquitous in digital communication, with a 2017 study reporting 5 billion emojis being sent daily just on Facebook Messenger (Burge, 2017). Emojis are textual elements that are encoded as characters but rendered as small digital images or icons that can be used to express an idea or emotion.\nGoals. Due to their increasing prominence, there is a growing need to properly handle emojis when-\never one deals with text. We consider a set of popular NLP tools and empirically assess to what extent they support emojis across a set of standard tasks, encompassing tokenization, part-of-speech tagging, dependency parsing, and sentiment analysis.\nAlthough emojis can be encoded as Unicode characters, there are unique properties of emoji encoding that merit special consideration, such as skin tone modifiers and composite emoji incorporating multiple basic emojis. Moreover, text harboring emojis may adhere to subtly different conventions than more traditional forms of text, e.g., with regard to token and sentence boundaries. Emojis can take the place of words with different parts-of-speech and assume different grammatical roles. Finally, emojis may of course also alter the semantics of the text, which in turn may, for instance, affect its sentiment polarity.\nOverview. For our analysis, we draw primarily on social media and study diverse forms of emoji use. We run a series of experiments on such data evaluating each NLP tool to observe its behaviour at different stages in the processing pipeline. The results show that current tools have notable deficiencies in coping with modern emoji use in text."
    }, {
      "heading" : "2 Related Work",
      "text" : "While emoji characters have a long history, they have substantially grown in popularity since their incorporation into Unicode 6.0 in 2010 followed by increasing support for them on mobile devices. Accordingly, numerous studies have sought to explain how the broad availability of emojis has affected human communication, considering grammatical, semantic, as well as pragmatic aspects (Kaye et al., 2017; McCulloch, 2019). Only few studies have specifically considered some of the more advanced technical possibilities that the Unicode standard affords, such as zero width joiners to express more\ncomplex concepts. For instance, with regard to emoji skin tone modifiers, Robertson et al. (2020) study in depth how the use of such modifiers varies on social media, including cases of users modulating their skintone, i.e., using a different tone than the one they usually pick.\nGiven the widespread use of emojis in everyday communication, there is an increasing need for NLP tools that can handle them. Prominent NLP toolkits such as Stanford’s Stanza (Qi et al., 2020) and NLTK (Bird et al., 2009) power a wide range of user-facing applications. A number of reports compare the pros and cons of popular NLP libraries (Wolff, 2020; Kozaczko, 2018; Choudhury, 2019; Bilyk, 2020), but these primarily consider the features and popularity of the tools, as well as their performance. There have not been studies assessing them with regard to their ability to cope with modern emoji-laden text. Since emojis are becoming increasingly ubiquitous, it is crucial for developers and institutions deploying such software to know whether it can properly handle the kinds of text that nowadays may quite likely arrive as input data. In many real-world settings, applications and services are expected to operate on text containing emojis, and thus it is important to investigate these capabilities.\nMany academic studies present new models for particular NLP tasks relating to emojis. For instance, Felbo et al. (2017) developed an emoji prediction model for tweets. Weerasooriya et al. (2016) discussed how to extract essential keywords from a tweet using NLP tools. Cohn et al. (2019) attempted to understand the use of emojis from a grammatical perspective, seeking to determine the parts-of-speech of emoji occurrences in a sentence or tweet. Owoputi et al. (2013) proposed an improved part-of-speech tagging model for online conversational text based on word clusters. Proisl (2018) developed a part-of-speech tagger for German social media and Kong et al. (2014) developed a dependency parser for English tweets. However, such work mostly targets just one specific task and is typically not well-integrated with common open source toolkits, which we focus on in our study."
    }, {
      "heading" : "3 Experimental Data",
      "text" : "As we wish to assess the support of emojis provided by different text processing tools, we first consider some of the different cases of emoji use that one may encounter, in order to compile relevant data."
    }, {
      "heading" : "3.1 Emoji Use in Text",
      "text" : "Emojis can appear in a sentence or tweet in different circumstances. They may show up at the beginning or at the end of a tweet. Likewise, they may appear as part of a series of emojis separated by spaces, or can be clustered within a text without any interleaved spacing. Based on observations on a collection of tweets crawled from Twitter (Shoeb et al., 2019), we defined a series of cases distinguishing different aspects of emoji use, including the number of emojis (i.e., single emojis vs. multiple emojis), position of emojis, the use of skin tone modifiers, and so on.\nFor skin tone emojis, the Unicode standard adopts the Fitzpatrick Scale (Fitzpatrick, 1975), according to which the skin tone for selected emojis can be modulated with five different color settings:\nLight Skin Tone (e.g., ), Medium-Light Skin Tone (e.g., ), Medium Skin Tone (e.g.,\n), Medium-Dark Skin Tone (e.g., ), and Dark Skin Tone (e.g., ). Internally, an Emoji Modifier Sequence is assumed when a modifier character follows a supported base emoji character, resulting in a single emoji with skin tone.\nSome characters now classified emojis are encoded in Plane 0, the Basic Multilingual Plane, where 16 bits suffice to encode individual characters. However, the majority of emojis reside in Plane 1, the Supplementary Multilingual Plane, which in the past had mainly been reserved for rare historic scripts. When including the latter, individual characters can no longer be encoded directly within just 16 bits. Hence, we consider whether a tool handles both non-BMP and BMP emojis.\nEmojis with Zero Width Joiner (ZWJ) join two or more other characters together in sequence to compose a new one. Popular emoji ZWJ sequences include group ones such as the family emoji , consisting in this case of Man, Woman, Girl, Boy emojis, and encoded by combining Man, the U+200D ZWJ code, Woman, U+200D again,\nGirl, U+200D, and finally Boy. These are rendered as a single emoji on supported platforms."
    }, {
      "heading" : "3.2 Tweet Selection",
      "text" : "Given the different cases of emoji use discussed above, we searched for relevant examples in a collection of tweets that we compiled earlier from Twitter (Shoeb et al., 2019). The purpose of this endeavor was to assemble a collection of tweets based on a set of most frequently used emojis so that ev-\nery single tweet contains at least one emoji. The popularity of the emojis was determined using Novak et al. (2015) and Emoji Tracker1, a website that monitors the use of emojis on Twitter in real time. In total, we obtained a set of 22.3 million tweets over a span of one year. This collection, named as EmoTag, is readily available online2. Table 1 provides corresponding statistics of our collection, showing that even rare phenomena do occur in substantial numbers of tweets.\nNext, we chose representative samples for each case. We restricted our search to English language tweets and ensured that not all tweets simply consisted of URLs or mentions. The latter are fairly common on social media, and since it would not be very uncommon for a text processing tool to encounter them in tweets, we did also incorporate a few such tweets along with tweets containing genuine text. Ultimately, we obtain a diverse collection of short input texts, including different skintones, ZWJ emojis, and other cases mentioned in Section 3.1 and Table 1.\nWe drew upon the compiled input texts for assessments with regard to different NLP tasks. The following sections describe each of the considered tasks, i.e., Tokenization (Section 4), Part-of-Speech Tagging (Section 5), Dependency Parsing (Section 6), and Sentiment Analysis (Section 7) separately. The full dataset for the following experiments can be found at http://emoji.nlproc.org."
    }, {
      "heading" : "4 Tokenization",
      "text" : "Tokenization is the act of breaking up a sequence of strings into a sequence of basic pieces such as\n1http://emojitracker.com/ 2https://github.com/abushoeb/emotag\nwords, keywords, phrases, symbols, and other elements, referred to as tokens. In the process of tokenization, some characters such as punctuation marks may be discarded. It is important for a tokenizer to generate meaningful results, as the output of this step becomes the input for subsequent processing steps such as parsing and text mining in the pipeline. In our study, we expect a tokenizer to segment a text into tokens such as words, emojis, and other special characters."
    }, {
      "heading" : "4.1 Task Setup",
      "text" : "While tokenizing a sentence, or a tweet with emojis, in particular, we focus on the position and type of emojis presented earlier in Section 3. An emoji can accompany a word with both leading and trailing spaces, or it can be attached to words without any separating whitespace. We typically expect a tokenizer to distinguish an emoji from a word even in the absence of a space delimiter if it appears to constitute a separate concept. The same principle should be followed for emoji clusters, i.e., if multiple emojis occur in a sequence such as “ ”, they are expected to be recognized as individual tokens.\nAnother aspect of successful tokenization is adequately handling emoji skin tone modifiers. As emojis can have five different skin tone modifiers, we ensure that our test data contains the same number of tweets from all skin tones. An ideal tokenizer should not split skin tone emoji into two individual characters. For example, the Waving Hand Light Skin Tone emoji should not be split into a regular Waving Hand emoji and a tone modifier\n. We also test the abilities of tools in terms of handling ZWJ emoji sequences. We randomly pick a small set of tweets containing ZWJ sequences for this purpose. For example, an ideal tokenizer should not split up a Family Emoji as four individual emojis such as Man, Woman, Girl, Boy, as the emoji is meant to be rendered as a single one.\nNote that some tokenizers discard punctuation during the tokenization process, while others retain them as tokens. For example, Gensim removes all punctuation, including all emojis. Furthermore, the NLTK Tweet Tokenizer does not split up a hashtag as “#” followed by a word, but rather keeps it intact, as hashtags usually convey meaningful information in tweets. Thus, to generalize the tokenization process across tools, we apply certain post-processing techniques before comparing the list of tokens with\nthe expected list. One such technique is to discard all punctuation from the list of tokens, while for #hashtag occurrences, we treat both “hashtag” and “#hashtag” as valid options.\nTools. In total, we consider 8 libraries for our experiments. These are the regular English tokenizer of the Natural Language Toolkit (NLTK) by Bird et al. (2009), the NLTK Tweet Tokenizer (i.e., its Twitter-aware tokenizer), the Stanford NLP Group’s Stanza (formerly known as StanfordNLP) (Qi et al., 2020), SpaCy and SpaCyMoji, PyNLPl (the Python library for Natural Language Processing, pronounced as pineapple), Gensim (Řehůřek and Sojka, 2010), TextBlob, and AllenNLP (Gardner et al., 2018).3"
    }, {
      "heading" : "4.2 Results",
      "text" : "Table 2 presents the results of tokenizing the given case-specific test data, based on an overall set of 100 input texts. We partitioned this test data with regard to different cases of emoji use for a more fine-grained analysis.\nFor single emoji (SE), intended to be the simplest case, where each input cannot contain more than one emoji, we observe that most tools except for Gensim obtain acceptable results. Since Gensim discards emoji characters, it also fails all other test cases. In contrast, both SpaCy and SpaCyMoji achieve 100% accuracy. Other tools may fail to segment off emojis that have been attached to words without whitespace.\nThe multiple emojis (ME) case considers inputs with more than a single emoji, including clusters of emojis. Some tools, such as NLTK and PyNLPl,\n3We rely on Python 3.8 along with the latest version of all tools (Gensim 3.8.3, NLTK 3.4.5, PyNLPl 1.2.9, SpaCy 2.2.4, SpaCyMoji 2.0.0, Stanza 1.1.1, TextBlob 0.15.3) available until November 2020.\nfailed for this part despite having done well on single emoji utterances. Apart from separating off emojis from words, tools here differ mostly based on whether they split up groups of emojis.\nFor skin tone emojis, there are 50 test cases with skin tones. Note that these can have single or multiple emojis, but it is ensured that they bear at least one skin tone emoji. In some cases, the problems are the same as for regular emojis, e.g., splitting off emojis from words. However, some tools generally split off skin tone modifiers from the emojis they are intended to modify. Stanza only breaks a color tone emoji into the base emojis and tone modifiers when it is concatenated with text. Otherwise it can handle a skin tone emoji without splitting it. SpaCyMoji obtains a near-perfect result but still does not manage to preserve all skintone emojis.\nThe next test is designed to assess Basic Multilingual Plane (BMP) and non-BMP emojis, respectively. For each of these cases, a distinct set of 10 tweets was used to assess the performance. Interestingly, non-BMP emojis appear to be bettersupported, presumably because they include the most popular emojis.\nFinally, we consider emojis with zero width joiners (ZJW), where each tweet contains no more than two emojis with at least one ZWJ emoji. The tools that fail in this case, such as NLTK-TT, instead of preserving a ZJW emoji such as , produce multiple separate tokens, including the Unicode zero-width joiners as individual tokens, e.g., ,\nU+200D, , U+200D, , U+200D, and . In fact, none of the tools could achieve 100% accuracy across all ZWJ emojis. This is because they may fail when a regular emoji and a ZWJ one appear together. For example, one of the inputs contains the emojis , which NLTK treats as a single token, although it successfully handles other ZWJ emojis when they are space-separated. In contrast, NLTK-TT appears to be the best option for dealing with emoji clusters, but when it comes to ZWJ emojis, it separates all emojis and joiners."
    }, {
      "heading" : "5 Part-of-Speech Tagging",
      "text" : "Part-of-Speech (POS) tagging is the process of assigning each token a label that reflects its word class. This may be with respect to traditional parts of speech, such as noun, verb, adjective, etc., or using a more fine-grained inventory of classes."
    }, {
      "heading" : "5.1 Task Setup",
      "text" : "To understand how different POS taggers handle emojis in a sentence, we evaluate all tools for a subset of inputs covering the majority of emoji scenarios mentioned in Section 3.\nFor evaluation, we compiled a set of 23 real tweets, in which emojis are used as different partsof-speech, namely as nouns, adjectives, verbs, adverbs, or as punctuation. We mapped the original part-of-speech tags to these coarse-grained categories and then checked for correctness with regard to human annotations obtained for our tweets. Only the part-of-speech tags assigned to the emojis were considered, while the tagging of all other non-emoji tokens was deemed irrelevant for the purposes of this experiment. Note also that this test suite is limited to clear-cut cases of emojis used within sentences and we do not claim that every potential use of an emoji has an obvious well-defined part-ofspeech tag.\nTools. For this task, we evaluated all tools except Gensim and PyNLPl, as they do not directly offer any POS tagging functionality. Since tokenization is a prerequisite for POS tagging, a tool\nis likely to fail to correctly tag a word or emoji if the emoji is not properly tokenized in the preceding step. However, for a more extensive evaluation, we considered two setups. First, we conducted the POS tagging experiment based on the output of the integrated tokenizer of the respective tool. Thus, if a tool was unable to tokenize “Emojis are” as three separate tokens “Emojis”, “ ”, and “are”, we still proceeded with the task treating it as one token for the respective tool’s POS tagger. Subsequently, we conducted the POS tagging experiment while considering a unified ground truth tokenization as input for all tools. For example, in the case of “Emojis are”, the tagger could expect to receive them as separate tokens “Emojis”, “ ”, and “are”."
    }, {
      "heading" : "5.2 Results",
      "text" : "Table 3 reports the results of our part-of-speech tagging experiments. The final two columns summarize the results with the original tokenizer and the modified tokenizer. None of the tools in our experiment could handle the case of emojis acting as adverbs or as punctuation. For instance, “My Credit Score Went 7 Points ” is one such\nexample where the Upwards Button emoji assumes an adverbial role, which none of the taggers recognize, despite the emoji being space-delimited.\nSimilarly, occurrences of the question mark\nemoji or double exclamation mark emoji used as punctuation are labeled as nouns by all considered tools.\nInterestingly, we obtained a 100% success rate for handling verb emojis, except with NLTK. Although the latter is the only tool that passes all test cases for noun emojis, it fails for all other cases. Overall, NLTK-TT and Stanza obtain the highest success rates as reported in the penultimate column of the table.\nWhen considering the harmonized ground truth tokenization, as reported in the final column of Table 3, the results for TextBlob are boosted significantly and for Stanza a more modest gain is observed. TextBlob and Stanza for instance may fail when emojis are not separated by whitespace from regular words (e.g., “love ”) or from another emoji (e.g., “ ”). Rectifying the tokenization in such cases improves the results of both tools.\nThe first example in Table 4 shows the interesting phenomenon of redundancy causing incorrect predictions. In this tweet, both the dog emoji and the cat emoji are expected to be tagged as nouns, but Stanza assumes the former to be an adjective due to the additional presence of the regular word “dog”. To examine this further, we also considered several modifications of the original tweet. First, we considered the tweet without the additional word “dog” word after the dog emoji\n, in which case Stanza can easily identify it as a noun. This is reported in the second row of Table 4. We also tried replacing the dog emoji with the word “dog” to see if Stanza can cope with erroneous word reduplication, and it turned out that Stanza could correctly identify both occurrences as nouns. Finally, we considered replacing the word “dog” with another emoji. In this case, the tool marked the first as a noun and the second as punctuation."
    }, {
      "heading" : "6 Dependency Parsing",
      "text" : "In dependency grammar, the syntactic structure of a sentence is described as a tree capturing relationships between head words and dependent words. Given that emojis can have different grammatical roles within a sentence, we thus assessed to what\nextent popular dependency parsers are affected by the presence of emojis in the input."
    }, {
      "heading" : "6.1 Task Setup",
      "text" : "We rely on the English Web Treebank (EWT), one of the around 200 treebanks in the Universal Dependency (UD) collection4, which seeks to define a consistent annotation of grammar (including parts of speech, morphological features, and syntactic dependencies) across over 100 languages. The English Web Treebank UD corpus provides gold standard Universal Dependency annotations , built over the source material of the English Web Treebank (Bies et al., 2012). We randomly pick a set of sentences from EWT and then replace certain obvious words with matching emojis in both the plain text sentences and their corresponding dependency trees to obtain a ground truth set. Examples of such word–emoji replacements include fire , death , salad , etc. To further examine the robustness of the tools, we also incorporate multiemojis, skin tone emojis, and ZWJ emojis in the input. For instance, one of the EWT sentences includes “Chicken salad salad is great too.” for which we embed the emoji as “Chicken is great too.”. The purpose of this approach is to assess how well a dependency parser can handle such forms of emoji use. Again, our test suite is limited to clearcut instances and we do not make the assumption that any possible emoji use will have an unambiguous well-defined ground truth annotation.\nTools. Not all of the previously considered tools provide their own dependency parser. For this evaluation, we thus considered only Stanford’s CoreNLP, SpaCy, and Stanza."
    }, {
      "heading" : "6.2 Results",
      "text" : "Table 5 reports both Labeled Attachment Score (LAS) and Unlabeled Attachment Score (UAS) results, where the latter consider just the location of the edge, i.e., just the structure of the tree, while the former as well mandate that the edge labels be identified correctly. The first two columns report the average attachment score based on the entire dependency tree for the given set of inputs. The next two columns (i.e. Single Emoji Sub-tree) consider only the parent and child nodes of emojis in the tree, i.e., an emoji-centered sub-tree (or forest). Finally, the last two columns report LAS and UAS\n4Version 2.7 https://universaldependencies.org/ #download\nfor complex emojis including multi-emojis, skin tone emojis, and ZWJ emojis in the given testcases.\nThe results show a clear degradation of both the tree structure (UAS) and the dependency labels (LAS) when it comes to tackling edges in the graph connecting other tokens to emojis. This becomes more evident with the presence of complex emojis in the tree. In general, Stanford CoreNLP and Stanza appear to be more robust than SpaCy."
    }, {
      "heading" : "7 Sentiment Analysis",
      "text" : "Although the word “emoji” is not etymologically related to the word “emotion”, several studies show how emojis can help to express emotions (Shoeb and de Melo, 2020) and sentiment in textual communication (Novak et al., 2015). Keeping this in mind, we further assessed how well NLP tools fare at the task of predicting the sentiment polarity of a text harboring emojis. Table 6 shows examples of texts with different emojis. While the text alone may be ambiguous with respect to its sentiment polarity, the emoji appears to eliminate much of the ambiguity if it is appended to the end of the text. The goal of this endeavor is to examine if the sentiment polarity is predicted correctly when a high-intensity emoji is incorporated into a neutral sentence."
    }, {
      "heading" : "7.1 Task Setup",
      "text" : "For this task, we leverage a set of custom sentences and tweets from the Sentiment140 dataset (Go et al., 2009). We considered a set of texts with neutral or ambiguous sentiment. The sentiment label was verified by multiple tools before considering them in our experiment. A sentence as well as a tweet were only considered when their sentiment labels were consistent across multiple tools. Although the specific sentiment score may vary from one tool to another, we ensured that the sentiment label remained consistent. Each example was then modified with both positive and negative emojis appended to the end, giving us the opportunity to observe whether the predicted polarity of the original sentence changes in accordance with the polarity\nof the emojis. For example, I’ll explain it later is a neutral sentence that is modified either with a positive emoji or with a negative one such as\n. We use different sets of positive and negative emojis to modify the sentiment of the text, covering a broad spectrum of the sentiment polarity of emojis. The sentiment of emojis was determined based on the data by Novak et al. (2015).\nTools. Although many tools could be trained on a labeled set of tweets, we sought to assess preexisting systems as they are often used out-ofthe-box without additional training or fine-tuning. Hence, this study considers NLTK and TextBlob, as they can readily be used on the fly without requiring new labeled data. Note that TextBlob’s sentiment module contains two sentiment analyzers, PatternAnalyzer and NaiveBayesAnalyzer, the latter trained on movie reviews. For NLTK, we use VADER (Valence Aware Dictionary and sEntiment Reasoner), a lexicon and rule-based sentiment analysis tool that is specifically attuned to sentiment as expressed in social media. Additionally, we evaluate the standalone VADER library directly as it is meant to support emoji sentiment (Hutto and Gilbert, 2014)."
    }, {
      "heading" : "7.2 Results",
      "text" : "The results are given in Table 7. In the sentiment prediction task for a given tweet with emojis, neither NLTK nor the TextBlob models appear to be able to consider the emojis as part of their sentiment polarity prediction. Only the stand-alone VADER library is able to discern any difference when positive or negative emojis are provided with the sentence, as reflected in the final row of Table 7. The discrepancies between NLTK’s VADER component and the stand-alone VADER stem from differences in the lexicon used by the tools. The stand-alone VADER includes a dedicated emoji lexicon that is omitted in the NLTK version. Some studies (Jain et al., 2019) show that an emoji can moderate the sentiment of a given tweet if the sentiment of an emoji is considered during training.\nClearly, systems trained on emoji-bearing data can learn to consider them during prediction if their tokenization is handled properly and they are not discarded during preprocessing. However, given the importance of emojis in conveying sentiment, it appears that most out-of-the-box tools ought to consider emojis as well."
    }, {
      "heading" : "8 Discussion",
      "text" : "Overall, based on Table 9, we can see that none of the considered tools perfectly handles all evaluated tasks with emojis. Indeed, many text preprocessing pipelines, especially deep learning ones with a limited vocabulary, routinely discard emojis along with punctuation characters as non-standard char-\nacters. Gensim by default follows this common approach, which is likely suboptimal for emojis. NLTK-TT as well as Stanza help keep track of hashtags as they retain them with the “#” sign intact, whereas other tools split them up as two individual tokens or remove the “#”. NLTK, Stanza, and TextBlob fail to tokenize emojis if emojis are tied up with other words, while SpaCy, SpaCyMoji, and NLTK-TT handle such cases. Note that accurate tokenization, e.g., splitting off emojis attached to words, can also be a prerequisite for many downstream tasks, such as enabling higher-quality text classification and information retrieval.\nFor POS tagging, somewhat surprisingly, almost all tools did well with verbs, while they all struggled with punctuation emojis as well as adverbs. The results for adjectives were as well quite mixed. Overall, NLTK-TT and TextBlob achieved the highest success rate for POS tagging, although both still struggle with adverbs and punctuation, which can also lead to adverse effects in downstream tasks such as syntactic parsing. Moreover, TextBlob requires the use of a modified tokenizer. For dependency parsing, we found Stanford CoreNLP and Stanza to be the most robust in correctly assessing emojis. SpaCy, in contrast, does not appear to generalize well enough to lexical items such as emojis that may be lacking in the training data. In general, there is a need for dependency parsers to be trained on more diverse data.\nThus, in practice one may wish to consider a mixand-match approach, using a tokenizer from one library, a tagger from another, and a dependency parser from yet another library.\nIn our POS tagging and dependency parsing evaluations, we sought to study clear-cut cases to observe whether tools have basic support for emojis. Further discussion is necessary on recommended annotation schemes for more diverse forms of emoji\nuse for which the ground truth may not be as obvious. Some researchers argue that the default tagging of emoji should be as adverbials, interjections, or punctuation (Grosz et al., 2021). Similarly, emojis are syntactically comparable to free adjuncts, which constrains the set of valid parse trees. Hence, further work is necessary to devise broader-coverage benchmarks for the tasks considered in our study.\nSemantic Associations. Finally, we also inspected semantic associations for particular kinds of emojis. We considered a 300-dimensional word2vec SGNS model trained on the EmoTag (Shoeb et al., 2019) dataset, and generated a set of nearest neighbours for selected target emojis.\nTable 8 reports the nearest emoji neighbours for different skin tone variants of the Clapping Hand emoji. Most of the top 5 neighbours for each emoji bear the same skin tone color except one each for Medium Light and Medium tone emojis reported in Rows 4 and 5, respectively. We conjecture that speakers who use skin tone modifiers frequently also use additional emojis that support such modification and that they naturally tend to use the respective modifier fairly consistently.\nThe last row of the same table shows the nearest neighbours for a ZWJ family emoji. All of the nearest neighbours of this ZWJ emoji contain a ZWJ sequence as well, suggesting that they occur in similar contexts."
    }, {
      "heading" : "9 Conclusion",
      "text" : "Emojis have become an integral part of modern interpersonal communication and text encountered in chat messages, social media, or emails is often laden with emojis. Hence, it is important to endow NLP tools with emoji support not only to obtain a\ndeeper understanding of this wealth of data but also to properly preserve and process them correctly.\nIn this study, we assessed how well prominent NLP tools cope with text containing emoji characters. To this end, we evaluated a set of tools on three different tasks across a range of challenging test sets capturing particular phenomena and encodings. Our study demonstrates that there are notable shortcomings in widely used NLP tools. Although many tools are partially capable of operating on emojis, none of them proved fully equipped to tackle the full set of aspects considered in our study. Hence, special care needs to be taken when developing applications that may encounter emojis."
    } ],
    "references" : [ {
      "title" : "Natural language processing tools and libraries 2020",
      "author" : [ "Volodymyr Bilyk" ],
      "venue" : null,
      "citeRegEx" : "Bilyk.,? \\Q2020\\E",
      "shortCiteRegEx" : "Bilyk.",
      "year" : 2020
    }, {
      "title" : "Natural Language Processing with Python: Analyzing Text with the Natural Language Toolkit",
      "author" : [ "Steven Bird", "Ewan Klein", "Edward Loper." ],
      "venue" : "O’Reilly, Beijing.",
      "citeRegEx" : "Bird et al\\.,? 2009",
      "shortCiteRegEx" : "Bird et al\\.",
      "year" : 2009
    }, {
      "title" : "2017. 5 billion emojis sent daily on messenger",
      "author" : [ "Jeremy Burge" ],
      "venue" : null,
      "citeRegEx" : "Burge.,? \\Q2017\\E",
      "shortCiteRegEx" : "Burge.",
      "year" : 2017
    }, {
      "title" : "Top 10 python NLP libraries for 2019",
      "author" : [ "Ambika Choudhury" ],
      "venue" : null,
      "citeRegEx" : "Choudhury.,? \\Q2019\\E",
      "shortCiteRegEx" : "Choudhury.",
      "year" : 2019
    }, {
      "title" : "The grammar of emoji? constraints on communicative pictorial sequencing",
      "author" : [ "Neil Cohn", "Jan Engelen", "Joost Schilperoord." ],
      "venue" : "Cognitive research: principles and implications, 4(1):33.",
      "citeRegEx" : "Cohn et al\\.,? 2019",
      "shortCiteRegEx" : "Cohn et al\\.",
      "year" : 2019
    }, {
      "title" : "Cross-lingual propagation for deep sentiment analysis",
      "author" : [ "Xin Dong", "Gerard de Melo." ],
      "venue" : "Proceedings of AAAI 2018. AAAI Press.",
      "citeRegEx" : "Dong and Melo.,? 2018",
      "shortCiteRegEx" : "Dong and Melo.",
      "year" : 2018
    }, {
      "title" : "Using millions of emoji occurrences to learn any-domain representations for detecting sentiment, emotion and sarcasm",
      "author" : [ "Bjarke Felbo", "AlanMislove", "Anders Søgaard", "Iyad Rahwan", "Sune Lehmann." ],
      "venue" : "Proceedings of the 2017 Conference on Empiri-",
      "citeRegEx" : "Felbo et al\\.,? 2017",
      "shortCiteRegEx" : "Felbo et al\\.",
      "year" : 2017
    }, {
      "title" : "AllenNLP: A deep semantic natural language processing platform",
      "author" : [ "Matt Gardner", "Joel Grus", "Mark Neumann", "Oyvind Tafjord", "Pradeep Dasigi", "Nelson F. Liu", "Matthew Peters", "Michael Schmitz", "Luke Zettlemoyer." ],
      "venue" : "Proceedings of Workshop",
      "citeRegEx" : "Gardner et al\\.,? 2018",
      "shortCiteRegEx" : "Gardner et al\\.",
      "year" : 2018
    }, {
      "title" : "Twitter sentiment classification using distant supervision",
      "author" : [ "Alec Go", "Richa Bhayani", "Lei Huang." ],
      "venue" : "CS224N project report, Stanford, 1(12):2009.",
      "citeRegEx" : "Go et al\\.,? 2009",
      "shortCiteRegEx" : "Go et al\\.",
      "year" : 2009
    }, {
      "title" : "Discourse anaphoricity and first-person indexicality in emoji resolution",
      "author" : [ "Patrick G Grosz", "Elsi Kaiser", "Francesco Pierini" ],
      "venue" : null,
      "citeRegEx" : "Grosz et al\\.,? \\Q2021\\E",
      "shortCiteRegEx" : "Grosz et al\\.",
      "year" : 2021
    }, {
      "title" : "Vader: A parsimonious rule-based model for sentiment analysis of social media text",
      "author" : [ "Clayton Hutto", "Eric Gilbert." ],
      "venue" : "Proceedings of the International AAAI Conference on Web and Social Media, volume 8.",
      "citeRegEx" : "Hutto and Gilbert.,? 2014",
      "shortCiteRegEx" : "Hutto and Gilbert.",
      "year" : 2014
    }, {
      "title" : "ParallelDots at SemEval-2019 task 3: Domain adaptation with feature embeddings for contextual emotion analysis",
      "author" : [ "Akansha Jain", "Ishita Aggarwal", "Ankit Singh." ],
      "venue" : "Proceedings of the 13th International Workshop on Semantic Evaluation, pages",
      "citeRegEx" : "Jain et al\\.,? 2019",
      "shortCiteRegEx" : "Jain et al\\.",
      "year" : 2019
    }, {
      "title" : "Emojis: Insights, affordances, and possibilities for psychological science",
      "author" : [ "LindaK.Kaye", "StephanieA.Malone", "andHelen J.Wall" ],
      "venue" : "Trends in Cognitive Sciences,",
      "citeRegEx" : "LindaK.Kaye et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "LindaK.Kaye et al\\.",
      "year" : 2017
    }, {
      "title" : "A dependency parser for tweets",
      "author" : [ "Lingpeng Kong", "Nathan Schneider", "Swabha Swayamdipta", "Archna Bhatia", "Chris Dyer", "Noah A. Smith." ],
      "venue" : "Proceedings of the 2014 Conference on Empirical Methods in Natural Language Pro-",
      "citeRegEx" : "Kong et al\\.,? 2014",
      "shortCiteRegEx" : "Kong et al\\.",
      "year" : 2014
    }, {
      "title" : "2018. 8 best python natural language processing (NLP) libraries",
      "author" : [ "Dominik Kozaczko" ],
      "venue" : null,
      "citeRegEx" : "Kozaczko.,? \\Q2018\\E",
      "shortCiteRegEx" : "Kozaczko.",
      "year" : 2018
    }, {
      "title" : "Because Internet: Understanding the New Rules of Language",
      "author" : [ "Gretchen McCulloch." ],
      "venue" : "Penguin Publishing Group.",
      "citeRegEx" : "McCulloch.,? 2019",
      "shortCiteRegEx" : "McCulloch.",
      "year" : 2019
    }, {
      "title" : "Sentiment of emojis",
      "author" : [ "Petra Kralj Novak", "Jasmina Smailović", "Borut Sluban", "Igor Mozetič." ],
      "venue" : "Plos One, 10(12).",
      "citeRegEx" : "Novak et al\\.,? 2015",
      "shortCiteRegEx" : "Novak et al\\.",
      "year" : 2015
    }, {
      "title" : "Improved part-of-speech tagging for online conversational text withword clusters",
      "author" : [ "Olutobi Owoputi", "Brendan O’Connor", "Chris Dyer", "Kevin Gimpel", "Nathan Schneider", "Noah A. Smith" ],
      "venue" : "InProceedings of the 2013 Conference of the North Amer-",
      "citeRegEx" : "Owoputi et al\\.,? \\Q2013\\E",
      "shortCiteRegEx" : "Owoputi et al\\.",
      "year" : 2013
    }, {
      "title" : "Someweta: A part-of-speech tagger for german social media and web texts",
      "author" : [ "Thomas Proisl." ],
      "venue" : "Proceedings of the Eleventh International Conference on Language Resources and Evaluation (LREC 2018).",
      "citeRegEx" : "Proisl.,? 2018",
      "shortCiteRegEx" : "Proisl.",
      "year" : 2018
    }, {
      "title" : "Stanza: A Python natural language processing toolkit for many human languages",
      "author" : [ "Peng Qi", "Yuhao Zhang", "Yuhui Zhang", "Jason Bolton", "Christopher D. Manning." ],
      "venue" : "Proceedings of the 58th Annual Meeting of the Association for Computational",
      "citeRegEx" : "Qi et al\\.,? 2020",
      "shortCiteRegEx" : "Qi et al\\.",
      "year" : 2020
    }, {
      "title" : "Software Framework for Topic Modelling with Large Corpora",
      "author" : [ "Radim Řehůřek", "Petr Sojka." ],
      "venue" : "Proceedings of the LREC 2010 Workshop on New Challenges for NLP Frameworks, pages 45–50, Valletta, Malta. ELRA.",
      "citeRegEx" : "Řehůřek and Sojka.,? 2010",
      "shortCiteRegEx" : "Řehůřek and Sojka.",
      "year" : 2010
    }, {
      "title" : "Emoji skin tone modifiers: Analyzing variation in usage on social media",
      "author" : [ "Alexander Robertson", "Walid Magdy", "Sharon Goldwater." ],
      "venue" : "Trans. Soc. Comput., 3(2).",
      "citeRegEx" : "Robertson et al\\.,? 2020",
      "shortCiteRegEx" : "Robertson et al\\.",
      "year" : 2020
    }, {
      "title" : "Emotag1200: Understanding the association between emojis and emotions",
      "author" : [ "Abu Awal Md Shoeb", "Gerard de Melo." ],
      "venue" : "Proceedings of EMNLP 2020.",
      "citeRegEx" : "Shoeb and Melo.,? 2020",
      "shortCiteRegEx" : "Shoeb and Melo.",
      "year" : 2020
    }, {
      "title" : "EmoTag – Towards an emotion-based analysis of emojis",
      "author" : [ "AbuAwalMd Shoeb", "Shahab Raji", "Gerard deMelo." ],
      "venue" : "Proceedings of RANLP 2019, pages 1094–1103.",
      "citeRegEx" : "Shoeb et al\\.,? 2019",
      "shortCiteRegEx" : "Shoeb et al\\.",
      "year" : 2019
    }, {
      "title" : "A method to extract essential keywords from a tweet using NLP tools",
      "author" : [ "T. Weerasooriya", "N. Perera", "S.R. Liyanage." ],
      "venue" : "2016 Sixteenth International Conference on Advances in ICT for Emerging Regions (ICTer), pages 29–34.",
      "citeRegEx" : "Weerasooriya et al\\.,? 2016",
      "shortCiteRegEx" : "Weerasooriya et al\\.",
      "year" : 2016
    }, {
      "title" : "2020. 10 natural language processing tools – saas & open-source",
      "author" : [ "Rachel Wolff" ],
      "venue" : null,
      "citeRegEx" : "Wolff.,? \\Q2020\\E",
      "shortCiteRegEx" : "Wolff.",
      "year" : 2020
    } ],
    "referenceMentions" : [ {
      "referenceID" : 2,
      "context" : "In this paper, we focus specifically on emojis, which have recently become fairly ubiquitous in digital communication, with a 2017 study reporting 5 billion emojis being sent daily just on Facebook Messenger (Burge, 2017).",
      "startOffset" : 208,
      "endOffset" : 221
    }, {
      "referenceID" : 15,
      "context" : "Accordingly, numerous studies have sought to explain how the broad availability of emojis has affected human communication, considering grammatical, semantic, as well as pragmatic aspects (Kaye et al., 2017; McCulloch, 2019).",
      "startOffset" : 188,
      "endOffset" : 224
    }, {
      "referenceID" : 19,
      "context" : "Prominent NLP toolkits such as Stanford’s Stanza (Qi et al., 2020) and NLTK (Bird et al.",
      "startOffset" : 49,
      "endOffset" : 66
    }, {
      "referenceID" : 1,
      "context" : ", 2020) and NLTK (Bird et al., 2009) power a wide range of user-facing applications.",
      "startOffset" : 17,
      "endOffset" : 36
    }, {
      "referenceID" : 25,
      "context" : "A number of reports compare the pros and cons of popular NLP libraries (Wolff, 2020; Kozaczko, 2018; Choudhury, 2019; Bilyk, 2020), but these primarily consider the features and popularity of the tools, as well as their performance.",
      "startOffset" : 71,
      "endOffset" : 130
    }, {
      "referenceID" : 14,
      "context" : "A number of reports compare the pros and cons of popular NLP libraries (Wolff, 2020; Kozaczko, 2018; Choudhury, 2019; Bilyk, 2020), but these primarily consider the features and popularity of the tools, as well as their performance.",
      "startOffset" : 71,
      "endOffset" : 130
    }, {
      "referenceID" : 3,
      "context" : "A number of reports compare the pros and cons of popular NLP libraries (Wolff, 2020; Kozaczko, 2018; Choudhury, 2019; Bilyk, 2020), but these primarily consider the features and popularity of the tools, as well as their performance.",
      "startOffset" : 71,
      "endOffset" : 130
    }, {
      "referenceID" : 0,
      "context" : "A number of reports compare the pros and cons of popular NLP libraries (Wolff, 2020; Kozaczko, 2018; Choudhury, 2019; Bilyk, 2020), but these primarily consider the features and popularity of the tools, as well as their performance.",
      "startOffset" : 71,
      "endOffset" : 130
    }, {
      "referenceID" : 23,
      "context" : "Based on observations on a collection of tweets crawled from Twitter (Shoeb et al., 2019), we defined a series of cases distinguishing different aspects of emoji use, including the number of emojis (i.",
      "startOffset" : 69,
      "endOffset" : 89
    }, {
      "referenceID" : 23,
      "context" : "Given the different cases of emoji use discussed above, we searched for relevant examples in a collection of tweets that we compiled earlier from Twitter (Shoeb et al., 2019).",
      "startOffset" : 154,
      "endOffset" : 174
    }, {
      "referenceID" : 19,
      "context" : ", its Twitter-aware tokenizer), the Stanford NLP Group’s Stanza (formerly known as StanfordNLP) (Qi et al., 2020), SpaCy and SpaCyMoji, PyNLPl (the Python library for Natural Language Processing, pronounced as pineapple), Gensim (Řehůřek and Sojka, 2010), TextBlob, and AllenNLP (Gardner et al.",
      "startOffset" : 96,
      "endOffset" : 113
    }, {
      "referenceID" : 20,
      "context" : ", 2020), SpaCy and SpaCyMoji, PyNLPl (the Python library for Natural Language Processing, pronounced as pineapple), Gensim (Řehůřek and Sojka, 2010), TextBlob, and AllenNLP (Gardner et al.",
      "startOffset" : 123,
      "endOffset" : 148
    }, {
      "referenceID" : 7,
      "context" : ", 2020), SpaCy and SpaCyMoji, PyNLPl (the Python library for Natural Language Processing, pronounced as pineapple), Gensim (Řehůřek and Sojka, 2010), TextBlob, and AllenNLP (Gardner et al., 2018).",
      "startOffset" : 173,
      "endOffset" : 195
    }, {
      "referenceID" : 16,
      "context" : "Although the word “emoji” is not etymologically related to the word “emotion”, several studies show how emojis can help to express emotions (Shoeb and de Melo, 2020) and sentiment in textual communication (Novak et al., 2015).",
      "startOffset" : 205,
      "endOffset" : 225
    }, {
      "referenceID" : 8,
      "context" : "For this task, we leverage a set of custom sentences and tweets from the Sentiment140 dataset (Go et al., 2009).",
      "startOffset" : 94,
      "endOffset" : 111
    }, {
      "referenceID" : 10,
      "context" : "Additionally, we evaluate the standalone VADER library directly as it is meant to support emoji sentiment (Hutto and Gilbert, 2014).",
      "startOffset" : 106,
      "endOffset" : 131
    }, {
      "referenceID" : 11,
      "context" : "Some studies (Jain et al., 2019) show that an emoji can moderate the sentiment of a given tweet if the sentiment of an emoji is considered during training.",
      "startOffset" : 13,
      "endOffset" : 32
    }, {
      "referenceID" : 9,
      "context" : "Some researchers argue that the default tagging of emoji should be as adverbials, interjections, or punctuation (Grosz et al., 2021).",
      "startOffset" : 112,
      "endOffset" : 132
    }, {
      "referenceID" : 23,
      "context" : "(Shoeb et al., 2019) dataset, and generated a set of nearest neighbours for selected target emojis.",
      "startOffset" : 0,
      "endOffset" : 20
    } ],
    "year" : 2021,
    "abstractText" : "Emojis have become ubiquitous in digital communication, due to their visual appeal as well as their ability to vividly convey human emotion, among other factors. This also leads to an increased need for systems and tools to operate on text containing emojis. In this study, we assess this support by considering test sets of tweets with emojis, based on which we perform a series of experiments investigating the ability of prominent NLP and text processing tools to adequately process them. In particular, we consider tokenization, part-of-speech tagging, dependency parsing, as well as sentiment analysis. Our findings show that many systems still have notable shortcomings when operating on text containing emojis.",
    "creator" : "LaTeX with hyperref"
  }
}