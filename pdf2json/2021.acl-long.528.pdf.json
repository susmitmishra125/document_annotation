{
  "name" : "2021.acl-long.528.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Inter-GPS: Interpretable Geometry Problem Solving with Formal Language and Symbolic Reasoning",
    "authors" : [ "Pan Lu", "Ran Gong", "Shibiao Jiang", "Liang Qiu", "Siyuan Huang", "Xiaodan Liang", "Song-Chun Zhu" ],
    "emails" : [ "panlu@cs.ucla.edu,", "huangsiyuan}@ucla.edu,", "xdliang328}@gmail.com,", "sczhu@stat.ucla.edu" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing, pages 6774–6786\nAugust 1–6, 2021. ©2021 Association for Computational Linguistics\n6774"
    }, {
      "heading" : "1 Introduction",
      "text" : "Geometry problem solving is a long-standing challenging task in artificial intelligence and has been gaining more attention in the NLP community recently (Seo et al., 2014; Hopkins et al., 2019; Sachan et al., 2020). Solving geometry problems is an essential subject in high-school education for the development of students’ abstract thinking. As an example shown in Figure 1, given problem text\n∗Equal contribution. 1The project with code and data is available at https:\n//lupantech.github.io/inter-gps.\nin natural language and a corresponding diagram, one needs to identify the geometric relations, apply theorem knowledge, and conduct algebraic calculations to derive the numerical value of the answer.\nPsychologists and educators believe that solving geometric problems requires high-level thinking abilities of symbolic abstraction and logical reasoning (Chinnappan, 1998; Nur and Nurvitasari, 2017). However, if algorithms take the raw problem content, it might encounter challenges to understand the abstract semantics and perform human-like cognitive reasoning for inferring the answer in the geometry domain. A formal language is composed of words from a well-formed alphabet based on a specific set of rules and is commonly used in the fields of linguistics and mathematics. Therefore, our proposed geometry solver parses the problem inputs into formal language descriptions (see examples in Figure 1) before solving the problems.\nTo translate the problem text and diagrams to formal descriptions, existing methods (Seo et al., 2015; Sachan et al., 2017; Sachan and Xing, 2017) highly depend on human annotations like symbols in diagrams as the intermediate results. Also, these methods fail to provide the explicit reasoning processes when predicting the answer. For example, (Seo et al., 2015) simplifies the problem solving task to an optimization problem to pick one that satisfies all constraints from choice candidates. Fur-\nthermore, most current datasets are either small in scale or not publicly available (Seo et al., 2015; Sachan and Xing, 2017), which further hinders the research of geometry problem solving.\nTo overcome these challenges, we first construct a new large-scale benchmark, called Geometry3K, to assess algorithms’ performance of geometry problem solving. The Geometry3K dataset consists of 3,002 multi-choice problems as well as covers diverse geometric shapes and problem goals. In contrast with existing work, we also annotate each problem text and diagram with unified structural descriptions in formal language.\nThis paper further presents a novel geometry solving approach with formal language and symbolic reasoning, called Interpretable Geometry Problem Solver (Inter-GPS). Inter-GPS (Figure 4) develops an automatic parser that translates the problem text via template rules and parses diagrams by a neural object detector into formal language, respectively. In contrast to parameter learning, Inter-GPS formulates the geometry solving task as problem goal searching, and incorporates theorem knowledge as conditional rules to perform symbolic reasoning step by step. It demonstrates an interpretable way to tackle the task. Also, we design a theorem predictor to infer the possible theorem application sequence in Inter-GPS for the efficient and reasonable searching path. Extensive experiments on the Geometry3K and GEOS datasets show Inter-GPS achieves large improvements over existing methods.\nOur contributions are three-fold: (1) we introduce a large-scale diverse benchmark of geometry problem solving, Geometry3K, which is densely annotated with formal language; (2) we develop an automatic problem parser to translate the problem text and diagram into formal language; (3) we propose a novel interpretable problem solver that applies symbolic reasoning to infer the answer."
    }, {
      "heading" : "2 Related Work",
      "text" : "Datasets for Geometry Problem Solving. Several datasets for geometry problems have been released in recent years. These include GEOS (Seo et al., 2015), GEOS++ (Sachan et al., 2017), GeoShader (Alvin et al., 2017) and GEOS-OS (Sachan and Xing, 2017) datasets. However, these datasets are relatively small in scale and contain limited problem types. For example, there are only 102 shaded area problems in GeoShader and 186\nproblems in GEOS. While GEOS++ and GEOSOS contain more data of 1,406 and 2,235 problems, respectively, they have not been publicly available yet. Instead, our Geometry3K dataset features 3,002 SAT-style problems collected from two high-school textbooks that cover diverse graph and goal types. Besides, each problem in Geometry3K is annotated with dense descriptions in formal language (defined in Section 3), which makes it particularly suited for symbolic reasoning and interpretable problem solving. In order to promote follow-up work in the geometry domain, we release the dataset and evaluation baselines.\nApproaches for Geometry Problem Solving. Due to the sparsity of appropriate data, most early works on automated geometry systems focus on geometry theorem proving (Wen-Tsun, 1986; Chou et al., 1996; Yu et al., 2019; Gan et al., 2019), problem synthesis (Alvin et al., 2014), diagram parsing (Seo et al., 2014), as well as problem formalization (Gan and Yu, 2018). (Seo et al., 2015) attempt using computer vision and natural language processing techniques to solve geometry problems with problem understanding. However, the system does not perform explicit reasoning with axiomatic knowledge as it reduces the task to an optimization problem to see which choice can satisfy all constraints. Some recent efforts (Sachan et al., 2017, 2020) have been made to incorporate theorem knowledge into problem solving. They feed geometry axioms written as horn clause rules and declarations from the diagram and text parser into logical programs in prolog style to solve the problem. However, these methods fail to provide humanreadable solving steps. And parameter learning on horn clause rules and built-in solvers leads to an uncontrollable search process. In contrast, our proposed Inter-GPS implements explicit symbolic reasoning to infer the answer without the help of candidate answers in an interpretable way.\nInterpretable Math Problem Solving. Due to the intrinsic requirements of symbolic understanding and logical reasoning, interpretability of solvers plays an essential role in geometry problem solving. While the interpretability of geometry problem solvers is rarely explored, some pioneering work has been proposed in the general math problem solving domain. Broadly there are two main lines of achieving interpretable solving steps for math problems. The first generates intermediate structural results of equation templates (Huang et al.,\n2017; Wang et al., 2019), operational programs (Amini et al., 2019) and expression trees (Wang et al., 2018; Qin et al., 2020; Hong et al., 2021). The second line of work with a higher level of interpretability translates the math problems into symbolic language and conducts logical reasoning iteratively to predict the final results (Matsuzaki et al., 2017; Roy and Roth, 2018). Furthermore, inspired by work on semantic parsing (Han and Zhu, 2005; Zhu and Mumford, 2006; Tu et al., 2014), we claim structured diagram parsing and joint semantic representations for text and diagrams is critical in interpretable geometry problem solving."
    }, {
      "heading" : "3 Geometry Formal Language",
      "text" : "A geometry problem P is defined as a tuple (t, d, c), in which t is the input text, d is the diagram image and c = {c1, c2, c3, c4} is the multiplechoice candidate set in the format of numerical values. Given the text t and diagram d, an algorithm is required to predict the correct answer ci ∈ c. We formally describe the problem in the geometric domain language Ω, a set of literals composed of predicates and arguments. Basic terms used in the geometry problem solver are defined as follows.\nDefinition 1. A predicate is a geometric shape entity, geometric relation, or arithmetic function.\nDefinition 2. A literal is an application of one predicate to a set of arguments like variables or constants. A set of literals makes up the semantic description from the problem text and diagrams in the formal language space Ω.\nDefinition 3. A primitive is a basic geometric element like a point, a line segment, a circle, or an\narc segment extracted from the diagram.\nTable 1 lists examples of predicates and literal templates. There are 91 predicates in our defined formal language, and we list them in the Tables 10 to 15 in the Appendix Section."
    }, {
      "heading" : "4 Geometry3K Dataset",
      "text" : ""
    }, {
      "heading" : "4.1 Dataset Collection",
      "text" : "Most existing datasets for geometry problem solving are relatively small, contain limited problem types, or not publicly available. For instance, the GEOS dataset (Seo et al., 2015) only contains 186 SAT problems. Although there are 1,406 problems in GEOS++ (Sachan et al., 2017), this dataset has not been released to the public yet. Therefore, we build a new large-scale geometry problem benchmark, called Geometry3K. The data is collected from two popular textbooks for high school students across grades 6-12 by two online digital libraries (McGraw-Hill2, Geometryonline3). Groups of well-trained annotators with undergraduate degrees manually collect each problem with its problem text, geometry diagram, four candidate choices, and correct answer. In order to evaluate the finegrained performance of geometry solvers, we label each problem data with the corresponding problem goal and geometry shapes.\n2https://www.mheducation.com/ 3www.geometryonline.com\nUnlike existing datasets that only collect the problem text and diagrams, we further annotate each data in Geometry3K with dense formal language descriptions that bridge the semantic gap between the textual and visual contents as well as benefit the symbolic problem solver. The annotated formal language is used to train and evaluate our proposed problem parsers. Data examples are illustrated in Figure 2."
    }, {
      "heading" : "4.2 Dataset Statistics",
      "text" : "The Geometry3K dataset consists of 3,002 problems and is divided into the train, validation, and test sets with the ratio of 0.7:0.1:0.2, as shown in Table 3. Figure 3 illustrates the question distribution by the number of sentence words. The long tail in the distribution requires the geometry solvers to understand the rich semantics in the textual content.\nThere are 6,293 literals for the problem text and 27,213 literals for the diagrams in Geometry3K, respectively. We list the most and least frequent predicates with a frequency greater than 5 in Table 4. It is shown that the predicates for the problem\ntext are more evenly distributed than those for diagrams. This is mainly because the problem text describes diverse geometric shapes, attributes, and relations while diagrams display the basic properties of points, lines, and arcs."
    }, {
      "heading" : "4.3 Comparisons with Existing Datasets",
      "text" : "To the best of our knowledge, currently, it is the largest geometry problem dataset. We summarize the Geometry3K dataset’s main statistics and a comparison of existing datasets in Table 2. In addition to four elementary shapes (lines, triangles, regular quadrilaterals, and circles) mentioned in that GEOS dataset, Geometry3K contains irregular quadrilaterals and other polygons. Besides, in Geometry3K, there are more unknown variables and operator types that may require equation solving to find the goal of the problem. Note that 80.5% of problems are solvable without the associated diagram in the GEOS dataset. By contrast, less than 1% of the problems in our Geometry3K dataset could be solved when the problem diagram is not provided. In general, the statistics and comparisons above show Geometry3K is challenging for geometry problem solvers."
    }, {
      "heading" : "4.4 Human Performance",
      "text" : "As an intellectual task, it is necessary to know the human performance for geometry problems. We push the test-split data of the dataset in the crowd-\nsourcing platform, Amazon Mechanical Turk4. Each eligible annotator must have obtained a high school or higher degree and is asked to answer 10 problems in 25 minutes. To ensure annotators solving the problem to the best of their ability, they are further asked to spend at least 7 minutes on the problem set and 10 seconds on each problem. We filter out annotators who do not satisfy the requirement. We also ask dozens of graduates majoring in science or engineering to answer these problems to evaluate human experts’ performance. Table 5 shows the human performance. Compared to random guess’s accuracy of 25%, humans achieve an overall accuracy of 56.9%, and human experts can achieve a good performance of 90.9%."
    }, {
      "heading" : "5 Geometry Problem Parser",
      "text" : "Our proposed Inter-GPS takes the problem text and diagrams as inputs and translates them into formal language descriptions automatically via the text parser (Section 5.1) and the diagram parser (Section 5.2), respectively."
    }, {
      "heading" : "5.1 Text Parser",
      "text" : "Given the word sequence of the problem text T , the text parser needs to translate it into a set of literals Lt, a sequence composed of predicates and variables. Recently, deep neural networks have achieved promising performances in sequence-tosequence (Seq2Seq) learning tasks like machine translation (Sutskever et al., 2014; Vaswani et al., 2017; Devlin et al., 2018). However, semantic parsers using Seq2Seq learning methods are not feasible to generate satisfactory literals in the Geometry3K dataset for two reasons. Firstly, the limited scale of geometry datasets weakens these highly data-driven methods. Secondly, neural semantic parsers tend to bring noises in generated results while geometry solvers with symbolic reasoning are sensitive to such deviations.\nInspired by previous works (Koo et al., 2008; Seo et al., 2015; Bansal et al., 2014) that indicate the rule-based parsing method is able to obtain precise parsing results, we apply this approach with regular expressions to perform text parsing. We also achieve a semantic text parser using BART (Lewis et al., 2020), one of the state-of-the-art sequence learning models for comparison.\n4https://www.mturk.com/"
    }, {
      "heading" : "5.2 Diagram Parser",
      "text" : "Diagrams provide complementary geometric information that is not mentioned in the problem text. Previous works (Seo et al., 2014, 2015) require manual annotations to identify symbols in the diagrams and fail to deal with special relational symbols such as parallel, perpendicular, and isosceles. Instead, an automatic diagram parser without human intervention is proposed in this work and is able to detect varied diagram symbols.\nThe diagram parser first applies Hough Transformation (Shapiro and Stockman, 2001) to extract geometry primitives (points, lines, arcs, and circles), following (Seo et al., 2015). Then the diagram symbols and text regions are extracted through a strong object detector RetinaNet (Lin et al., 2017), and the textual content is further recognized by the optical character recognition tool MathPix5. After obtaining the primitive set P and symbol set S, we need to ground each symbol with its associated primitives. (Seo et al., 2015) adapts a greedy approach where each symbol is assigned to the closest primitive without considering its validity. Instead, we formulate the grounding task as an optimization problem with the constraint of geometry relations:\nmin ∑ s dist(si, pj)× 1{si assigns to pj}\ns.t. (si, pj) ∈ Feasibility set F, (1)\nwhere the dist function measures the Euclidean distance between the symbol si and primitive pj . F defines the geometric constraints for symbol grounding. For example, the parallel symbol could only be assigned to two lines with the same slopes and the perpendicular symbol is only valid to two orthogonal lines."
    }, {
      "heading" : "6 Geometry Problem Solver",
      "text" : "Unlike existing methods (Seo et al., 2015; Sachan et al., 2017; Alvin et al., 2017; Sachan et al., 2020), Inter-GPS achieves the explicit symbolic reasoning with the theorem knowledge base and the humanreadable search process, shown in Figure 4."
    }, {
      "heading" : "6.1 Symbolic Geometry Solver",
      "text" : "Overall, Inter-GPS takes the relation setR and the theorem knowledge base set KB as inputs, and outputs the numeric solution g∗ of the problem goal g.\n5https://mathpix.com/\nThe relation setR defines geometry attributes and relations in the given problem, and is initialized with literals from the text and diagram parsers. R is further expanded with literals that are derived from definitions of geometry shapes. For example, a triangle is defined as three connected sides. So if there is a literal Triangle(A,B,C), six more literals (Ponit(A), Ponit(B), Ponit(C), Line(A,B), Line(B,C), Line(C,A)) will be appended toR.\nThe theorem set KB is represented as a set of theorems, where each theorem ki is written as a conditional rule with a premise p and a conclusion q. For the search step t, if the premise p of ki matches the current relation setRt−1, the relation set is updated according to the conclusion q:\nRt ← ki ∧Rt−1, ki ∈ KB. (2)\nAfter the application of several theorems, equations between the known values and the unknown problem goal g are established, and g could be solved after solving these equations:\ng∗ ← SOLVEEQUATION(Rt, g). (3)"
    }, {
      "heading" : "6.2 Theorem Predictor (TP)",
      "text" : "As the geometry problems in Geometry3K are collected from high school textbooks, it might need to apply multiple theorems before the problems are solved. Intuitively, one possible search strategy is to use brute force to enumerate candidates in the theorem set randomly. The random search strategy is inefficient and might lead to problems unsolvable as there might be applications of complicated theorems in the early stage. Therefore, an ideal geometry problem solver can solve the problems using\nreasonable theorem application sequences. Students with good academic performance can solve a problem with prior knowledge learning from a certain amount of problem solving training. Inspired by this phenomenon, a theorem predictor is proposed to infer the possible theorem application sequence for inference after multiple attempts on the train data. Recent studies (Loos et al., 2017; Balunovic et al., 2018) also suggest that neural guided search can speed up the search process.\nThere are no annotated theorem application sequences for data in Geometry3K due to tremendous worker labor. Thus, we randomly sample from the theorem set multiple times to generate the application sequences. A generated sequence is regarded as positive if the geometry solver Inter-GPS solves the problem after the application of that sequence. A positive sequence with the minimum length for a problem is seen as pseudo-optimal. Finally, after attempts, we collect 1,501 training samples with the problem and its pseudo-optimal theorem application sequence.\nGiven the problem formal description L = {l1, ..., lm}, the theorem predictor aims to reconstruct the pseudo-optimal theorem sequence T = {t1, ..., tn} token by token. We formulate the generation task as a sequence-to-sequence (Seq2Seq) problem and use a transformer-based model (Lewis et al., 2020) to generate theorem sequence tokens. Specifically, the transformer decoder predicts the next theorem order ti given T = {t1, ..., ti}. The Seq2Seq model is trained to optimize the negative log-likelihood loss:\nLTP = − n∑\ni=1\nlog pTP (ti | t1, . . . , ti−1) , (4)\nAlgorithm 1 Symbolic Geometry Solver Input Literals L, goal g, knowledge bases KB1, KB2 Output Numeric goal value g∗ and theorem application S 1: function SEARCH(L, g, KB1, KB2) 2: Initialize relation setR0 with L, g∗ = ∅, S = ∅ 3: KBp ← THEOPREDICTOR(L) . Predicted 4: for ki ∈ KBp do 5: Rt ← ki ∧Rt−1 6: S.APPEND(ki) 7: end for 8: g∗ ← SOLVEEQUATION(Rt, g) 9: if g∗ 6= ∅ then 10: return g∗ and S 11: end if 12: while g∗ = ∅ andRt is updated do 13: for ki ∈ KB1 do . Lower-order 14: Rt ← ki ∧Rt−1 15: S.APPEND(ki) 16: g∗ ← SOLVEEQUATION(Rt, g) 17: if g∗ 6= ∅ then 18: return g∗ and S 19: end if 20: end for 21: for ki ∈ KB2 do . Higher-order 22: Rt ← ki ∧Rt−1 23: S.APPEND(ki) 24: g∗ ← SOLVEEQUATION(Rt, g) 25: if g∗ 6= ∅ then 26: return g∗ and S 27: end if 28: end for 29: end while 30: end function\nwhere pTP is the parametrized conditional distribution in the theorem predictor model."
    }, {
      "heading" : "6.3 Low-first Search Strategy",
      "text" : "After the application of the theorem sequence predicted by the theorem predictor, it is likely that Inter-GPS still could not find the problem goal. Generally, humans incline to use simple theorems first when solving math problems to reduce complex calculations. If simple theorems are not tangible, they will turn to more complex theorems. On account of that, we apply an efficient search strategy with heuristics driven by subject knowledge. We categorize theorems into two groups: lower-order theorem set KB1 and higher-order theorem set KB2. The lower-order set KB1 (e.g, Triangle Angle-Sum Theorem, Congruent Triangle Theorem) only involves in two simple operations of addition and subtraction, while KB2 (e.g, Law of Sines) requires complex calculations. In each following search step after using predicted theorems, we first enumerate theorems in the lower-order set KB1 to update the relation setR:\nRt ← ki ∧Rt−1, ki ∈ KB1. (5)\nIf lower-order theorems fail to updateR anymore, higher-order theorems are considered to updateR:\nRt ← ki ∧Rt−1, ki ∈ KB2. (6)\nThe search process stops once we find the problem goal g or the search steps reach the maximum steps allowed. The whole search algorithm for Inter-GPS is presented in Algorithm 1."
    }, {
      "heading" : "7 Experiments",
      "text" : ""
    }, {
      "heading" : "7.1 Experimental Settings",
      "text" : "Datasets and evaluation metrics. We conduct experiments on the Geometry3K and GEOS (Seo et al., 2015) datasets. The Geometry3K dataset involves 2,101 training data, 300 validation data, and 601 test data, respectively. The GEOS dataset provides 55 official SAT problems for evaluating geometry solvers. Regarding our proposed InterGPS model, if the one closest to the found solution among the four choices is exactly the ground truth, the found solution is considered correct. For a fair comparison, if Inter-GPS fails to output the numeric value of the problem goal within allowed steps, it will randomly choose the one from the four candidates. In terms of compared neural network baselines, the predicted answer has a maximum confidence score among choice candidates. Baselines. We implement several deep neural network baselines for geometry solvers to compare them with our method. By default, these baselines formalize the geometry problem solving task as a classification problem, fed by the text embedding from a sequence encoder and the diagram representation from a visual encoder. Q-only only encodes the problem text in the natural language by a bi-directional Gated Recurrent Unit (Bi-GRU) encoder (Cho et al., 2014). I-only only encodes the problem diagram by a ResNet-50 encoder (He et al., 2016) as the input. Q+I uses Bi-GRU and ResNet-50 to encode the text and diagram, respectively. RelNet (Bansal et al., 2017) is implemented for embedding the problem text because it is a strong method for modeling entities and relations. FiLM (Perez et al., 2018) is compared as it achieves effective visual reasoning for answering questions about abstract images. FiLM-BERT uses the BERT encoder (Devlin et al., 2018) instead of the GRU encoder, and FiLM-BART uses the recently proposed BART encoder (Lewis et al., 2020).\nImplementation details. Main hyper-parameters used in the experiments are shown below. For our symbolic solver, a set of 17 geometry theorems is collected to form the knowledge base. For generating positive theorem sequences, each problem is attempted by 100 times with the maximum sequence length of 20. The transformer model used in the theorem predictor has 6 layers, 12 attention heads, and a hidden embedding size of 768. Search steps in Inter-GPS are set up to 100. For the neural solvers, we choose the Adam optimizer and set the learning rate as 0.01, and the maximum epochs are set as 30. Each experiment for Inter-GPS is repeated three times for more precise results."
    }, {
      "heading" : "7.2 Comparisons with Baselines",
      "text" : "Table 5 compares the results of symbolic solver Inter-GPS with baselines on our proposed Geometry3K dataset. Apart from the overall accuracy, the results of different problem types are also reported. Benefiting from symbolic reasoning with theorem knowledge, our Inter-GPS obtains an overall accuracy of 57.5%, significantly superior to all neural baselines. Inter-GPS even attains a better accuracy compared to human beings. Inter-GPS with ground truth formal language gains a further improvement of 20.8%. Inter-GPS also obtains state-of-the-art performance over exiting geometry solvers on the GEOS dataset, as shown in Table 6."
    }, {
      "heading" : "7.3 Ablation Study and Discussion.",
      "text" : "Search strategies. The overall accuracy and average steps needed for solving problems with different search strategies in Inter-GPS are reported in Table 7. Predict refers to the strategy that uses the theorems from the theorem predictor followed by a random theorem sequence. The strategy largely reduces the average steps to 6.5. The final strategy in Inter-GPS applies the predicted theorems first and lower-order theorems in the remain search steps, and gains the best overall accuracy.\nProblem parsers and literal sources. The rulebased text parser achieves an accuracy of 97% while only 67% for the semantic text parser. Table 8 reports the Inter-GPS performance fed with different sources of literals. With literals generated from our problem solver, Inter-GPS achieves an accuracy of 57.5%. The current text parser performs very well as there is only a slight gap between Inter-GPS with generated text literals and ground truth literals. An improvement of 17.5% for Inter-GPS with annotated diagram literals indicates that there is still much space to improve for the diagram parser.\nSearching step distribution. Figure 5 compares correctly solved problem distribution by the average number of search steps in different strategies. Our final Inter-GPS applies the Predict+Low-first strategy, with which 65.97% problems are solved in two steps and 70.06% solved in five steps.\nNeural geometry solvers. Current neural network baselines for geometry solving fail to achieve satisfactory results in the Geometry3K dataset. It is because there are limited data samples for these neural methods to learn meaningful semantics from the problem inputs. Besides, dense implicit representations might not be suitable for logical reasoning tasks like geometry problem solving. We replace the inputs of problem text and diagram in the Q+I baseline with the ground truth textual and visual formal annotations and report the result in Table 9. An improvement of 9.2% indicates the promising potential for neural network models for problem solving if structural representations with rich semantics are learned.\nFailure cases. Inter-GPS might not find a solution because of inaccurate parsing results and the incomplete theorem set. Figure 6 illustrates some failure examples for Inter-GPS. For example, diagram parsing tends to fail if there are ambiguous annotations or multiple primitives in the diagram. It is difficult for the text parser to handle nested expressions and uncertain references. And the symbolic solver is still not capable of solving complex problems with combined shapes and shaded areas\nin the diagrams. Interpretability in Inter-GPS. Inter-GPS provides an interpretable symbolic solver for geometry problem solving. First, Inter-GPS parses the problem contents into a structural representation of formal language. Second, Inter-GPS performs symbolic reasoning to update the geometric relation set explicitly. Last, Inter-GPS applies reasonable theorems sequentially in the search process."
    }, {
      "heading" : "8 Conclusion",
      "text" : "Solving geometry problems is one of the most challenging tasks in math question answering. In this paper, we propose a large-scale benchmark, Geometry3K, which consists of 3,002 high-school geometry problems with dense descriptions in formal language. We further propose a novel geometry solving approach, Interpretable Geometry Problem Solver (Inter-GPS), which parses the problem as formal language from an automatic parser and performs symbolic reasoning over the theorem knowledge base to infer the answer. Also, a theorem predictor with a low-first search strategy is designed to generate the reasonable theorem application sequence. Experiment results show that Inter-GPS outperforms existing state-of-the-art methods by a large margin. In the future, we plan to extend our work in other math question answering tasks and explore more general symbolic reasoning models."
    }, {
      "heading" : "Acknowledgments",
      "text" : "This work was supported by MURI N00014-16-12007 and DARPA XAI N66001-17-2-4029. We thank Johnson Zhou and Jiahao Li for collecting part of the data. And we thank the help from Jianheng Tang in baseline implementation.\nEthical Impact\nThe problems in Geometry3K are collected from online open sources. The work in this paper may inspire the following research in symbolic reasoning and interpretable models and facilitate education."
    }, {
      "heading" : "A Appendix",
      "text" : "We define 91 predicates and their corresponding literal templates in the geometry language domain. For development, these predicates are categorized into six groups: geometric shapes (Table 10), unary geometric attributes (Table 11), general geometric attributes (Table 12), binary geometric relations (Table 13), A-IsXOf-B-type geometric relations (Table 14), as well as numerical attributes and relations (Table 15). Moreover, $ in the literal templates denotes the undetermined shape."
    } ],
    "references" : [ {
      "title" : "Synthesis of geometry proof problems",
      "author" : [ "Chris Alvin", "Sumit Gulwani", "Rupak Majumdar", "Supratik Mukhopadhyay." ],
      "venue" : "Proceedings of the AAAI Conference on Artificial Intelligence (AAAI).",
      "citeRegEx" : "Alvin et al\\.,? 2014",
      "shortCiteRegEx" : "Alvin et al\\.",
      "year" : 2014
    }, {
      "title" : "Synthesis of solutions for shaded area geometry problems",
      "author" : [ "Chris Alvin", "Sumit Gulwani", "Rupak Majumdar", "Supratik Mukhopadhyay." ],
      "venue" : "The Thirtieth International Flairs Conference.",
      "citeRegEx" : "Alvin et al\\.,? 2017",
      "shortCiteRegEx" : "Alvin et al\\.",
      "year" : 2017
    }, {
      "title" : "Mathqa: Towards interpretable math word problem solving with operation-based formalisms",
      "author" : [ "Aida Amini", "Saadia Gabriel", "Peter Lin", "Rik KoncelKedziorski", "Yejin Choi", "Hannaneh Hajishirzi." ],
      "venue" : "Proceedings of Annual Conference of the North",
      "citeRegEx" : "Amini et al\\.,? 2019",
      "shortCiteRegEx" : "Amini et al\\.",
      "year" : 2019
    }, {
      "title" : "Learning to solve smt formulas",
      "author" : [ "Mislav Balunovic", "Pavol Bielik", "Martin T Vechev." ],
      "venue" : "Advances in Neural Information Processing Systems (NeurIPS), pages 10338–10349.",
      "citeRegEx" : "Balunovic et al\\.,? 2018",
      "shortCiteRegEx" : "Balunovic et al\\.",
      "year" : 2018
    }, {
      "title" : "Tailoring continuous word representations for dependency parsing",
      "author" : [ "Mohit Bansal", "Kevin Gimpel", "Karen Livescu." ],
      "venue" : "Proceedings of the Annual Meeting of the Association for Computational Linguistics (ACL), pages 809–815.",
      "citeRegEx" : "Bansal et al\\.,? 2014",
      "shortCiteRegEx" : "Bansal et al\\.",
      "year" : 2014
    }, {
      "title" : "Relnet: End-to-end modeling of entities & relations",
      "author" : [ "Trapit Bansal", "Arvind Neelakantan", "Andrew McCallum." ],
      "venue" : "arXiv preprint arXiv:1706.07179.",
      "citeRegEx" : "Bansal et al\\.,? 2017",
      "shortCiteRegEx" : "Bansal et al\\.",
      "year" : 2017
    }, {
      "title" : "Schemas and mental models in geometry problem solving",
      "author" : [ "Mohan Chinnappan." ],
      "venue" : "Educational Studies in Mathematics, 36(3):201–217.",
      "citeRegEx" : "Chinnappan.,? 1998",
      "shortCiteRegEx" : "Chinnappan.",
      "year" : 1998
    }, {
      "title" : "On the properties of neural machine translation: Encoder-decoder approaches",
      "author" : [ "Kyunghyun Cho", "Bart van Merrienboer", "Dzmitry Bahdanau", "Yoshua Bengio." ],
      "venue" : "arXiv preprint arXiv:1409.1259.",
      "citeRegEx" : "Cho et al\\.,? 2014",
      "shortCiteRegEx" : "Cho et al\\.",
      "year" : 2014
    }, {
      "title" : "Automated generation of readable proofs with geometric invariants",
      "author" : [ "Shang-Ching Chou", "Xiao-Shan Gao", "Jing-Zhong Zhang." ],
      "venue" : "Journal of Automated Reasoning, 17(3):325–347.",
      "citeRegEx" : "Chou et al\\.,? 1996",
      "shortCiteRegEx" : "Chou et al\\.",
      "year" : 1996
    }, {
      "title" : "Bert: Pre-training of deep bidirectional transformers for language understanding",
      "author" : [ "Jacob Devlin", "Ming-Wei Chang", "Kenton Lee", "Kristina Toutanova." ],
      "venue" : "Proceedings of NAACL-HLT (NAACL).",
      "citeRegEx" : "Devlin et al\\.,? 2018",
      "shortCiteRegEx" : "Devlin et al\\.",
      "year" : 2018
    }, {
      "title" : "Automatic understanding and formalization of natural language geometry problems using syntax-semantics models",
      "author" : [ "Wenbin Gan", "Xinguo Yu." ],
      "venue" : "International Journal of Innovative Computing, Information and Control, pages 83–98.",
      "citeRegEx" : "Gan and Yu.,? 2018",
      "shortCiteRegEx" : "Gan and Yu.",
      "year" : 2018
    }, {
      "title" : "Automatically proving plane geometry theorems stated by text and diagram",
      "author" : [ "Wenbin Gan", "Xinguo Yu", "Ting Zhang", "Mingshu Wang." ],
      "venue" : "International Journal of Pattern Recognition and Artificial Intelligence, 33(07):1940003.",
      "citeRegEx" : "Gan et al\\.,? 2019",
      "shortCiteRegEx" : "Gan et al\\.",
      "year" : 2019
    }, {
      "title" : "Bottom-up/topdown image parsing by attribute graph grammar",
      "author" : [ "Feng Han", "Song-Chun Zhu." ],
      "venue" : "Tenth IEEE International Conference on Computer Vision (ICCV’05) Volume 1, volume 2, pages 1778– 1785. IEEE.",
      "citeRegEx" : "Han and Zhu.,? 2005",
      "shortCiteRegEx" : "Han and Zhu.",
      "year" : 2005
    }, {
      "title" : "Deep residual learning for image recognition",
      "author" : [ "Kaiming He", "Xiangyu Zhang", "Shaoqing Ren", "Jian Sun." ],
      "venue" : "Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR), pages 770–778.",
      "citeRegEx" : "He et al\\.,? 2016",
      "shortCiteRegEx" : "He et al\\.",
      "year" : 2016
    }, {
      "title" : "Learning by fixing: Solving math word problems with weak supervision",
      "author" : [ "Yining Hong", "Qing Li", "Daniel Ciao", "Siyuan Huang", "Song-Chun Zhu." ],
      "venue" : "Proceedings of the Thirty-Fifth AAAI Conference on Artificial Intelligence, AAAI-21.",
      "citeRegEx" : "Hong et al\\.,? 2021",
      "shortCiteRegEx" : "Hong et al\\.",
      "year" : 2021
    }, {
      "title" : "Semeval-2019 task 10: Math question answering",
      "author" : [ "Mark Hopkins", "Ronan Le Bras", "Cristian PetrescuPrahova", "Gabriel Stanovsky", "Hannaneh Hajishirzi", "Rik Koncel-Kedziorski." ],
      "venue" : "Proceedings of the 13th International Workshop on Semantic",
      "citeRegEx" : "Hopkins et al\\.,? 2019",
      "shortCiteRegEx" : "Hopkins et al\\.",
      "year" : 2019
    }, {
      "title" : "Learning fine-grained expressions to solve math word problems",
      "author" : [ "Danqing Huang", "Shuming Shi", "Chin-Yew Lin", "Jian Yin." ],
      "venue" : "Proceedings of Empirical Methods in Natural Language Processing (EMNLP), pages 805–814.",
      "citeRegEx" : "Huang et al\\.,? 2017",
      "shortCiteRegEx" : "Huang et al\\.",
      "year" : 2017
    }, {
      "title" : "Simple semi-supervised dependency parsing",
      "author" : [ "Terry Koo", "Xavier Carreras", "Michael Collins." ],
      "venue" : "Proceedings of the Annual Meeting of the Association for Computational Linguistics (ACL), pages 595–603.",
      "citeRegEx" : "Koo et al\\.,? 2008",
      "shortCiteRegEx" : "Koo et al\\.",
      "year" : 2008
    }, {
      "title" : "Bart: Denoising sequence-to-sequence pretraining for natural language",
      "author" : [ "Mike Lewis", "Yinhan Liu", "Naman Goyal", "Marjan Ghazvininejad", "Abdelrahman Mohamed", "Omer Levy", "Veselin Stoyanov", "Luke Zettlemoyer" ],
      "venue" : null,
      "citeRegEx" : "Lewis et al\\.,? \\Q2020\\E",
      "shortCiteRegEx" : "Lewis et al\\.",
      "year" : 2020
    }, {
      "title" : "Focal loss for dense object detection",
      "author" : [ "Tsung-Yi Lin", "Priya Goyal", "Ross Girshick", "Kaiming He", "Piotr Dollár." ],
      "venue" : "Proceedings of the IEEE International Conference on Computer Vision (ICCV), pages 2980–2988.",
      "citeRegEx" : "Lin et al\\.,? 2017",
      "shortCiteRegEx" : "Lin et al\\.",
      "year" : 2017
    }, {
      "title" : "Deep network guided proof search",
      "author" : [ "Sarah Loos", "Geoffrey Irving", "Christian Szegedy", "Cezary Kaliszyk." ],
      "venue" : "arXiv preprint arXiv:1701.06972.",
      "citeRegEx" : "Loos et al\\.,? 2017",
      "shortCiteRegEx" : "Loos et al\\.",
      "year" : 2017
    }, {
      "title" : "Semantic parsing of pre-university math problems",
      "author" : [ "Takuya Matsuzaki", "Takumi Ito", "Hidenao Iwane", "Hirokazu Anai", "Noriko H Arai." ],
      "venue" : "Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (ACL), pages",
      "citeRegEx" : "Matsuzaki et al\\.,? 2017",
      "shortCiteRegEx" : "Matsuzaki et al\\.",
      "year" : 2017
    }, {
      "title" : "Geometry skill analysis in problem solving reviewed from the difference of cognitive style students junior",
      "author" : [ "Andi Saparuddin Nur", "Evy Nurvitasari" ],
      "venue" : null,
      "citeRegEx" : "Nur and Nurvitasari.,? \\Q2017\\E",
      "shortCiteRegEx" : "Nur and Nurvitasari.",
      "year" : 2017
    }, {
      "title" : "Film: Visual reasoning with a general conditioning layer",
      "author" : [ "Ethan Perez", "Florian Strub", "Harm De Vries", "Vincent Dumoulin", "Aaron Courville." ],
      "venue" : "Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), volume 32.",
      "citeRegEx" : "Perez et al\\.,? 2018",
      "shortCiteRegEx" : "Perez et al\\.",
      "year" : 2018
    }, {
      "title" : "Semantically-aligned universal tree-structured solver for math word problems",
      "author" : [ "Jinghui Qin", "Lihui Lin", "Xiaodan Liang", "Rumin Zhang", "Liang Lin." ],
      "venue" : "Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing (EMNLP),",
      "citeRegEx" : "Qin et al\\.,? 2020",
      "shortCiteRegEx" : "Qin et al\\.",
      "year" : 2020
    }, {
      "title" : "Mapping to declarative knowledge for word problem solving",
      "author" : [ "Subhro Roy", "Dan Roth." ],
      "venue" : "Transactions of the Association for Computational Linguistics (TACL), 6:159–172.",
      "citeRegEx" : "Roy and Roth.,? 2018",
      "shortCiteRegEx" : "Roy and Roth.",
      "year" : 2018
    }, {
      "title" : "Discourse in multimedia: A case study in extracting geometry knowledge from textbooks",
      "author" : [ "Mrinmaya Sachan", "Avinava Dubey", "Eduard H Hovy", "Tom M Mitchell", "Dan Roth", "Eric P Xing." ],
      "venue" : "Computational Linguistics, 45(4):627–665.",
      "citeRegEx" : "Sachan et al\\.,? 2020",
      "shortCiteRegEx" : "Sachan et al\\.",
      "year" : 2020
    }, {
      "title" : "From textbooks to knowledge: A case study in harvesting axiomatic knowledge from textbooks to solve geometry problems",
      "author" : [ "Mrinmaya Sachan", "Kumar Dubey", "Eric Xing." ],
      "venue" : "Proceedings of Empirical Methods in Natural Language Processing",
      "citeRegEx" : "Sachan et al\\.,? 2017",
      "shortCiteRegEx" : "Sachan et al\\.",
      "year" : 2017
    }, {
      "title" : "Learning to solve geometry problems from natural language demonstrations in textbooks",
      "author" : [ "Mrinmaya Sachan", "Eric Xing." ],
      "venue" : "Proceedings of the 6th Joint Conference on Lexical and Computational Semantics, pages 251–261.",
      "citeRegEx" : "Sachan and Xing.,? 2017",
      "shortCiteRegEx" : "Sachan and Xing.",
      "year" : 2017
    }, {
      "title" : "Diagram understanding in geometry questions",
      "author" : [ "Min Joon Seo", "Hannaneh Hajishirzi", "Ali Farhadi", "Oren Etzioni." ],
      "venue" : "Proceedings of the AAAI Conference on Artificial Intelligence (AAAI).",
      "citeRegEx" : "Seo et al\\.,? 2014",
      "shortCiteRegEx" : "Seo et al\\.",
      "year" : 2014
    }, {
      "title" : "Solving geometry problems: Combining text and diagram interpretation",
      "author" : [ "Minjoon Seo", "Hannaneh Hajishirzi", "Ali Farhadi", "Oren Etzioni", "Clint Malcolm." ],
      "venue" : "Proceedings of Empirical Methods in Natural Language Processing (EMNLP), pages 1466–",
      "citeRegEx" : "Seo et al\\.,? 2015",
      "shortCiteRegEx" : "Seo et al\\.",
      "year" : 2015
    }, {
      "title" : "Computer vision",
      "author" : [ "Linda G Shapiro", "George C Stockman." ],
      "venue" : "Prentice Hall.",
      "citeRegEx" : "Shapiro and Stockman.,? 2001",
      "shortCiteRegEx" : "Shapiro and Stockman.",
      "year" : 2001
    }, {
      "title" : "Sequence to sequence learning with neural networks",
      "author" : [ "Ilya Sutskever", "Oriol Vinyals", "Quoc V Le." ],
      "venue" : "arXiv preprint arXiv:1409.3215.",
      "citeRegEx" : "Sutskever et al\\.,? 2014",
      "shortCiteRegEx" : "Sutskever et al\\.",
      "year" : 2014
    }, {
      "title" : "Joint video and text parsing for understanding events and answering queries",
      "author" : [ "Kewei Tu", "Meng Meng", "Mun Wai Lee", "Tae Eun Choe", "Song-Chun Zhu." ],
      "venue" : "IEEE MultiMedia, 21(2):42–70.",
      "citeRegEx" : "Tu et al\\.,? 2014",
      "shortCiteRegEx" : "Tu et al\\.",
      "year" : 2014
    }, {
      "title" : "Attention is all you need",
      "author" : [ "Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N Gomez", "Łukasz Kaiser", "Illia Polosukhin." ],
      "venue" : "Advances in Neural Information Processing Systems (NeurIPS), 30:5998–6008.",
      "citeRegEx" : "Vaswani et al\\.,? 2017",
      "shortCiteRegEx" : "Vaswani et al\\.",
      "year" : 2017
    }, {
      "title" : "Translating a math word problem to an expression tree",
      "author" : [ "Lei Wang", "Yan Wang", "Deng Cai", "Dongxiang Zhang", "Xiaojiang Liu." ],
      "venue" : "Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP).",
      "citeRegEx" : "Wang et al\\.,? 2018",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2018
    }, {
      "title" : "Template-based math word problem solvers with recursive neural networks",
      "author" : [ "Lei Wang", "Dongxiang Zhang", "Jipeng Zhang", "Xing Xu", "Lianli Gao", "Bing Tian Dai", "Heng Tao Shen." ],
      "venue" : "Proceedings of the AAAI Conference on Artificial Intelligence",
      "citeRegEx" : "Wang et al\\.,? 2019",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2019
    }, {
      "title" : "Basic principles of mechanical theorem proving in elementary geometries",
      "author" : [ "Wu Wen-Tsun." ],
      "venue" : "Journal of Automated Reasoning, 2(3):221–252.",
      "citeRegEx" : "Wen.Tsun.,? 1986",
      "shortCiteRegEx" : "Wen.Tsun.",
      "year" : 1986
    }, {
      "title" : "A framework for solving explicit arithmetic word problems and proving plane geometry theorems",
      "author" : [ "Xinguo Yu", "Mingshu Wang", "Wenbin Gan", "Bin He", "Nan Ye." ],
      "venue" : "International Journal of Pattern Recognition and Artificial Intelligence,",
      "citeRegEx" : "Yu et al\\.,? 2019",
      "shortCiteRegEx" : "Yu et al\\.",
      "year" : 2019
    }, {
      "title" : "A stochastic grammar of images",
      "author" : [ "Song-Chun Zhu", "David Mumford." ],
      "venue" : "Foundations and Trends in Computer Graphics and Vision, 2(4):259–362.",
      "citeRegEx" : "Zhu and Mumford.,? 2006",
      "shortCiteRegEx" : "Zhu and Mumford.",
      "year" : 2006
    } ],
    "referenceMentions" : [ {
      "referenceID" : 29,
      "context" : "Geometry problem solving is a long-standing challenging task in artificial intelligence and has been gaining more attention in the NLP community recently (Seo et al., 2014; Hopkins et al., 2019; Sachan et al., 2020).",
      "startOffset" : 154,
      "endOffset" : 215
    }, {
      "referenceID" : 15,
      "context" : "Geometry problem solving is a long-standing challenging task in artificial intelligence and has been gaining more attention in the NLP community recently (Seo et al., 2014; Hopkins et al., 2019; Sachan et al., 2020).",
      "startOffset" : 154,
      "endOffset" : 215
    }, {
      "referenceID" : 26,
      "context" : "Geometry problem solving is a long-standing challenging task in artificial intelligence and has been gaining more attention in the NLP community recently (Seo et al., 2014; Hopkins et al., 2019; Sachan et al., 2020).",
      "startOffset" : 154,
      "endOffset" : 215
    }, {
      "referenceID" : 6,
      "context" : "Psychologists and educators believe that solving geometric problems requires high-level thinking abilities of symbolic abstraction and logical reasoning (Chinnappan, 1998; Nur and Nurvitasari, 2017).",
      "startOffset" : 153,
      "endOffset" : 198
    }, {
      "referenceID" : 22,
      "context" : "Psychologists and educators believe that solving geometric problems requires high-level thinking abilities of symbolic abstraction and logical reasoning (Chinnappan, 1998; Nur and Nurvitasari, 2017).",
      "startOffset" : 153,
      "endOffset" : 198
    }, {
      "referenceID" : 30,
      "context" : "To translate the problem text and diagrams to formal descriptions, existing methods (Seo et al., 2015; Sachan et al., 2017; Sachan and Xing, 2017) highly depend on human annotations like symbols in diagrams as the intermediate results.",
      "startOffset" : 84,
      "endOffset" : 146
    }, {
      "referenceID" : 27,
      "context" : "To translate the problem text and diagrams to formal descriptions, existing methods (Seo et al., 2015; Sachan et al., 2017; Sachan and Xing, 2017) highly depend on human annotations like symbols in diagrams as the intermediate results.",
      "startOffset" : 84,
      "endOffset" : 146
    }, {
      "referenceID" : 28,
      "context" : "To translate the problem text and diagrams to formal descriptions, existing methods (Seo et al., 2015; Sachan et al., 2017; Sachan and Xing, 2017) highly depend on human annotations like symbols in diagrams as the intermediate results.",
      "startOffset" : 84,
      "endOffset" : 146
    }, {
      "referenceID" : 30,
      "context" : "For example, (Seo et al., 2015) simplifies the problem solving task to an optimization problem to pick one that satisfies all constraints from choice candidates.",
      "startOffset" : 13,
      "endOffset" : 31
    }, {
      "referenceID" : 30,
      "context" : "scale or not publicly available (Seo et al., 2015; Sachan and Xing, 2017), which further hinders the research of geometry problem solving.",
      "startOffset" : 32,
      "endOffset" : 73
    }, {
      "referenceID" : 28,
      "context" : "scale or not publicly available (Seo et al., 2015; Sachan and Xing, 2017), which further hinders the research of geometry problem solving.",
      "startOffset" : 32,
      "endOffset" : 73
    }, {
      "referenceID" : 30,
      "context" : "These include GEOS (Seo et al., 2015), GEOS++ (Sachan et al.",
      "startOffset" : 19,
      "endOffset" : 37
    }, {
      "referenceID" : 27,
      "context" : ", 2015), GEOS++ (Sachan et al., 2017), GeoShader (Alvin et al.",
      "startOffset" : 16,
      "endOffset" : 37
    }, {
      "referenceID" : 1,
      "context" : ", 2017), GeoShader (Alvin et al., 2017) and GEOS-OS (Sachan and Xing, 2017) datasets.",
      "startOffset" : 19,
      "endOffset" : 39
    }, {
      "referenceID" : 37,
      "context" : "works on automated geometry systems focus on geometry theorem proving (Wen-Tsun, 1986; Chou et al., 1996; Yu et al., 2019; Gan et al., 2019), problem synthesis (Alvin et al.",
      "startOffset" : 70,
      "endOffset" : 140
    }, {
      "referenceID" : 8,
      "context" : "works on automated geometry systems focus on geometry theorem proving (Wen-Tsun, 1986; Chou et al., 1996; Yu et al., 2019; Gan et al., 2019), problem synthesis (Alvin et al.",
      "startOffset" : 70,
      "endOffset" : 140
    }, {
      "referenceID" : 38,
      "context" : "works on automated geometry systems focus on geometry theorem proving (Wen-Tsun, 1986; Chou et al., 1996; Yu et al., 2019; Gan et al., 2019), problem synthesis (Alvin et al.",
      "startOffset" : 70,
      "endOffset" : 140
    }, {
      "referenceID" : 11,
      "context" : "works on automated geometry systems focus on geometry theorem proving (Wen-Tsun, 1986; Chou et al., 1996; Yu et al., 2019; Gan et al., 2019), problem synthesis (Alvin et al.",
      "startOffset" : 70,
      "endOffset" : 140
    }, {
      "referenceID" : 0,
      "context" : ", 2019), problem synthesis (Alvin et al., 2014), diagram parsing (Seo et al.",
      "startOffset" : 27,
      "endOffset" : 47
    }, {
      "referenceID" : 29,
      "context" : ", 2014), diagram parsing (Seo et al., 2014), as well as problem formaliza-",
      "startOffset" : 25,
      "endOffset" : 43
    }, {
      "referenceID" : 30,
      "context" : "(Seo et al., 2015) attempt using computer vision and natural language processing techniques to solve geometry problems with problem understanding.",
      "startOffset" : 0,
      "endOffset" : 18
    }, {
      "referenceID" : 2,
      "context" : ", 2019), operational programs (Amini et al., 2019) and expression trees (Wang et al.",
      "startOffset" : 30,
      "endOffset" : 50
    }, {
      "referenceID" : 21,
      "context" : "symbolic language and conducts logical reasoning iteratively to predict the final results (Matsuzaki et al., 2017; Roy and Roth, 2018).",
      "startOffset" : 90,
      "endOffset" : 134
    }, {
      "referenceID" : 25,
      "context" : "symbolic language and conducts logical reasoning iteratively to predict the final results (Matsuzaki et al., 2017; Roy and Roth, 2018).",
      "startOffset" : 90,
      "endOffset" : 134
    }, {
      "referenceID" : 12,
      "context" : "Furthermore, inspired by work on semantic parsing (Han and Zhu, 2005; Zhu and Mumford, 2006; Tu et al., 2014), we",
      "startOffset" : 50,
      "endOffset" : 109
    }, {
      "referenceID" : 39,
      "context" : "Furthermore, inspired by work on semantic parsing (Han and Zhu, 2005; Zhu and Mumford, 2006; Tu et al., 2014), we",
      "startOffset" : 50,
      "endOffset" : 109
    }, {
      "referenceID" : 33,
      "context" : "Furthermore, inspired by work on semantic parsing (Han and Zhu, 2005; Zhu and Mumford, 2006; Tu et al., 2014), we",
      "startOffset" : 50,
      "endOffset" : 109
    }, {
      "referenceID" : 30,
      "context" : "For instance, the GEOS dataset (Seo et al., 2015) only contains 186 SAT problems.",
      "startOffset" : 31,
      "endOffset" : 49
    }, {
      "referenceID" : 27,
      "context" : "Although there are 1,406 problems in GEOS++ (Sachan et al., 2017), this dataset has",
      "startOffset" : 44,
      "endOffset" : 65
    }, {
      "referenceID" : 1,
      "context" : "6777 Dataset #qa #word #shape #goal #var grade operator type GeoShader (Alvin et al., 2017) 102 / 4 1 1 6-10 {+, −, ×, ÷, 2(2), √ 2} GEOS (Seo et al.",
      "startOffset" : 71,
      "endOffset" : 91
    }, {
      "referenceID" : 30,
      "context" : ", 2017) 102 / 4 1 1 6-10 {+, −, ×, ÷, 2(2), √ 2} GEOS (Seo et al., 2015) 186 4,343 4 3 1 6-10 {+, −, ×, ÷, 2(2), √ 2} GEOS++ (Sachan et al.",
      "startOffset" : 54,
      "endOffset" : 72
    }, {
      "referenceID" : 27,
      "context" : ", 2015) 186 4,343 4 3 1 6-10 {+, −, ×, ÷, 2(2), √ 2} GEOS++ (Sachan et al., 2017) 1,406 / 4 3 1 6-10 {+, −, ×, ÷, 2(2), √ 2} GEOS-OS (Sachan and Xing, 2017) 2,235 / 4 3 1 6-10 {+, −, ×, ÷, 2(2), √ 2} Geometry3K (ours) 3,002 36,736 6 4 3 6-12 {+, −, ×, ÷, 2(2), √ 2, sin, cos, tan}",
      "startOffset" : 60,
      "endOffset" : 81
    }, {
      "referenceID" : 28,
      "context" : ", 2017) 1,406 / 4 3 1 6-10 {+, −, ×, ÷, 2(2), √ 2} GEOS-OS (Sachan and Xing, 2017) 2,235 / 4 3 1 6-10 {+, −, ×, ÷, 2(2), √ 2} Geometry3K (ours) 3,002 36,736 6 4 3 6-12 {+, −, ×, ÷, 2(2), √ 2, sin, cos, tan}",
      "startOffset" : 59,
      "endOffset" : 82
    }, {
      "referenceID" : 32,
      "context" : "sequence (Seq2Seq) learning tasks like machine translation (Sutskever et al., 2014; Vaswani et al., 2017; Devlin et al., 2018).",
      "startOffset" : 59,
      "endOffset" : 126
    }, {
      "referenceID" : 34,
      "context" : "sequence (Seq2Seq) learning tasks like machine translation (Sutskever et al., 2014; Vaswani et al., 2017; Devlin et al., 2018).",
      "startOffset" : 59,
      "endOffset" : 126
    }, {
      "referenceID" : 9,
      "context" : "sequence (Seq2Seq) learning tasks like machine translation (Sutskever et al., 2014; Vaswani et al., 2017; Devlin et al., 2018).",
      "startOffset" : 59,
      "endOffset" : 126
    }, {
      "referenceID" : 17,
      "context" : "Inspired by previous works (Koo et al., 2008; Seo et al., 2015; Bansal et al., 2014) that indicate the rule-based parsing method is able to obtain precise parsing results, we apply this approach with regular expressions to perform text parsing.",
      "startOffset" : 27,
      "endOffset" : 84
    }, {
      "referenceID" : 30,
      "context" : "Inspired by previous works (Koo et al., 2008; Seo et al., 2015; Bansal et al., 2014) that indicate the rule-based parsing method is able to obtain precise parsing results, we apply this approach with regular expressions to perform text parsing.",
      "startOffset" : 27,
      "endOffset" : 84
    }, {
      "referenceID" : 4,
      "context" : "Inspired by previous works (Koo et al., 2008; Seo et al., 2015; Bansal et al., 2014) that indicate the rule-based parsing method is able to obtain precise parsing results, we apply this approach with regular expressions to perform text parsing.",
      "startOffset" : 27,
      "endOffset" : 84
    }, {
      "referenceID" : 18,
      "context" : "We also achieve a semantic text parser using BART (Lewis et al., 2020), one of the state-of-the-art sequence learning models for comparison.",
      "startOffset" : 50,
      "endOffset" : 70
    }, {
      "referenceID" : 31,
      "context" : "The diagram parser first applies Hough Transformation (Shapiro and Stockman, 2001) to extract geometry primitives (points, lines, arcs, and circles), following (Seo et al.",
      "startOffset" : 54,
      "endOffset" : 82
    }, {
      "referenceID" : 30,
      "context" : "The diagram parser first applies Hough Transformation (Shapiro and Stockman, 2001) to extract geometry primitives (points, lines, arcs, and circles), following (Seo et al., 2015).",
      "startOffset" : 160,
      "endOffset" : 178
    }, {
      "referenceID" : 19,
      "context" : "Then the diagram symbols and text regions are extracted through a strong object detector RetinaNet (Lin et al., 2017), and the",
      "startOffset" : 99,
      "endOffset" : 117
    }, {
      "referenceID" : 30,
      "context" : "Unlike existing methods (Seo et al., 2015; Sachan et al., 2017; Alvin et al., 2017; Sachan et al., 2020), Inter-GPS achieves the explicit symbolic reasoning",
      "startOffset" : 24,
      "endOffset" : 104
    }, {
      "referenceID" : 27,
      "context" : "Unlike existing methods (Seo et al., 2015; Sachan et al., 2017; Alvin et al., 2017; Sachan et al., 2020), Inter-GPS achieves the explicit symbolic reasoning",
      "startOffset" : 24,
      "endOffset" : 104
    }, {
      "referenceID" : 1,
      "context" : "Unlike existing methods (Seo et al., 2015; Sachan et al., 2017; Alvin et al., 2017; Sachan et al., 2020), Inter-GPS achieves the explicit symbolic reasoning",
      "startOffset" : 24,
      "endOffset" : 104
    }, {
      "referenceID" : 26,
      "context" : "Unlike existing methods (Seo et al., 2015; Sachan et al., 2017; Alvin et al., 2017; Sachan et al., 2020), Inter-GPS achieves the explicit symbolic reasoning",
      "startOffset" : 24,
      "endOffset" : 104
    }, {
      "referenceID" : 20,
      "context" : "Recent studies (Loos et al., 2017; Balunovic et al., 2018) also suggest that neural guided search can speed up the search process.",
      "startOffset" : 15,
      "endOffset" : 58
    }, {
      "referenceID" : 3,
      "context" : "Recent studies (Loos et al., 2017; Balunovic et al., 2018) also suggest that neural guided search can speed up the search process.",
      "startOffset" : 15,
      "endOffset" : 58
    }, {
      "referenceID" : 18,
      "context" : "We formulate the generation task as a sequence-to-sequence (Seq2Seq) problem and use a transformer-based model (Lewis et al., 2020) to generate theorem sequence tokens.",
      "startOffset" : 111,
      "endOffset" : 131
    }, {
      "referenceID" : 30,
      "context" : "We conduct experiments on the Geometry3K and GEOS (Seo et al., 2015) datasets.",
      "startOffset" : 50,
      "endOffset" : 68
    }, {
      "referenceID" : 7,
      "context" : "Q-only only encodes the problem text in the natural language by a bi-directional Gated Recurrent Unit (Bi-GRU) encoder (Cho et al., 2014).",
      "startOffset" : 119,
      "endOffset" : 137
    }, {
      "referenceID" : 13,
      "context" : "the problem diagram by a ResNet-50 encoder (He et al., 2016) as the input.",
      "startOffset" : 43,
      "endOffset" : 60
    }, {
      "referenceID" : 5,
      "context" : "RelNet (Bansal et al., 2017) is implemented for embedding the problem text because it is a strong method for modeling entities and relations.",
      "startOffset" : 7,
      "endOffset" : 28
    }, {
      "referenceID" : 23,
      "context" : "FiLM (Perez et al., 2018) is compared as it achieves effective visual reasoning for answering questions about abstract images.",
      "startOffset" : 5,
      "endOffset" : 25
    }, {
      "referenceID" : 9,
      "context" : "FiLM-BERT uses the BERT encoder (Devlin et al., 2018) instead of the GRU encoder, and FiLM-BART uses the recently proposed BART encoder (Lewis et al.",
      "startOffset" : 32,
      "endOffset" : 53
    }, {
      "referenceID" : 18,
      "context" : ", 2018) instead of the GRU encoder, and FiLM-BART uses the recently proposed BART encoder (Lewis et al., 2020).",
      "startOffset" : 90,
      "endOffset" : 110
    }, {
      "referenceID" : 30,
      "context" : "Method Acc (%) GEOS (Seo et al., 2015) 49 GEOS++ (Seo et al.",
      "startOffset" : 20,
      "endOffset" : 38
    }, {
      "referenceID" : 30,
      "context" : ", 2015) 49 GEOS++ (Seo et al., 2015) 49 GEOS-OS (Sachan and Xing, 2017) 52 GEOS++AXIO (Sachan et al.",
      "startOffset" : 18,
      "endOffset" : 36
    }, {
      "referenceID" : 28,
      "context" : ", 2015) 49 GEOS-OS (Sachan and Xing, 2017) 52 GEOS++AXIO (Sachan et al.",
      "startOffset" : 19,
      "endOffset" : 42
    }, {
      "referenceID" : 27,
      "context" : ", 2015) 49 GEOS-OS (Sachan and Xing, 2017) 52 GEOS++AXIO (Sachan et al., 2017) 55 Inter-GPS (ours) 67",
      "startOffset" : 57,
      "endOffset" : 78
    } ],
    "year" : 2021,
    "abstractText" : "Geometry problem solving has attracted much attention in the NLP community recently. The task is challenging as it requires abstract problem understanding and symbolic reasoning with axiomatic knowledge. However, current datasets are either small in scale or not publicly available. Thus, we construct a new largescale benchmark, Geometry3K, consisting of 3,002 geometry problems with dense annotation in formal language. We further propose a novel geometry solving approach with formal language and symbolic reasoning, called Interpretable Geometry Problem Solver (InterGPS). Inter-GPS first parses the problem text and diagram into formal language automatically via rule-based text parsing and neural object detecting, respectively. Unlike implicit learning in existing methods, Inter-GPS incorporates theorem knowledge as conditional rules and performs symbolic reasoning step by step. Also, a theorem predictor is designed to infer the theorem application sequence fed to the symbolic solver for the more efficient and reasonable searching path. Extensive experiments on the Geometry3K and GEOS datasets demonstrate that Inter-GPS achieves significant improvements over existing methods. 1",
    "creator" : "LaTeX with hyperref"
  }
}