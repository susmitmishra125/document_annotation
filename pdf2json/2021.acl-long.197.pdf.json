{
  "name" : "2021.acl-long.197.pdf",
  "metadata" : {
    "source" : "META",
    "title" : "Self-Guided Contrastive Learning for BERT Sentence Representations",
    "authors" : [ "Taeuk Kim", "Kang Min Yoo", "Sang-goo Lee" ],
    "emails" : [ "taeuk@europa.snu.ac.kr,", "sglee@europa.snu.ac.kr,", "kangmin.yoo@navercorp.com" ],
    "sections" : [ {
      "heading" : null,
      "text" : "Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics and the 11th International Joint Conference on Natural Language Processing, pages 2528–2540\nAugust 1–6, 2021. ©2021 Association for Computational Linguistics\n2528"
    }, {
      "heading" : "1 Introduction",
      "text" : "Pre-trained Transformer (Vaswani et al., 2017) language models such as BERT (Devlin et al., 2019) and RoBERTa (Liu et al., 2019) have been integral to achieving recent improvements in natural language understanding. However, it is not straightforward to directly utilize these models for sentencelevel tasks, as they are basically pre-trained to focus on predicting (sub)word tokens given context. The most typical way of converting the models into sentence encoders is to fine-tune them with supervision from a downstream task. In the process, as initially proposed by Devlin et al. (2019), a pre-defined token’s (a.k.a. [CLS]) embedding from the last layer of the encoder is deemed as the representation of an input sequence. This simple but effective method is possible because, during supervised fine-tuning, the [CLS] embedding functions as the only communication gate between the pre-trained encoder\n*This work has been mainly conducted when TK was a research intern at NAVER AI Lab.\nand a task-specific layer, encouraging the [CLS] vector to capture the holistic information.\nOn the other hand, in cases where labeled datasets are unavailable, it is unclear what the best strategy is for deriving sentence embeddings from BERT.1 In practice, previous studies (Reimers and Gurevych, 2019; Li et al., 2020; Hu et al., 2020) reported that naı̈vely (i.e., without any processing) leveraging the [CLS] embedding as a sentence representation, as is the case of supervised finetuning, results in disappointing outcomes. Currently, the most common rule of thumb for building BERT sentence embeddings without supervision is to apply mean pooling on the last layer(s) of BERT.\n1In this paper, the term BERT has two meanings: Narrowly, the BERT model itself, and more broadly, pre-trained Transformer encoders that share the same spirit with BERT.\nYet, this approach can be still sub-optimal. In a preliminary experiment, we constructed sentence embeddings by employing various combinations of different BERT layers and pooling methods, and tested them on the Semantic Textual Similarity (STS) benchmark dataset (Cer et al., 2017).2 We discovered that BERT(-base)’s performance, measured in Spearman correlation (× 100), can range from as low as 16.71 ([CLS], the 10th layer) to 63.19 (max pooling, the 2nd layer) depending on the selected layer and pooling method (see Figure 1). This result suggests that the current practice of building BERT sentence vectors is not solid enough, and that there is room to bring out more of BERT’s expressiveness.\nIn this work, we propose a contrastive learning method that makes use of a newly proposed selfguidance mechanism to tackle the aforementioned problem. The core idea is to recycle intermediate BERT hidden representations as positive samples to which the final sentence embedding should be close. As our method does not require data augmentation, which is essential in most recent contrastive learning frameworks, it is much simpler and easier to use than existing methods (Fang and Xie, 2020; Xie et al., 2020). Moreover, we customize the NTXent loss (Chen et al., 2020), a contrastive learning objective widely used in computer vision, for better sentence representation learning with BERT. We demonstrate that our approach outperforms competitive baselines designed for building BERT sentence vectors (Li et al., 2020; Wang and Kuo, 2020) in various environments. With comprehensive analyses, we also show that our method is more computationally efficient than the baselines at inference in addition to being more robust to domain shifts."
    }, {
      "heading" : "2 Related Work",
      "text" : "Contrastive Representation Learning. Contrastive learning has been long considered as effective in constructing meaningful representations. For instance, Mikolov et al. (2013) propose to learn word embeddings by framing words nearby a target word as positive samples while others as negative. Logeswaran and Lee (2018) generalize the approach of Mikolov et al. (2013) for sentence representation learning. More recently, several studies (Fang and Xie, 2020; Giorgi et al., 2020; Wu et al., 2020) suggest to utilize contrastive learning\n2In the experiment, we employ the settings identical with ones used in Chapter 4. Refer to Chapter 4 for more details.\nfor training Transformer models, similar to our approach. However, they generally require data augmentation techniques, e.g., back-translation (Sennrich et al., 2016), or prior knowledge on training data such as order information, while our method does not. Furthermore, we focus on revising BERT for computing better sentence embeddings rather than training a language model from scratch.\nOn the other hand, contrastive learning has been also receiving much attention from the computer vision community (Chen et al. (2020); Chen and He (2020); He et al. (2020), inter alia). We improve the framework of Chen et al. (2020) by optimizing its learning objective for pre-trained Transformerbased sentence representation learning. For extensive surveys on contrastive learning, refer to Le-Khac et al. (2020) and Jaiswal et al. (2020).\nFine-tuning BERT with Supervision. It is not always trivial to fine-tune pre-trained Transformer models of gigantic size with success, especially when the number of target domain data is limited (Mosbach et al., 2020). To mitigate this training instability problem, several approaches (Aghajanyan et al., 2020; Jiang et al., 2020; Zhu et al., 2020) have been recently proposed. In particular, Gunel et al. (2021) propose to exploit contrastive learning as an auxiliary training objective during fine-tuning BERT with supervision from target tasks. In contrast, we deal with the problem of adjusting BERT when such supervision is not available.\nSentence Embeddings from BERT. Since BERT and its variants are originally designed to be fine-tuned on each downstream task to attain their optimal performance, it remains ambiguous how best to extract general sentence representations from them, which are broadly applicable across diverse sentence-related tasks. Following Conneau et al. (2017), Reimers and Gurevych (2019) (SBERT) propose to compute sentence embeddings by conducting mean pooling on the last layer of BERT and then fine-tuning the pooled vectors on the natural language inference (NLI) datasets (Bowman et al., 2015; Williams et al., 2018). Meanwhile, some other studies concentrate on more effectively leveraging the knowledge embedded in BERT to construct sentence embeddings without supervision. Specifically, Wang and Kuo (2020) propose a pooling method based on linear algebraic algorithms to draw sentence vectors from BERT’s intermediate layers. Li et al. (2020) suggest to learn a\nmapping from the average of the embeddings obtained from the last two layers of BERT to a spherical Gaussian distribution using a flow model, and to leverage the redistributed embeddings in place of the original BERT representations. We follow the setting of Li et al. (2020) in that we only utilize plain text during training, however, unlike all the others that rely on a certain pooling method even after training, we directly refine BERT so that the typical [CLS] vector can function as a sentence embedding. Note also that there exists concurrent work (Carlsson et al., 2021; Gao et al., 2021; Wang et al., 2021) whose motivation is analogous to ours, attempting to improve BERT sentence embeddings in an unsupervised fashion."
    }, {
      "heading" : "3 Method",
      "text" : "As BERT mostly requires some type of adaptation to be properly applied to a task of interest, it might not be desirable to derive sentence embeddings directly from BERT without fine-tuning. While Reimers and Gurevych (2019) attempt to alleviate this problem with typical supervised fine-tuning, we restrict ourselves to revising BERT in an unsupervised manner, meaning that our method only demands a bunch of raw sentences for training.\nAmong possible unsupervised learning strategies, we concentrate on contrastive learning which can inherently motivate BERT to be aware of similarities between different sentence embeddings. Considering that sentence vectors are widely used in computing the similarity of two sentences, the inductive bias introduced by contrastive learning can be helpful for BERT to work well on such tasks. The problem is that sentence-level contrastive learning usually requires data augmentation (Fang and Xie, 2020) or prior knowledge on training data, e.g., order information (Logeswaran and Lee, 2018), to make plausible positive/negative samples. We attempt to circumvent these constraints by utilizing the hidden representations of BERT, which are readily accessible, as samples in the embedding space."
    }, {
      "heading" : "3.1 Contrastive Learning with Self-Guidance",
      "text" : "We aim at developing a contrastive learning method that is free from external procedure such as data augmentation. A possible solution is to leverage (virtual) adversarial training (Miyato et al., 2018) in the embedding space. However, there is no assurance that the semantics of a sentence embedding would remain unchanged when it is added with a\nrandom noise. As an alternative, we propose to utilize the hidden representations from BERT’s intermediate layers, which are conceptually guaranteed to represent corresponding sentences, as pivots that BERT sentence vectors should be close to or be away from. We call our method as self-guided contrastive learning since we exploit internal training signals made by BERT itself to fine-tune it.\nWe describe our training framework in Figure 2. First, we clone BERT into two copies, BERTF (fixed) and BERTT (tuned) respectively. BERTF is fixed during training to provide a training signal while BERTT is fine-tuned to construct better sentence embeddings. The reason why we differentiate BERTF from BERTT is that we want to prevent the training signal computed by BERTF from being degenerated as the training procedure continues, which often happens when BERTF = BERTT . This design decision also reflects our philosophy that our goal is to dynamically conflate the knowledge stored in BERT’s different layers to produce sentence embeddings, rather than introducing new information via extra training. Note that in our setting, the [CLS] vector from the last layer of BERTT , i.e., ci, is regarded as the final sentence embedding we aim to optimize/utilize during/after fine-tuning.\nSecond, given b sentences in a mini-batch, say s1, s2, · · · , sb, we feed each sentence si into BERTF and compute token-level hidden representations Hi,k ∈ Rlen(si)×d:\n[Hi,0;Hi,1; · · · ;Hi,k; · · · ;Hi,l] = BERTF (si),\nwhere 0 ≤ k ≤ l (0: the non-contextualized layer), l is the number of hidden layers in BERT, len(si) is the length of the tokenized sentence, and d is the size of BERT’s hidden representations. Then, we apply a pooling function p to Hi,k for deriving diverse sentence-level views hi,k ∈ Rd from all layers, i.e., hi,k = p(Hi,k). Finally, we choose the final view to be utilized by applying a sampling function σ:\nhi = σ({hi,k|0 ≤ k ≤ l}).\nAs we have no specific constraints in defining p and σ, we employ max pooling as p and a uniform sampler as σ for simplicity, unless otherwise stated. This simple choice for the sampler implies that each hi,k has the same importance, which is persuasive considering it is known that different BERT layers are specialized at capturing disparate linguistic concepts (Jawahar et al., 2019).3\nThird, we compute our sentence embedding ci for si as follows:\nci = BERTT (si)[CLS],\nwhere BERT(·)[CLS] corresponds to the [CLS] vector obtained from the last layer of BERT. Next, we collect the set of the computed vectors into X = {x|x ∈ {ci} ∪ {hi}}, and for all xm ∈ X, we compute the NT-Xent loss (Chen et al., 2020):\nLbasem = − log (φ(xm, µ(xm))/Z), where φ(u,v) = exp(g(f(u), f(v))/τ)\nand Z = ∑2b\nn=1,n6=m φ(xm,xn).\nNote that τ is a temperature hyperparameter, f is a projection head consisting of MLP layers,4 g(u,v) = u · v/‖u‖‖v‖ is the cosine similarity function, and µ(·) is the matching function defined as follows,\nµ(x) = { hi if x is equal to ci. ci if x is equal to hi.\nLastly, we sum all Lbasem divided by 2b, and add a regularizer Lreg = ‖BERTF − BERTT ‖22 to prevent BERTT from being too distant from BERTF .5\n3We can also potentially make use of another sampler functions to inject our bias or prior knowledge on target tasks.\n4We employ a two-layered MLP whose hidden size is 4096. Each linear layer in the MLP is followed by a GELU function.\n5To be specific, Lreg is the square of the L2 norm of the difference between BERTF and BERTT . As shown in Figure 2, we also freeze the 0th layer of BERTT for stable learning.\nAs a result, the final loss Lbase is:\nLbase = 1\n2b 2b∑ m=1 Lbasem + λ · Lreg,\nwhere the coefficient λ is a hyperparameter. To summarize, our method refines BERT so that the sentence embedding ci has a higher similarity with hi, which is another representation for the sentence si, in the subspace projected by f while being relatively dissimilar with cj,j 6=i and hj,j 6=i. After training is completed, we remove all the components except BERTT and simply use ci as the final sentence representation."
    }, {
      "heading" : "3.2 Learning Objective Optimization",
      "text" : "In Section 3.1, we relied on a simple variation of the general NT-Xent loss, which is composed of four factors. Given sentence si and sj without loss of generality, the factors are as follows (Figure 3):\n(1) ci →← hi (or cj →← hj): The main component that mirrors our core motivation that a BERT sentence vector (ci) should be consistent with intermediate views (hi) from BERT. (2) ci ←→ cj : A factor that forces sentence embeddings (ci, cj) to be distant from each other. (3) ci ←→ hj (or cj ←→ hi): An element that makes ci being inconsistent with views for other sentences (hj). (4) hi ←→ hj : A factor that causes a discrepancy between views of different sentences (hi, hj).\nEven though all the four factors play a certain role, some components may be useless or even cause a negative influence on our goal. For instance, Chen and He (2020) have recently reported that in image representation learning, only (1) is vital while others are nonessential. Likewise, we customize the\ntraining loss with three major modifications so that it can be more well-suited for our purpose.\nFirst, as our aim is to improve ci with the aid of hi, we re-define our loss focusing more on ci rather than considering ci and hi as equivalent entities:\nLopt1i = − log (φ(ci,hi)/Ẑ), where Ẑ = ∑b j=1,j 6=i φ(ci, cj) + ∑b j=1 φ(ci,hj).\nIn other words, hi only functions as points that ci is encouraged to be close to or away from, and is not deemed as targets to be optimized. This revision naturally results in removing (4). Furthermore, we discover that (2) is also insignificant for improving performance, and thus derive Lopt2i :\nLopt2i = − log(φ(ci,hi)/ ∑b j=1 φ(ci,hj)).\nLastly, we diversify signals from (1) and (3) by allowing multiple views {hi,k} to guide ci:\nLopt3i,k = − log φ(ci,hi,k) φ(ci,hi,k)+ ∑b m=1,m 6=i ∑l n=0 φ(ci,hm,n) .\nWe expect with this refinement that the learning objective can provide more precise and fruitful training signals by considering additional (and freely available) samples being provided with. The final form of our optimized loss is:\nLopt = 1\nb(l + 1) b∑ i=1 l∑ k=0 Lopt3i,k + λ · L reg.\nIn Section 5.1, we show the decisions made in this section contribute to improvements in performance."
    }, {
      "heading" : "4 Experiments",
      "text" : ""
    }, {
      "heading" : "4.1 General Configurations",
      "text" : "In terms of pre-trained encoders, we leverage BERT (Devlin et al., 2019) for English datasets and MBERT, which is a multilingual variant of BERT, for multilingual datasets. We also employ RoBERTa (Liu et al., 2019) and SBERT (Reimers and Gurevych, 2019) in some cases to evaluate the generalizability of tested methods. We use the suffixes ‘-base’ and ‘-large’ to distinguish small and large models. Every trainable model’s performance is reported as the average of 8 separate runs to reduce randomness. Hyperparameters are optimized on the STS-B validation set using BERTbase and utilized across different models. See Table 8 in Appendix A.1 for details. Our implementation is based on the HuggingFace’s Transformers (Wolf et al., 2019) and SBERT (Reimers and Gurevych, 2019) library, and publicly available at https://github.com/galsang/SG-BERT."
    }, {
      "heading" : "4.2 Semantic Textual Similarity Tasks",
      "text" : "We first evaluate our method and baselines on Semantic Textual Similarity (STS) tasks. Given two sentences, we derive their similarity score by computing the cosine similarity of their embeddings.\nDatasets and Metrics. Following the literature, we evaluate models on 7 datasets in total, that is, STS-B (Cer et al., 2017), SICK-R (Marelli et al., 2014), and STS12-16 (Agirre et al., 2012, 2013, 2014, 2015, 2016). These datasets contain pairs of two sentences, whose similarity scores are labeled from 0 to 5. The relevance between gold annotations and the scores predicted by sentence vectors is measured in Spearman correlation (× 100).\nBaselines and Model Specification. We first prepare two non-BERT approaches as baselines, i.e., Glove (Pennington et al., 2014) mean embeddings and Universal Sentence Encoder (USE; Cer et al. (2018)). In addition, various methods for BERT sentence embeddings that do not require supervision are also introduced as baselines:\n• CLS token embedding: It regards the [CLS] vector from the last layer of BERT as a sentence representation. • Mean pooling: This method conducts mean pooling on the last layer of BERT and use the output as a sentence embedding. • WK pooling: This follows the method of Wang and Kuo (2020), which exploits QR decomposition and extra techniques to derive meaningful sentence vectors from BERT. • Flow: This is BERT-flow proposed by Li et al. (2020), which is a flow-based model that maps the vectors made by taking mean pooling on the last two layers of BERT to a Gaussian space.6 • Contrastive (BT): Following Fang and Xie (2020), we revise BERT with contrastive learning. However, this method relies on back-translation to obtain positive samples, unlike ours. Details about this baseline are specified in Appendix A.2.\nWe make use of plain sentences from STS-B to fine-tune BERT using our approach, identical with Flow.7 We name the BERT instances trained with our self-guided method as Contrastive (SG) and\n6We restrictively utilize this model, as we find it difficult to exactly reproduce the model’s result with its official code.\n7For training, Li et al. (2020) utilize the concatenation of the STS-B training, validation, and test set (without gold annotations). We also follow the same setting for a fair comparison.\nContrastive (SG-OPT), which utilize Lbase and Lopt in Section 3 respectively.\nResults. We report the performance of different approaches on STS tasks in Table 1 and Table 11 (Appendix A.6). From the results, we confirm the fact that our methods (SG and SG-OPT) mostly outperform other baselines in a variety of experimental settings. As reported in earlier studies, the naı̈ve [CLS] embedding and mean pooling are turned out to be inferior to sophisticated methods. To our surprise, WK pooling’s performance is even lower than that of mean pooling in most cases, and the only exception is when WK pooling is applied to SBERT-base. Flow shows its strength outperforming the simple strategies. Nevertheless, its performance is shown to be worse than that of our methods (although some exceptions exist in the case of SBERT-large). Note that contrastive learning becomes much more competitive when it is combined with our self-guidance algorithm rather than back-translation. It is also worth mentioning"
    }, {
      "heading" : "Models Spanish",
      "text" : "that the optimized version of our method (SG-OPT) generally shows better performance than the basic one (SG), proving the efficacy of learning objective optimization (Section 3.2). To conclude, we demonstrate that our self-guided contrastive learning is effective in improving the quality of BERT sentence embeddings when tested on STS tasks."
    }, {
      "heading" : "4.3 Multilingual STS Tasks",
      "text" : "We expand our experiments to multilingual settings by utilizing MBERT and cross-lingual zero-shot transfer. Specifically, we refine MBERT using only"
    }, {
      "heading" : "Models Arabic Spanish English(Track 1) (Track 3) (Track 5) Baselines",
      "text" : "English data and test it on datasets written in other languages. As in Section 4.2, we use the English STS-B for training. We consider two datasets for evaluation: (1) SemEval-2014 Task 10 (Spanish; Agirre et al. (2014)) and (2) SemEval-2017 Task 1 (Arabic, Spanish, and English; Cer et al. (2017)). Performance is measured in Pearson correlation (× 100) for a fair comparison with previous work.\nFrom Table 2, we see that MBERT with mean pooling already outperforms the best system (at the time of the competition was held) on SemEval2014 and that our method further boosts the model’s performance. In contrast, in the case of SemEval-2017 (Table 3), MBERT with mean pooling even fails to beat the strong Cosine baseline.8 However, MBERT becomes capable of outperforming (in English/Spanish) or being comparable with (Arabic) the baseline by adopting our algorithm. We observe that while cross-lingual transfer using MBERT looks promising for the languages analogous to English (e.g., Spanish), its effectiveness may shrink on distant languages (e.g., Arabic). Compared against the best system which is trained on task-specific data, MBERT shows reasonable performance considering that it is never exposed to any labeled STS datasets. In summary, we demonstrate that MBERT fine-tuned with our method has a potential to be used as a simple but effective tool for multilingual (especially European) STS tasks."
    }, {
      "heading" : "4.4 SentEval and Supervised Fine-tuning",
      "text" : "We also evaluate BERT sentence vectors using the SentEval (Conneau and Kiela, 2018) toolkit. Given sentence embeddings, SentEval trains linear classifiers on top of them and estimates the quality of the vectors via their performance (accuracy) on down-\n8The Cosine baseline computes its score as the cosine similarity of binary sentence vectors with each dimension representing whether an individual word appears in a sentence.\nstream tasks. Among available tasks, we employ 7: MR, CR, SUBJ, MPQA, SST2, TREC, MRPC.9\nIn Table 4, we compare our method (SG-OPT) with two baselines.10 We find that our method is helpful over usual mean pooling in improving the performance of BERT-like models on SentEval. SG-OPT also outperforms WK pooling on BERTbase/large while being comparable on SBERT-base. From the results, we conjecture that self-guided contrastive learning and SBERT training suggest a similar inductive bias in a sense, as the benefit we earn by revising SBERT with our method is relatively lower than the gain we obtain when fine-tuning BERT. Meanwhile, it seems that WK pooling provides an orthogonal contribution that is effective in the focused case, i.e., SBERT-base.\nIn addition, we examine how our algorithm impacts on supervised fine-tuning of BERT, although it is not the main concern of this work. Briefly reporting, we identify that the original BERT(-base) and one tuned with SG-OPT show comparable performance on the GLUE (Wang et al., 2019) validation set, implying that our method does not influence much on BERT’s supervised fine-tuning. We refer readers to Appendix A.4 for more details."
    }, {
      "heading" : "5 Analysis",
      "text" : "We here further investigate the working mechanism of our method with supplementary experiments. All the experiments conducted in this section follow the configurations stipulated in Section 4.1 and 4.2.\n9Refer to Conneau and Kiela (2018) for each task’s spec. 10We focus on reporting our own results as we discovered that the toolkit’s outcomes can be fluctuating depending on its configuration (we list our settings in Appendix A.3). We also restrict ourselves to evaluating SG-OPT for simplicity, as SG-OPT consistently showed better performance than other contrastive methods in previous experiments."
    }, {
      "heading" : "Models STS Tasks (Avg.) BERT-base",
      "text" : ""
    }, {
      "heading" : "5.1 Ablation Study",
      "text" : "We conduct an ablation study to justify the decisions made in optimizing our algorithm. To this end, we evaluate each possible variant on the test sets of STS tasks. From Table 5, we confirm that all our modifications to the NT-Xent loss contribute to improvements in performance. Moreover, we show that correct choices for hyperparameters are important for achieving the optimal performance, and that the projection head (f ) plays a significant role as in Chen et al. (2020)."
    }, {
      "heading" : "5.2 Robustness to Domain Shifts",
      "text" : "Although our method in principle can accept any sentences in training, its performance might be varied with the training data it employs (especially depending on whether the training and test data share the same domain). To explore this issue, we apply SG-OPT on BERT-base by leveraging the mix of NLI datasets (Bowman et al., 2015; Williams et al., 2018) instead of STS-B, and observe the difference. From Figure 4, we confirm the fact\nthat no matter which test set is utilized (STS-B or all the seven STS tasks), our method clearly outperforms Flow in every case, showing its relative robustness to domain shifts. SG-OPT only loses 1.83 (on the STS-B test set) and 1.63 (on average when applied to all the STS tasks) points respectively when trained with NLI rather than STS-B, while Flow suffers from the considerable losses of 12.16 and 4.19 for each case. Note, however, that follow-up experiments in more diverse conditions might be desired as future work, as the NLI dataset inherently shares some similarities with STS tasks."
    }, {
      "heading" : "5.3 Computational Efficiency",
      "text" : "In this part, we compare the computational efficiency of our method to that of other baselines. For each algorithm, we measure the time elapsed during training (if required) and inference when tested on STS-B. All methods are run on the same machine (an Intel Xeon CPU E5-2620 v4 @ 2.10GHz and a Titan Xp GPU) using batch size 16. The experimental results specified in Table 6 show that although our method demands a moderate amount of time (< 8 min.) for training, it is the most efficient at inference, since our method is free from any post-processing such as pooling once training is completed."
    }, {
      "heading" : "5.4 Representation Visualization",
      "text" : "We visualize a few variants of BERT sentence representations to grasp an intuition on why our method is effective in improving performance. Specifically, we sample 20 positive pairs (red, whose similarity scores are 5) and 20 negative pairs (blue, whose scores are 0) from the STS-B validation set. Then we compute their vectors and draw them on the 2D space with the aid of t-SNE. In Figure 5, we confirm that our SG-OPT encourages BERT sentence embeddings to be more well-aligned with their positive pairs while still being relatively far from their negative pairs. We also visualize embeddings from SBERT (Figure 6 in Appendix A.5), and identify that our approach and the supervised fine-tuning\nBERT-base ([CLS])"
    }, {
      "heading" : "BERT-base + Contrastive (SG-OPT)",
      "text" : "used in SBERT provide a similar effect, making the resulting embeddings more suitable for calculating correct similarities between them."
    }, {
      "heading" : "6 Discussion",
      "text" : "In this section, we discuss a few weaknesses of our method in its current form and look into some possible avenues for future work.\nFirst, while defining the proposed method in Section 3, we have made decisions on some parts without much consideration about their optimality, prioritizing simplicity instead. For instance, although we proposed utilizing all the intermediate layers of BERT and max pooling in a normal set-\nting (indeed, it worked pretty well for most cases), a specific subset of the layers or another pooling method might bring better performance in a particular environment, as we observed in Section 4.4 that we could achieve higher numbers by employing mean pooling and excluding lower layers in the case of SentEval (refer to Appendix A.3 for details). Therefore, in future work, it is encouraged to develop a systematic way of making more optimized design choices in specifying our method by considering the characteristics of target tasks.\nSecond, we expect that the effectiveness of contrastive learning in revising BERT can be improved further by properly combining different techniques developed for it. As an initial attempt towards this direction, we conduct an extra experiment where we test the ensemble of back-translation and our self-guidance algorithm by inserting the original sentence into BERTT and its back-translation into BERTF when running our framework. In Table 7, we show that the fusion of the two techniques generally results in better performance, shedding some light on our future research direction."
    }, {
      "heading" : "7 Conclusion",
      "text" : "In this paper, we have proposed a contrastive learning method with self-guidance for improving BERT sentence embeddings. Through extensive experiments, we have demonstrated that our method can enjoy the benefit of contrastive learning without relying on external procedures such as data augmentation or back-translation, succeeding in generating higher-quality sentence representations compared to competitive baselines. Furthermore, our method is efficient at inference because it does not require any post-processing once its training is completed, and is relatively robust to domain shifts."
    }, {
      "heading" : "Acknowledgments",
      "text" : "We would like to thank anonymous reviewers for their fruitful feedback. We are also grateful to JungWoo Ha, Sang-Woo Lee, Gyuwan Kim, and other members in NAVER AI Lab in addition to Reinald Kim Amplayo for their insightful comments."
    }, {
      "heading" : "A Appendices",
      "text" : ""
    }, {
      "heading" : "A.1 Hyperparameters",
      "text" : ""
    }, {
      "heading" : "A.2 Specification on Contrastive (BT)",
      "text" : "This baseline is identical with our Contrastive (SG) model, except that it utilizes back-translation to generate positive samples. To be specific, English sentences in the training set are traslated into German sentences using the WMT’19 EnglishGerman translator provided by Ng et al. (2019), and then the translated German sentences are backtranslated into English with the aid of the WMT’19 German-English model also offered by Ng et al. (2019). We utilize beam search during decoding with the beam size 100, which is relatively large, since we want generated sentences to be more diverse while grammatically correct at the same time. Note that the contrastive (BT) model is trained with the NT-Xent loss (Chen et al., 2020), unlike CERT (Fang and Xie, 2020) which leverages the MoCo training objective (He et al., 2020)."
    }, {
      "heading" : "A.3 SentEval Configurations",
      "text" : "In Table 9, we stipulate the hyperparameters of the SentEval toolkit used in our experiment. Additionally, we specify some minor modifications applied on our contrastive method (SG-OPT). First, we use the portion of the concatenation of SNLI (Bowman et al., 2015) and MNLI (Williams et al., 2018) datasets as the training data instead of STS-B. Second, we do not leverage the first several layers of PLMs when making positive samples, similar to\nWang and Kuo (2020), and utilize mean pooling instead of max pooling."
    }, {
      "heading" : "A.4 GLUE Experiments",
      "text" : "Models QNLI SST2 COLA MRPC RTE\nBERT-base 90.97±0.49 91.08±0.73 56.63±3.82 87.09±1.87 62.50±2.77 + SG-OPT 91.28±0.28 91.68±0.41 56.36±3.98 86.96±1.11 62.75±3.91\nTable 10: Experimental results on a portion of the GLUE validation set.\nWe here investigate the impact of our method on typical supervised fine-tuning of BERT models. Concretely, we compare the original BERT with one fine-tuned using our SG-OPT method on the GLUE (Wang et al., 2019) benchmark. Note that we use the first 10% of the GLUE validation set as the real validation set and the last 90% as the test set, as the benchmark does not officially provide its test data. We report experimental results tested on 5 sub-tasks in Table 10. The results show that our method brings performance improvements for 3 tasks (QNLI, SST2, and RTE). However, it seems that SG-OPT does not influence much on supervised fine-tuning results, considering that the absolute performance gap between the two models is not significant. We leave more analysis on this part as future work.\nA.5 Representation Visualization (SBERT)"
    }, {
      "heading" : "SBERT-base",
      "text" : ""
    }, {
      "heading" : "A.6 RoBERTa’s Performance on STS Tasks",
      "text" : "In Table 11, we additionally report the performance of sentence embeddings extracted from RoBERTa using different methods. Our methods, SG and SGOPT, demonstrate their competitive performance\noverall. Note that contrastive learning with backtranslation (BT) also shows its remarkable performance in the case of RoBERTa-base."
    } ],
    "references" : [ {
      "title" : "Better fine-tuning by reducing representational collapse",
      "author" : [ "Armen Aghajanyan", "Akshat Shrivastava", "Anchit Gupta", "Naman Goyal", "Luke Zettlemoyer", "Sonal Gupta." ],
      "venue" : "arXiv preprint arXiv:2008.03156.",
      "citeRegEx" : "Aghajanyan et al\\.,? 2020",
      "shortCiteRegEx" : "Aghajanyan et al\\.",
      "year" : 2020
    }, {
      "title" : "Semeval-2014 task 10: Multilingual semantic textual similarity",
      "author" : [ "Eneko Agirre", "Carmen Banea", "Claire Cardie", "Daniel Cer", "Mona Diab", "Aitor Gonzalez-Agirre", "Weiwei Guo", "Rada Mihalcea", "German Rigau", "Janyce Wiebe." ],
      "venue" : "SemEval.",
      "citeRegEx" : "Agirre et al\\.,? 2014",
      "shortCiteRegEx" : "Agirre et al\\.",
      "year" : 2014
    }, {
      "title" : "SemEval-2016 task 1: Semantic textual similarity, monolingual and cross-lingual evaluation",
      "author" : [ "Eneko Agirre", "Carmen Banea", "Daniel Cer", "Mona Diab", "Aitor Gonzalez-Agirre", "Rada Mihalcea", "German Rigau", "Janyce Wiebe." ],
      "venue" : "SemEval.",
      "citeRegEx" : "Agirre et al\\.,? 2016",
      "shortCiteRegEx" : "Agirre et al\\.",
      "year" : 2016
    }, {
      "title" : "SemEval-2012 task 6: A pilot on semantic textual similarity",
      "author" : [ "Eneko Agirre", "Daniel Cer", "Mona Diab", "Aitor Gonzalez-Agirre." ],
      "venue" : "SemEval.",
      "citeRegEx" : "Agirre et al\\.,? 2012",
      "shortCiteRegEx" : "Agirre et al\\.",
      "year" : 2012
    }, {
      "title" : "SEM 2013 shared task: Semantic textual similarity",
      "author" : [ "Eneko Agirre", "Daniel Cer", "Mona Diab", "Aitor GonzalezAgirre", "Weiwei Guo." ],
      "venue" : "*SEM.",
      "citeRegEx" : "Agirre et al\\.,? 2013",
      "shortCiteRegEx" : "Agirre et al\\.",
      "year" : 2013
    }, {
      "title" : "A large annotated corpus for learning natural language inference",
      "author" : [ "Samuel Bowman", "Gabor Angeli", "Christopher Potts", "Christopher D Manning." ],
      "venue" : "EMNLP.",
      "citeRegEx" : "Bowman et al\\.,? 2015",
      "shortCiteRegEx" : "Bowman et al\\.",
      "year" : 2015
    }, {
      "title" : "Semantic re-tuning with contrastive tension",
      "author" : [ "Fredrik Carlsson", "Evangelia Gogoulou", "Erik Ylipää", "Amaru Cuba Gyllensten", "Magnus Sahlgren." ],
      "venue" : "ICLR.",
      "citeRegEx" : "Carlsson et al\\.,? 2021",
      "shortCiteRegEx" : "Carlsson et al\\.",
      "year" : 2021
    }, {
      "title" : "SemEval-2017 task 1: Semantic textual similarity multilingual and crosslingual focused evaluation",
      "author" : [ "Daniel Cer", "Mona Diab", "Eneko Agirre", "Iñigo LopezGazpio", "Lucia Specia." ],
      "venue" : "SemEval.",
      "citeRegEx" : "Cer et al\\.,? 2017",
      "shortCiteRegEx" : "Cer et al\\.",
      "year" : 2017
    }, {
      "title" : "A simple framework for contrastive learning of visual representations",
      "author" : [ "Ting Chen", "Simon Kornblith", "Mohammad Norouzi", "Geoffrey Hinton." ],
      "venue" : "ICML.",
      "citeRegEx" : "Chen et al\\.,? 2020",
      "shortCiteRegEx" : "Chen et al\\.",
      "year" : 2020
    }, {
      "title" : "Exploring simple siamese representation learning",
      "author" : [ "Xinlei Chen", "Kaiming He." ],
      "venue" : "arXiv preprint arXiv:2011.10566.",
      "citeRegEx" : "Chen and He.,? 2020",
      "shortCiteRegEx" : "Chen and He.",
      "year" : 2020
    }, {
      "title" : "SentEval: An evaluation toolkit for universal sentence representations",
      "author" : [ "Alexis Conneau", "Douwe Kiela." ],
      "venue" : "LREC.",
      "citeRegEx" : "Conneau and Kiela.,? 2018",
      "shortCiteRegEx" : "Conneau and Kiela.",
      "year" : 2018
    }, {
      "title" : "Supervised learning of universal sentence representations from natural language inference data",
      "author" : [ "Alexis Conneau", "Douwe Kiela", "Holger Schwenk", "Loı̈c Barrault", "Antoine Bordes" ],
      "venue" : null,
      "citeRegEx" : "Conneau et al\\.,? \\Q2017\\E",
      "shortCiteRegEx" : "Conneau et al\\.",
      "year" : 2017
    }, {
      "title" : "BERT: Pre-training of deep bidirectional transformers for language understanding",
      "author" : [ "Jacob Devlin", "Ming-Wei Chang", "Kenton Lee", "Kristina Toutanova." ],
      "venue" : "NAACL.",
      "citeRegEx" : "Devlin et al\\.,? 2019",
      "shortCiteRegEx" : "Devlin et al\\.",
      "year" : 2019
    }, {
      "title" : "Cert: Contrastive self-supervised learning for language understanding",
      "author" : [ "Hongchao Fang", "Pengtao Xie." ],
      "venue" : "arXiv preprint arXiv:2005.12766.",
      "citeRegEx" : "Fang and Xie.,? 2020",
      "shortCiteRegEx" : "Fang and Xie.",
      "year" : 2020
    }, {
      "title" : "Simcse: Simple contrastive learning of sentence embeddings",
      "author" : [ "Tianyu Gao", "Xingcheng Yao", "Danqi Chen." ],
      "venue" : "arXiv preprint arXiv:2104.08821.",
      "citeRegEx" : "Gao et al\\.,? 2021",
      "shortCiteRegEx" : "Gao et al\\.",
      "year" : 2021
    }, {
      "title" : "Declutr: Deep contrastive learning for unsupervised textual representations",
      "author" : [ "John M Giorgi", "Osvald Nitski", "Gary D Bader", "Bo Wang." ],
      "venue" : "arXiv preprint arXiv:2006.03659.",
      "citeRegEx" : "Giorgi et al\\.,? 2020",
      "shortCiteRegEx" : "Giorgi et al\\.",
      "year" : 2020
    }, {
      "title" : "Supervised contrastive learning for pre-trained language model fine-tuning",
      "author" : [ "Beliz Gunel", "Jingfei Du", "Alexis Conneau", "Veselin Stoyanov." ],
      "venue" : "ICLR.",
      "citeRegEx" : "Gunel et al\\.,? 2021",
      "shortCiteRegEx" : "Gunel et al\\.",
      "year" : 2021
    }, {
      "title" : "Momentum contrast for unsupervised visual representation learning",
      "author" : [ "Kaiming He", "Haoqi Fan", "Yuxin Wu", "Saining Xie", "Ross Girshick." ],
      "venue" : "CVPR.",
      "citeRegEx" : "He et al\\.,? 2020",
      "shortCiteRegEx" : "He et al\\.",
      "year" : 2020
    }, {
      "title" : "XTREME: A massively multilingual multitask benchmark for evaluating cross-lingual generalisation",
      "author" : [ "Junjie Hu", "Sebastian Ruder", "Aditya Siddhant", "Graham Neubig", "Orhan Firat", "Melvin Johnson." ],
      "venue" : "ICML.",
      "citeRegEx" : "Hu et al\\.,? 2020",
      "shortCiteRegEx" : "Hu et al\\.",
      "year" : 2020
    }, {
      "title" : "A survey on contrastive self-supervised learning",
      "author" : [ "Ashish Jaiswal", "Ashwin Ramesh Babu", "Mohammad Zaki Zadeh", "Debapriya Banerjee", "Fillia Makedon." ],
      "venue" : "arXiv preprint arXiv:2011.00362.",
      "citeRegEx" : "Jaiswal et al\\.,? 2020",
      "shortCiteRegEx" : "Jaiswal et al\\.",
      "year" : 2020
    }, {
      "title" : "What does BERT learn about the structure of language",
      "author" : [ "Ganesh Jawahar", "Benoı̂t Sagot", "Djamé Seddah" ],
      "venue" : null,
      "citeRegEx" : "Jawahar et al\\.,? \\Q2019\\E",
      "shortCiteRegEx" : "Jawahar et al\\.",
      "year" : 2019
    }, {
      "title" : "SMART: Robust and efficient fine-tuning for pretrained natural language models through principled regularized optimization",
      "author" : [ "Haoming Jiang", "Pengcheng He", "Weizhu Chen", "Xiaodong Liu", "Jianfeng Gao", "Tuo Zhao." ],
      "venue" : "ACL.",
      "citeRegEx" : "Jiang et al\\.,? 2020",
      "shortCiteRegEx" : "Jiang et al\\.",
      "year" : 2020
    }, {
      "title" : "Contrastive representation learning: A framework and review",
      "author" : [ "Phuc H Le-Khac", "Graham Healy", "Alan F Smeaton." ],
      "venue" : "IEEE Access.",
      "citeRegEx" : "Le.Khac et al\\.,? 2020",
      "shortCiteRegEx" : "Le.Khac et al\\.",
      "year" : 2020
    }, {
      "title" : "On the sentence embeddings from pre-trained language models",
      "author" : [ "Bohan Li", "Hao Zhou", "Junxian He", "Mingxuan Wang", "Yiming Yang", "Lei Li." ],
      "venue" : "EMNLP.",
      "citeRegEx" : "Li et al\\.,? 2020",
      "shortCiteRegEx" : "Li et al\\.",
      "year" : 2020
    }, {
      "title" : "Roberta: A robustly optimized bert pretraining approach",
      "author" : [ "Yinhan Liu", "Myle Ott", "Naman Goyal", "Jingfei Du", "Mandar Joshi", "Danqi Chen", "Omer Levy", "Mike Lewis", "Luke Zettlemoyer", "Veselin Stoyanov." ],
      "venue" : "arXiv preprint arXiv:1907.11692.",
      "citeRegEx" : "Liu et al\\.,? 2019",
      "shortCiteRegEx" : "Liu et al\\.",
      "year" : 2019
    }, {
      "title" : "An efficient framework for learning sentence representations",
      "author" : [ "Lajanugen Logeswaran", "Honglak Lee." ],
      "venue" : "ICLR.",
      "citeRegEx" : "Logeswaran and Lee.,? 2018",
      "shortCiteRegEx" : "Logeswaran and Lee.",
      "year" : 2018
    }, {
      "title" : "A SICK cure for the evaluation of compositional distributional semantic models",
      "author" : [ "Marco Marelli", "Stefano Menini", "Marco Baroni", "Luisa Bentivogli", "Raffaella Bernardi", "Roberto Zamparelli." ],
      "venue" : "LREC.",
      "citeRegEx" : "Marelli et al\\.,? 2014",
      "shortCiteRegEx" : "Marelli et al\\.",
      "year" : 2014
    }, {
      "title" : "Distributed representations of words and phrases and their compositionality",
      "author" : [ "Tomas Mikolov", "Ilya Sutskever", "Kai Chen", "Greg S Corrado", "Jeff Dean." ],
      "venue" : "NeurIPS.",
      "citeRegEx" : "Mikolov et al\\.,? 2013",
      "shortCiteRegEx" : "Mikolov et al\\.",
      "year" : 2013
    }, {
      "title" : "Virtual adversarial training: a regularization method for supervised and semisupervised learning",
      "author" : [ "Takeru Miyato", "Shin-ichi Maeda", "Masanori Koyama", "Shin Ishii." ],
      "venue" : "IEEE transactions on pattern analysis and machine intelligence.",
      "citeRegEx" : "Miyato et al\\.,? 2018",
      "shortCiteRegEx" : "Miyato et al\\.",
      "year" : 2018
    }, {
      "title" : "On the stability of fine-tuning bert: Misconceptions, explanations, and strong baselines",
      "author" : [ "Marius Mosbach", "Maksym Andriushchenko", "Dietrich Klakow." ],
      "venue" : "arXiv preprint arXiv:2006.04884.",
      "citeRegEx" : "Mosbach et al\\.,? 2020",
      "shortCiteRegEx" : "Mosbach et al\\.",
      "year" : 2020
    }, {
      "title" : "Facebook fair’s wmt19 news translation task submission",
      "author" : [ "Nathan Ng", "Kyra Yee", "Alexei Baevski", "Myle Ott", "Michael Auli", "Sergey Edunov." ],
      "venue" : "Proceedings of the Fourth Conference on Machine Translation (Volume 2: Shared Task Papers, Day 1).",
      "citeRegEx" : "Ng et al\\.,? 2019",
      "shortCiteRegEx" : "Ng et al\\.",
      "year" : 2019
    }, {
      "title" : "Glove: Global vectors for word representation",
      "author" : [ "Jeffrey Pennington", "Richard Socher", "Christopher D Manning." ],
      "venue" : "EMNLP.",
      "citeRegEx" : "Pennington et al\\.,? 2014",
      "shortCiteRegEx" : "Pennington et al\\.",
      "year" : 2014
    }, {
      "title" : "SentenceBERT: Sentence embeddings using Siamese BERTnetworks",
      "author" : [ "Nils Reimers", "Iryna Gurevych." ],
      "venue" : "EMNLP-IJCNLP.",
      "citeRegEx" : "Reimers and Gurevych.,? 2019",
      "shortCiteRegEx" : "Reimers and Gurevych.",
      "year" : 2019
    }, {
      "title" : "Improving neural machine translation models with monolingual data",
      "author" : [ "Rico Sennrich", "Barry Haddow", "Alexandra Birch." ],
      "venue" : "ACL.",
      "citeRegEx" : "Sennrich et al\\.,? 2016",
      "shortCiteRegEx" : "Sennrich et al\\.",
      "year" : 2016
    }, {
      "title" : "ECNU at SemEval-2017 task 1: Leverage kernel-based traditional NLP features and neural networks to build a universal model for multilingual and cross-lingual semantic textual similarity",
      "author" : [ "Junfeng Tian", "Zhiheng Zhou", "Man Lan", "Yuanbin Wu." ],
      "venue" : "In",
      "citeRegEx" : "Tian et al\\.,? 2017",
      "shortCiteRegEx" : "Tian et al\\.",
      "year" : 2017
    }, {
      "title" : "Attention is all you need",
      "author" : [ "Ashish Vaswani", "Noam Shazeer", "Niki Parmar", "Jakob Uszkoreit", "Llion Jones", "Aidan N Gomez", "Łukasz Kaiser", "Illia Polosukhin." ],
      "venue" : "NeurIPS.",
      "citeRegEx" : "Vaswani et al\\.,? 2017",
      "shortCiteRegEx" : "Vaswani et al\\.",
      "year" : 2017
    }, {
      "title" : "GLUE: A multi-task benchmark and analysis platform for natural language understanding",
      "author" : [ "Alex Wang", "Amanpreet Singh", "Julian Michael", "Felix Hill", "Omer Levy", "Samuel R. Bowman." ],
      "venue" : "ICLR.",
      "citeRegEx" : "Wang et al\\.,? 2019",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2019
    }, {
      "title" : "Sbert-wk: A sentence embedding method by dissecting bert-based word models",
      "author" : [ "Bin Wang", "C-C Jay Kuo." ],
      "venue" : "arXiv preprint arXiv:2002.06652.",
      "citeRegEx" : "Wang and Kuo.,? 2020",
      "shortCiteRegEx" : "Wang and Kuo.",
      "year" : 2020
    }, {
      "title" : "Tsdae: Using transformer-based sequential denoising auto-encoder for unsupervised sentence embedding learning",
      "author" : [ "Kexin Wang", "Nils Reimers", "Iryna Gurevych." ],
      "venue" : "arXiv preprint arXiv:2104.06979.",
      "citeRegEx" : "Wang et al\\.,? 2021",
      "shortCiteRegEx" : "Wang et al\\.",
      "year" : 2021
    }, {
      "title" : "A broad-coverage challenge corpus for sentence understanding through inference",
      "author" : [ "Adina Williams", "Nikita Nangia", "Samuel Bowman." ],
      "venue" : "NAACL.",
      "citeRegEx" : "Williams et al\\.,? 2018",
      "shortCiteRegEx" : "Williams et al\\.",
      "year" : 2018
    }, {
      "title" : "Huggingface’s transformers: State-of-the-art natural language processing",
      "author" : [ "Thomas Wolf", "Lysandre Debut", "Victor Sanh", "Julien Chaumond", "Clement Delangue", "Anthony Moi", "Pierric Cistac", "Tim Rault", "Rémi Louf", "Morgan Funtowicz" ],
      "venue" : null,
      "citeRegEx" : "Wolf et al\\.,? \\Q2019\\E",
      "shortCiteRegEx" : "Wolf et al\\.",
      "year" : 2019
    }, {
      "title" : "Clear: Contrastive learning for sentence representation",
      "author" : [ "Zhuofeng Wu", "Sinong Wang", "Jiatao Gu", "Madian Khabsa", "Fei Sun", "Hao Ma." ],
      "venue" : "arXiv preprint arXiv:2012.15466.",
      "citeRegEx" : "Wu et al\\.,? 2020",
      "shortCiteRegEx" : "Wu et al\\.",
      "year" : 2020
    }, {
      "title" : "Unsupervised data augmentation for consistency training",
      "author" : [ "Qizhe Xie", "Zihang Dai", "Eduard Hovy", "Thang Luong", "Quoc Le." ],
      "venue" : "NeurIPS.",
      "citeRegEx" : "Xie et al\\.,? 2020",
      "shortCiteRegEx" : "Xie et al\\.",
      "year" : 2020
    }, {
      "title" : "Freelb: Enhanced adversarial training for natural language understanding",
      "author" : [ "Chen Zhu", "Yu Cheng", "Zhe Gan", "Siqi Sun", "Tom Goldstein", "Jingjing Liu." ],
      "venue" : "ICLR.",
      "citeRegEx" : "Zhu et al\\.,? 2020",
      "shortCiteRegEx" : "Zhu et al\\.",
      "year" : 2020
    }, {
      "title" : "2020), and utilize mean pooling",
      "author" : [ "Wang", "Kuo" ],
      "venue" : null,
      "citeRegEx" : "Wang and Kuo,? \\Q2020\\E",
      "shortCiteRegEx" : "Wang and Kuo",
      "year" : 2020
    } ],
    "referenceMentions" : [ {
      "referenceID" : 35,
      "context" : "Pre-trained Transformer (Vaswani et al., 2017) language models such as BERT (Devlin et al.",
      "startOffset" : 24,
      "endOffset" : 46
    }, {
      "referenceID" : 12,
      "context" : ", 2017) language models such as BERT (Devlin et al., 2019) and RoBERTa (Liu et al.",
      "startOffset" : 37,
      "endOffset" : 58
    }, {
      "referenceID" : 24,
      "context" : ", 2019) and RoBERTa (Liu et al., 2019) have been integral to achieving recent improvements in natural language understanding.",
      "startOffset" : 20,
      "endOffset" : 38
    }, {
      "referenceID" : 32,
      "context" : "1 In practice, previous studies (Reimers and Gurevych, 2019; Li et al., 2020; Hu et al., 2020) reported that naı̈vely (i.",
      "startOffset" : 32,
      "endOffset" : 94
    }, {
      "referenceID" : 23,
      "context" : "1 In practice, previous studies (Reimers and Gurevych, 2019; Li et al., 2020; Hu et al., 2020) reported that naı̈vely (i.",
      "startOffset" : 32,
      "endOffset" : 94
    }, {
      "referenceID" : 18,
      "context" : "1 In practice, previous studies (Reimers and Gurevych, 2019; Li et al., 2020; Hu et al., 2020) reported that naı̈vely (i.",
      "startOffset" : 32,
      "endOffset" : 94
    }, {
      "referenceID" : 7,
      "context" : "In a preliminary experiment, we constructed sentence embeddings by employing various combinations of different BERT layers and pooling methods, and tested them on the Semantic Textual Similarity (STS) benchmark dataset (Cer et al., 2017).",
      "startOffset" : 219,
      "endOffset" : 237
    }, {
      "referenceID" : 13,
      "context" : "As our method does not require data augmentation, which is essential in most recent contrastive learning frameworks, it is much simpler and easier to use than existing methods (Fang and Xie, 2020; Xie et al., 2020).",
      "startOffset" : 176,
      "endOffset" : 214
    }, {
      "referenceID" : 42,
      "context" : "As our method does not require data augmentation, which is essential in most recent contrastive learning frameworks, it is much simpler and easier to use than existing methods (Fang and Xie, 2020; Xie et al., 2020).",
      "startOffset" : 176,
      "endOffset" : 214
    }, {
      "referenceID" : 8,
      "context" : "Moreover, we customize the NTXent loss (Chen et al., 2020), a contrastive learning objective widely used in computer vision, for better sentence representation learning with BERT.",
      "startOffset" : 39,
      "endOffset" : 58
    }, {
      "referenceID" : 23,
      "context" : "We demonstrate that our approach outperforms competitive baselines designed for building BERT sentence vectors (Li et al., 2020; Wang and Kuo, 2020) in various environments.",
      "startOffset" : 111,
      "endOffset" : 148
    }, {
      "referenceID" : 37,
      "context" : "We demonstrate that our approach outperforms competitive baselines designed for building BERT sentence vectors (Li et al., 2020; Wang and Kuo, 2020) in various environments.",
      "startOffset" : 111,
      "endOffset" : 148
    }, {
      "referenceID" : 13,
      "context" : "More recently, several studies (Fang and Xie, 2020; Giorgi et al., 2020; Wu et al., 2020) suggest to utilize contrastive learning",
      "startOffset" : 31,
      "endOffset" : 89
    }, {
      "referenceID" : 15,
      "context" : "More recently, several studies (Fang and Xie, 2020; Giorgi et al., 2020; Wu et al., 2020) suggest to utilize contrastive learning",
      "startOffset" : 31,
      "endOffset" : 89
    }, {
      "referenceID" : 41,
      "context" : "More recently, several studies (Fang and Xie, 2020; Giorgi et al., 2020; Wu et al., 2020) suggest to utilize contrastive learning",
      "startOffset" : 31,
      "endOffset" : 89
    }, {
      "referenceID" : 33,
      "context" : ", back-translation (Sennrich et al., 2016), or prior knowledge on training data such as order information, while our method does not.",
      "startOffset" : 19,
      "endOffset" : 42
    }, {
      "referenceID" : 29,
      "context" : "It is not always trivial to fine-tune pre-trained Transformer models of gigantic size with success, especially when the number of target domain data is limited (Mosbach et al., 2020).",
      "startOffset" : 160,
      "endOffset" : 182
    }, {
      "referenceID" : 0,
      "context" : "To mitigate this training instability problem, several approaches (Aghajanyan et al., 2020; Jiang et al., 2020; Zhu et al., 2020) have been recently proposed.",
      "startOffset" : 66,
      "endOffset" : 129
    }, {
      "referenceID" : 21,
      "context" : "To mitigate this training instability problem, several approaches (Aghajanyan et al., 2020; Jiang et al., 2020; Zhu et al., 2020) have been recently proposed.",
      "startOffset" : 66,
      "endOffset" : 129
    }, {
      "referenceID" : 43,
      "context" : "To mitigate this training instability problem, several approaches (Aghajanyan et al., 2020; Jiang et al., 2020; Zhu et al., 2020) have been recently proposed.",
      "startOffset" : 66,
      "endOffset" : 129
    }, {
      "referenceID" : 5,
      "context" : "(2017), Reimers and Gurevych (2019) (SBERT) propose to compute sentence embeddings by conducting mean pooling on the last layer of BERT and then fine-tuning the pooled vectors on the natural language inference (NLI) datasets (Bowman et al., 2015; Williams et al., 2018).",
      "startOffset" : 225,
      "endOffset" : 269
    }, {
      "referenceID" : 39,
      "context" : "(2017), Reimers and Gurevych (2019) (SBERT) propose to compute sentence embeddings by conducting mean pooling on the last layer of BERT and then fine-tuning the pooled vectors on the natural language inference (NLI) datasets (Bowman et al., 2015; Williams et al., 2018).",
      "startOffset" : 225,
      "endOffset" : 269
    }, {
      "referenceID" : 6,
      "context" : "Note also that there exists concurrent work (Carlsson et al., 2021; Gao et al., 2021; Wang et al., 2021) whose motivation is analogous to ours, attempting to improve BERT sentence embeddings in an unsupervised fashion.",
      "startOffset" : 44,
      "endOffset" : 104
    }, {
      "referenceID" : 14,
      "context" : "Note also that there exists concurrent work (Carlsson et al., 2021; Gao et al., 2021; Wang et al., 2021) whose motivation is analogous to ours, attempting to improve BERT sentence embeddings in an unsupervised fashion.",
      "startOffset" : 44,
      "endOffset" : 104
    }, {
      "referenceID" : 38,
      "context" : "Note also that there exists concurrent work (Carlsson et al., 2021; Gao et al., 2021; Wang et al., 2021) whose motivation is analogous to ours, attempting to improve BERT sentence embeddings in an unsupervised fashion.",
      "startOffset" : 44,
      "endOffset" : 104
    }, {
      "referenceID" : 13,
      "context" : "The problem is that sentence-level contrastive learning usually requires data augmentation (Fang and Xie, 2020) or prior knowledge on training data, e.",
      "startOffset" : 91,
      "endOffset" : 111
    }, {
      "referenceID" : 25,
      "context" : ", order information (Logeswaran and Lee, 2018), to make plausible positive/negative samples.",
      "startOffset" : 20,
      "endOffset" : 46
    }, {
      "referenceID" : 28,
      "context" : "A possible solution is to leverage (virtual) adversarial training (Miyato et al., 2018) in the embedding space.",
      "startOffset" : 66,
      "endOffset" : 87
    }, {
      "referenceID" : 20,
      "context" : "This simple choice for the sampler implies that each hi,k has the same importance, which is persuasive considering it is known that different BERT layers are specialized at capturing disparate linguistic concepts (Jawahar et al., 2019).",
      "startOffset" : 213,
      "endOffset" : 235
    }, {
      "referenceID" : 8,
      "context" : "Next, we collect the set of the computed vectors into X = {x|x ∈ {ci} ∪ {hi}}, and for all xm ∈ X, we compute the NT-Xent loss (Chen et al., 2020):",
      "startOffset" : 127,
      "endOffset" : 146
    }, {
      "referenceID" : 12,
      "context" : "1 General Configurations In terms of pre-trained encoders, we leverage BERT (Devlin et al., 2019) for English datasets and MBERT, which is a multilingual variant of BERT, for multilingual datasets.",
      "startOffset" : 76,
      "endOffset" : 97
    }, {
      "referenceID" : 24,
      "context" : "We also employ RoBERTa (Liu et al., 2019) and SBERT (Reimers and Gurevych, 2019) in some cases to evaluate the generalizability of tested methods.",
      "startOffset" : 23,
      "endOffset" : 41
    }, {
      "referenceID" : 32,
      "context" : ", 2019) and SBERT (Reimers and Gurevych, 2019) in some cases to evaluate the generalizability of tested methods.",
      "startOffset" : 18,
      "endOffset" : 46
    }, {
      "referenceID" : 40,
      "context" : "Our implementation is based on the HuggingFace’s Transformers (Wolf et al., 2019) and SBERT (Reimers and Gurevych, 2019) library, and publicly available at https://github.",
      "startOffset" : 62,
      "endOffset" : 81
    }, {
      "referenceID" : 32,
      "context" : ", 2019) and SBERT (Reimers and Gurevych, 2019) library, and publicly available at https://github.",
      "startOffset" : 18,
      "endOffset" : 46
    }, {
      "referenceID" : 7,
      "context" : "Following the literature, we evaluate models on 7 datasets in total, that is, STS-B (Cer et al., 2017), SICK-R (Marelli et al.",
      "startOffset" : 84,
      "endOffset" : 102
    }, {
      "referenceID" : 26,
      "context" : ", 2017), SICK-R (Marelli et al., 2014), and STS12-16 (Agirre et al.",
      "startOffset" : 16,
      "endOffset" : 38
    }, {
      "referenceID" : 31,
      "context" : ", Glove (Pennington et al., 2014) mean embeddings and Universal Sentence Encoder (USE; Cer et al.",
      "startOffset" : 8,
      "endOffset" : 33
    }, {
      "referenceID" : 1,
      "context" : "Baseline (Agirre et al., 2014) UMCC-DLSI-run2 (Rank #1) 80.",
      "startOffset" : 9,
      "endOffset" : 30
    }, {
      "referenceID" : 10,
      "context" : "We also evaluate BERT sentence vectors using the SentEval (Conneau and Kiela, 2018) toolkit.",
      "startOffset" : 58,
      "endOffset" : 83
    }, {
      "referenceID" : 36,
      "context" : "Briefly reporting, we identify that the original BERT(-base) and one tuned with SG-OPT show comparable performance on the GLUE (Wang et al., 2019) validation set, implying that our method does not influence much on BERT’s supervised fine-tuning.",
      "startOffset" : 127,
      "endOffset" : 146
    }, {
      "referenceID" : 5,
      "context" : "To explore this issue, we apply SG-OPT on BERT-base by leveraging the mix of NLI datasets (Bowman et al., 2015; Williams et al., 2018) instead of STS-B, and observe the difference.",
      "startOffset" : 90,
      "endOffset" : 134
    }, {
      "referenceID" : 39,
      "context" : "To explore this issue, we apply SG-OPT on BERT-base by leveraging the mix of NLI datasets (Bowman et al., 2015; Williams et al., 2018) instead of STS-B, and observe the difference.",
      "startOffset" : 90,
      "endOffset" : 134
    } ],
    "year" : 2021,
    "abstractText" : "Although BERT and its variants have reshaped the NLP landscape, it still remains unclear how best to derive sentence embeddings from such pre-trained Transformers. In this work, we propose a contrastive learning method that utilizes self-guidance for improving the quality of BERT sentence representations. Our method fine-tunes BERT in a self-supervised fashion, does not rely on data augmentation, and enables the usual [CLS] token embeddings to function as sentence vectors. Moreover, we redesign the contrastive learning objective (NT-Xent) and apply it to sentence representation learning. We demonstrate with extensive experiments that our approach is more effective than competitive baselines on diverse sentence-related tasks. We also show it is efficient at inference and robust to domain shifts.",
    "creator" : "LaTeX with hyperref"
  }
}